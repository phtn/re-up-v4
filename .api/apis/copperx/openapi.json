{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/storage/files/{storageType}": {
      "post": {
        "operationId": "StorageFileController_post",
        "parameters": [
          {
            "name": "storageType",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filePath": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filePath",
                    "imageUrl"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Storage Files"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "operationId": "AuthController_getCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "accountType": {
                      "type": "string",
                      "enum": [
                        "email",
                        "wallet"
                      ]
                    },
                    "profilePicture": {
                      "type": "string"
                    },
                    "flags": {
                      "type": "object",
                      "properties": {
                        "introModal": {
                          "type": "boolean"
                        }
                      }
                    },
                    "phone": {
                      "type": "string"
                    },
                    "position": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "active",
                        "suspended"
                      ]
                    },
                    "organization": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "active",
                            "suspended"
                          ]
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentSetting": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "paymentMethodTypes": {
                              "type": "array",
                              "description": "A list of the types of payment methods",
                              "example": "wallet",
                              "minItems": 1,
                              "maxItems": 1,
                              "items": {
                                "type": "string",
                                "enum": [
                                  "superfluid",
                                  "wallet",
                                  "allowance_based_recurring",
                                  "stripe",
                                  "binance_pay"
                                ]
                              }
                            },
                            "allowedChains": {
                              "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                              "example": [
                                {
                                  "chainId": 137
                                }
                              ],
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "chainId": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "blacklistCurrencies": {
                                    "type": "array",
                                    "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                    "example": [
                                      "usdc"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "chainId"
                                ]
                              }
                            },
                            "allowedCurrencies": {
                              "type": "array",
                              "description": "The list of currencies allowed for the payment.",
                              "example": [
                                "usdc",
                                "usdt"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ]
                              }
                            },
                            "preferredChainId": {
                              "type": "number",
                              "example": 1,
                              "description": "The preferred chain's id"
                            },
                            "preferredCurrency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The preferred currency for payment"
                            },
                            "allowSwap": {
                              "type": "boolean",
                              "description": "Whether the user can swap the payment currency",
                              "default": false
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "features": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "type",
                        "status",
                        "ownerId"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "email",
                    "role",
                    "accountType",
                    "status",
                    "organization"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization": {
      "get": {
        "operationId": "OrganizationController_getOrganizationInfo",
        "summary": "Get organization info",
        "description": "Returns the organization info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Organization's name"
                    },
                    "type": {
                      "type": "string",
                      "description": "Organization's type"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "active",
                        "suspended"
                      ],
                      "description": "Organization's status"
                    },
                    "kind": {
                      "description": "Organization's kind",
                      "type": "string",
                      "enum": [
                        "individual",
                        "business"
                      ]
                    },
                    "ownerId": {
                      "type": "string",
                      "description": "User's id who owns organization"
                    },
                    "noOfEmployees": {
                      "type": "string",
                      "description": "No of employees"
                    },
                    "monthlyPaymentVolume": {
                      "type": "string",
                      "description": "Monthly payment volume"
                    },
                    "addresses": {
                      "description": "Withdrawal addresses",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Withdrawal address id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Withdrawal address name"
                          },
                          "address": {
                            "type": "string",
                            "description": "Withdrawal address"
                          },
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Withdrawal address chain id"
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "Is default withdrawal address"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "address",
                          "chainId",
                          "isDefault"
                        ]
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "Organization's support email"
                    },
                    "phone": {
                      "type": "string",
                      "description": "Organization's support phone number"
                    },
                    "addressDetails": {
                      "description": "Organization's business address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "line1": {
                              "type": "string"
                            },
                            "line2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "brandLogo": {
                      "type": "string",
                      "description": "Brand logo url"
                    },
                    "brandColor": {
                      "type": "string",
                      "description": "Brand color in hex format"
                    },
                    "supportUrl": {
                      "type": "string",
                      "description": "Organization's support url"
                    },
                    "termsUrl": {
                      "type": "string",
                      "description": "Organization's terms and conditions url"
                    },
                    "privacyUrl": {
                      "type": "string",
                      "description": "Organization's privacy policy url"
                    },
                    "websiteUrl": {
                      "type": "string",
                      "description": "Organization's website url"
                    },
                    "featureAccessRequests": {
                      "description": "Feature access requests from organization",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "status",
                    "kind",
                    "ownerId",
                    "noOfEmployees",
                    "monthlyPaymentVolume",
                    "addresses",
                    "brandLogo",
                    "brandColor",
                    "featureAccessRequests"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization/brand": {
      "put": {
        "operationId": "OrganizationController_updateBranding",
        "summary": "Update branding",
        "description": "Updates the organization branding which will be reflected on payment pages, invoices, etc.",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "brandLogo": {
                        "type": "string",
                        "format": "binary",
                        "description": "Brand logo file"
                      },
                      "brandColor": {
                        "type": "string",
                        "description": "Brand color in hex format"
                      }
                    },
                    "required": [
                      "brandColor"
                    ]
                  },
                  {
                    "properties": {
                      "brandLogo": {
                        "type": "string",
                        "format": "binary"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Organization's name"
                    },
                    "type": {
                      "type": "string",
                      "description": "Organization's type"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "active",
                        "suspended"
                      ],
                      "description": "Organization's status"
                    },
                    "kind": {
                      "description": "Organization's kind",
                      "type": "string",
                      "enum": [
                        "individual",
                        "business"
                      ]
                    },
                    "ownerId": {
                      "type": "string",
                      "description": "User's id who owns organization"
                    },
                    "noOfEmployees": {
                      "type": "string",
                      "description": "No of employees"
                    },
                    "monthlyPaymentVolume": {
                      "type": "string",
                      "description": "Monthly payment volume"
                    },
                    "addresses": {
                      "description": "Withdrawal addresses",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Withdrawal address id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Withdrawal address name"
                          },
                          "address": {
                            "type": "string",
                            "description": "Withdrawal address"
                          },
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Withdrawal address chain id"
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "Is default withdrawal address"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "address",
                          "chainId",
                          "isDefault"
                        ]
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "Organization's support email"
                    },
                    "phone": {
                      "type": "string",
                      "description": "Organization's support phone number"
                    },
                    "addressDetails": {
                      "description": "Organization's business address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "line1": {
                              "type": "string"
                            },
                            "line2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "brandLogo": {
                      "type": "string",
                      "description": "Brand logo url"
                    },
                    "brandColor": {
                      "type": "string",
                      "description": "Brand color in hex format"
                    },
                    "supportUrl": {
                      "type": "string",
                      "description": "Organization's support url"
                    },
                    "termsUrl": {
                      "type": "string",
                      "description": "Organization's terms and conditions url"
                    },
                    "privacyUrl": {
                      "type": "string",
                      "description": "Organization's privacy policy url"
                    },
                    "websiteUrl": {
                      "type": "string",
                      "description": "Organization's website url"
                    },
                    "featureAccessRequests": {
                      "description": "Feature access requests from organization",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "status",
                    "kind",
                    "ownerId",
                    "noOfEmployees",
                    "monthlyPaymentVolume",
                    "addresses",
                    "brandLogo",
                    "brandColor",
                    "featureAccessRequests"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization/brand-logo": {
      "delete": {
        "operationId": "OrganizationController_deleteBrandLogo",
        "summary": "Delete Brand Logo",
        "description": "Delete Brand Logo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "operationId": "UserController_getUsers",
        "summary": "List of users",
        "description": "Returns the list of users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "profilePicture": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "position": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "active",
                          "suspended"
                        ]
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "flags": {
                        "type": "object",
                        "properties": {
                          "introModal": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "required": [
                      "id",
                      "firstName",
                      "lastName",
                      "role",
                      "status"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/users/{id}": {
      "delete": {
        "operationId": "UserController_deleteUser",
        "summary": "Delete a user",
        "description": "Deletes a user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/users/{id}/role": {
      "put": {
        "operationId": "UserController_updateUserRole",
        "summary": "Update a user role",
        "description": "Updates a user role",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string"
                  }
                },
                "required": [
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "profilePicture": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "position": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "active",
                        "suspended"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "flags": {
                      "type": "object",
                      "properties": {
                        "introModal": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "role",
                    "status"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization/withdrawal-addresses": {
      "get": {
        "operationId": "WithdrawalAddressController_getAll",
        "summary": "List of withdrawal addresses",
        "description": "Returns the list of withdrawal addresses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Withdrawal address id"
                      },
                      "name": {
                        "type": "string",
                        "description": "Withdrawal address name"
                      },
                      "address": {
                        "type": "string",
                        "description": "Withdrawal address"
                      },
                      "chainId": {
                        "type": "number",
                        "example": 1,
                        "description": "Withdrawal address chain id"
                      },
                      "isDefault": {
                        "type": "boolean",
                        "description": "Is default withdrawal address"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Withdrawal address creation date"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Withdrawal address update date"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "address",
                      "chainId",
                      "isDefault",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Withdrawal Addresses"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "WithdrawalAddressController_create",
        "summary": "Create a withdrawal address",
        "description": "Withdrawal Addresses are used to receive funds from the platform. You can create as many withdrawal addresses you want, but only one can be marked as default.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Withdrawal address name"
                  },
                  "address": {
                    "type": "string",
                    "description": "Withdrawal address"
                  },
                  "chainId": {
                    "type": "number",
                    "example": 1,
                    "description": "Withdrawal address chain id"
                  }
                },
                "required": [
                  "name",
                  "address",
                  "chainId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Withdrawal address id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Withdrawal address name"
                    },
                    "address": {
                      "type": "string",
                      "description": "Withdrawal address"
                    },
                    "chainId": {
                      "type": "number",
                      "example": 1,
                      "description": "Withdrawal address chain id"
                    },
                    "isDefault": {
                      "type": "boolean",
                      "description": "Is default withdrawal address"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Withdrawal address creation date"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Withdrawal address update date"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "address",
                    "chainId",
                    "isDefault",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Withdrawal Addresses"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization/withdrawal-addresses/{id}": {
      "get": {
        "operationId": "WithdrawalAddressController_get",
        "summary": "Get a withdrawal address",
        "description": "Returns a withdrawal address",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Withdrawal address id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Withdrawal address name"
                    },
                    "address": {
                      "type": "string",
                      "description": "Withdrawal address"
                    },
                    "chainId": {
                      "type": "number",
                      "example": 1,
                      "description": "Withdrawal address chain id"
                    },
                    "isDefault": {
                      "type": "boolean",
                      "description": "Is default withdrawal address"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Withdrawal address creation date"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Withdrawal address update date"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "address",
                    "chainId",
                    "isDefault",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Withdrawal Addresses"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "WithdrawalAddressController_update",
        "summary": "Update a withdrawal address",
        "description": "Updates a withdrawal address",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Withdrawal address name"
                  },
                  "address": {
                    "type": "string",
                    "description": "Withdrawal address"
                  }
                },
                "required": [
                  "name",
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Withdrawal address id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Withdrawal address name"
                    },
                    "address": {
                      "type": "string",
                      "description": "Withdrawal address"
                    },
                    "chainId": {
                      "type": "number",
                      "example": 1,
                      "description": "Withdrawal address chain id"
                    },
                    "isDefault": {
                      "type": "boolean",
                      "description": "Is default withdrawal address"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Withdrawal address creation date"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Withdrawal address update date"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "address",
                    "chainId",
                    "isDefault",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Withdrawal Addresses"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "WithdrawalAddressController_delete",
        "summary": "Delete a withdrawal address",
        "description": "Deletes a withdrawal address. If you delete your default address, then the first address will be marked as default and you will receive next payments to that address.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Withdrawal Addresses"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization/withdrawal-addresses/{id}/mark-as-default": {
      "post": {
        "operationId": "WithdrawalAddressController_markAsDefault",
        "summary": "Mark a withdrawal address as default",
        "description": "Marks a withdrawal address as default.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Withdrawal Addresses"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization/payment-setting": {
      "get": {
        "operationId": "PaymentSettingController_get",
        "summary": "Get payment setting info",
        "description": "Returns payment setting info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "description": "A list of the types of payment methods",
                      "example": "wallet",
                      "minItems": 1,
                      "maxItems": 1,
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "allowedChains": {
                      "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                      "example": [
                        {
                          "chainId": 137
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "number",
                            "example": 1
                          },
                          "blacklistCurrencies": {
                            "type": "array",
                            "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                            "example": [
                              "usdc"
                            ],
                            "items": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ]
                            }
                          }
                        },
                        "required": [
                          "chainId"
                        ]
                      }
                    },
                    "allowedCurrencies": {
                      "type": "array",
                      "description": "The list of currencies allowed for the payment.",
                      "example": [
                        "usdc",
                        "usdt"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    },
                    "preferredChainId": {
                      "type": "number",
                      "example": 1,
                      "description": "The preferred chain's id"
                    },
                    "preferredCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "The preferred currency for payment"
                    },
                    "allowSwap": {
                      "type": "boolean",
                      "description": "Whether the user can swap the payment currency",
                      "default": false
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Setting"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/organization/invoice-setting": {
      "get": {
        "operationId": "InvoiceSettingController_get",
        "summary": "Get invoice setting info",
        "description": "Returns invoice setting info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "numberingScheme": {
                      "description": "The preferred numbering scheme for invoice",
                      "default": "customer_level",
                      "type": "string",
                      "enum": [
                        "merchant_level",
                        "customer_level"
                      ]
                    },
                    "invoicePrefix": {
                      "type": "string",
                      "description": "The preferred invoice id prefix"
                    },
                    "nextInvoiceSequence": {
                      "type": "number",
                      "example": 1,
                      "description": "The next invoice starting sequence"
                    },
                    "description": {
                      "type": "string",
                      "description": "The default invoice description"
                    },
                    "footer": {
                      "type": "string",
                      "description": "The default invoice footer"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoice Setting"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invites": {
      "get": {
        "operationId": "UserInviteController_getInvites",
        "summary": "List of user invites",
        "description": "Returns the list of user invites",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "inviteUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "accepted",
                          "rejected"
                        ]
                      },
                      "expireAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "email",
                      "role",
                      "organizationId",
                      "inviteUrl",
                      "status",
                      "expireAt"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "UserInvites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "UserInviteController_inviteUser",
        "summary": "Invite a user",
        "description": "Invite a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string"
                    },
                    "inviteUrl": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "accepted",
                        "rejected"
                      ]
                    },
                    "expireAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "role",
                    "organizationId",
                    "inviteUrl",
                    "status",
                    "expireAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "UserInvites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invites/{id}": {
      "delete": {
        "operationId": "UserInviteController_removeInvite",
        "summary": "Remove user invitation",
        "description": "Remove user invitation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "UserInvites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invites/{id}/resend": {
      "post": {
        "operationId": "UserInviteController_resendInvite",
        "summary": "Resend user invitation",
        "description": "Resend user invitation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string"
                    },
                    "inviteUrl": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "accepted",
                        "rejected"
                      ]
                    },
                    "expireAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "role",
                    "organizationId",
                    "inviteUrl",
                    "status",
                    "expireAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "UserInvites"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/checkout/sessions": {
      "post": {
        "operationId": "SessionsController_create",
        "summary": "Create a new checkout session",
        "description": "Checkout Sessions allow you to create one-off payments in a fixed or variable amount or start subscriptions for your customers. You should create a new Checkout Session for each payment attempt. Once you create a Checkout Session on your server, you need to redirect user to the Checkout Session URL to complete the payment flow.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mode": {
                    "description": "The mode of the Checkout Session.",
                    "example": "payment",
                    "type": "string",
                    "enum": [
                      "payment",
                      "subscription"
                    ]
                  },
                  "customerId": {
                    "type": "string",
                    "description": "The ID of the customer if you want to associate the session with a customer"
                  },
                  "clientReferenceId": {
                    "type": "string",
                    "description": "Unique ID string used to identify the session in your backend. This can be your payment ID, cart ID, or similar used to link this Checkout Session with your internal system."
                  },
                  "customerCreation": {
                    "description": "Whether to create a customer for the session. If required, a customer will be created for subsequent payments",
                    "type": "string",
                    "enum": [
                      "if_required",
                      "always"
                    ]
                  },
                  "customerUpdate": {
                    "description": "The customer update settings to use for this checkout to update existing customer details",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "enum": [
                              "auto",
                              "never"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "enum": [
                              "auto",
                              "never"
                            ]
                          },
                          "shipping": {
                            "type": "string",
                            "enum": [
                              "auto",
                              "never"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "submitType": {
                    "default": "pay",
                    "description": "The type of submit button to display on the Checkout page",
                    "type": "string",
                    "enum": [
                      "pay",
                      "book",
                      "donate"
                    ]
                  },
                  "metadata": {
                    "type": "object",
                    "description": "A set of key-value pairs that you can attach to a Checkout Session object"
                  },
                  "nameCollection": {
                    "type": "boolean",
                    "description": "Whether to collect the customer's name. Default: false"
                  },
                  "emailCollection": {
                    "type": "boolean",
                    "description": "Whether to collect the customer's email address. Default: false"
                  },
                  "phoneNumberCollection": {
                    "type": "boolean",
                    "description": "Whether to collect the customer's phone number Default: false"
                  },
                  "shippingAddressCollection": {
                    "type": "boolean",
                    "description": "Whether to collect the customer's shipping address. Default: false"
                  },
                  "billingAddressCollection": {
                    "type": "boolean",
                    "description": "Whether to collect the customer's billing address. Default: false"
                  },
                  "customFields": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "text",
                                "numeric",
                                "dropdown"
                              ]
                            },
                            "label": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "custom"
                                  ]
                                },
                                "custom": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "custom"
                              ]
                            },
                            "optional": {
                              "type": "boolean",
                              "default": false
                            },
                            "text": {
                              "type": "object",
                              "properties": {
                                "maximumLength": {
                                  "type": "number",
                                  "example": 1
                                },
                                "minimumLength": {
                                  "type": "number",
                                  "example": 1
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ]
                            },
                            "numeric": {
                              "type": "object",
                              "properties": {
                                "maximumLength": {
                                  "type": "number",
                                  "example": 1
                                },
                                "minimumLength": {
                                  "type": "number",
                                  "example": 1
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ]
                            },
                            "dropdown": {
                              "type": "object",
                              "properties": {
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "label",
                                      "value"
                                    ]
                                  }
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value"
                              ]
                            }
                          },
                          "required": [
                            "key",
                            "type",
                            "label",
                            "optional"
                          ]
                        }
                      }
                    }
                  },
                  "afterCompletion": {
                    "description": "The action to take after the payment is completed. You can choose to redirect user to your application or use the default payment confirmation page provided by Copperx",
                    "type": "string",
                    "enum": [
                      "redirect",
                      "hosted_confirmation"
                    ]
                  },
                  "afterCompletionConfirmMsg": {
                    "type": "string",
                    "description": "The message to show after successful payment. Only applicable when `afterCompletion` is set to `hosted_confirmation`"
                  },
                  "allowPromotionCodes": {
                    "type": "boolean",
                    "description": "Enables user redeemable promotion codes."
                  },
                  "expiresAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The time at which the session will expire. Default: 1 Hour"
                  },
                  "successUrl": {
                    "type": "string",
                    "description": "The URL to redirect the customer to after payment is completed. Only applicable when `afterCompletion` is set to `redirect`"
                  },
                  "cancelUrl": {
                    "type": "string",
                    "description": "The URL to redirect the customer to if they decide to cancel payment"
                  },
                  "customerData": {
                    "description": "The checkout sessions's customer data to be prefilled",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "organizationName": {
                            "type": "string",
                            "description": "The organization name"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "postalCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "taxIds": {
                            "type": "object",
                            "properties": {
                              "object": {
                                "type": "string"
                              },
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "lineItems": {
                    "description": "The line items to be used in checkout session. Line items are the individual prices that the customer will be charged for",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "data": {
                            "minItems": 1,
                            "maxItems": 1,
                            "description": "The line items to be used in checkout session",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "priceId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                  "description": "The id of the price to use in checkout session"
                                },
                                "priceData": {
                                  "description": "The price data to be created to use in checkout session",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "currency": {
                                          "type": "string",
                                          "enum": [
                                            "usdc",
                                            "usdt",
                                            "dai",
                                            "btc",
                                            "eth",
                                            "matic",
                                            "bnb",
                                            "sol",
                                            "busd",
                                            "food",
                                            "tfi"
                                          ],
                                          "description": "The currency symbol"
                                        },
                                        "interval": {
                                          "description": "The interval at which to bill for this price. Only required for subscriptions",
                                          "type": "string",
                                          "enum": [
                                            "day",
                                            "week",
                                            "month",
                                            "year"
                                          ]
                                        },
                                        "intervalCount": {
                                          "type": "number",
                                          "example": 1,
                                          "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                        },
                                        "unitAmount": {
                                          "format": "int64",
                                          "type": "integer",
                                          "example": "9223372036854775807",
                                          "description": "The unit amount in 8 decimals, represented as a whole integer"
                                        },
                                        "productId": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                          "description": "The id of the product for which this price is associated"
                                        },
                                        "productData": {
                                          "description": "The product data to be created to link with this price",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "The name of the product. Displayed on the checkout page"
                                                },
                                                "description": {
                                                  "type": "string",
                                                  "description": "The description of the product. Displayed on the checkout page"
                                                },
                                                "images": {
                                                  "maxItems": 8,
                                                  "description": "The url of product images. Displayed on the checkout page",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "unitLabel": {
                                                  "type": "string",
                                                  "description": "The label of the unit of the product. Displayed on the checkout page"
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "description": "The url of the product"
                                                },
                                                "metadata": {
                                                  "type": "object",
                                                  "description": "The metadata of the product"
                                                },
                                                "visibility": {
                                                  "description": "The visibility of the product",
                                                  "type": "string",
                                                  "enum": [
                                                    10,
                                                    20
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          ]
                                        },
                                        "type": {
                                          "description": "The type of the price",
                                          "type": "string",
                                          "enum": [
                                            "one_time",
                                            "recurring",
                                            "streaming"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "currency",
                                        "unitAmount"
                                      ]
                                    }
                                  ]
                                },
                                "quantity": {
                                  "type": "number",
                                  "example": 1,
                                  "default": 1,
                                  "description": "The quantity of the line item"
                                },
                                "periodStart": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "periodEnd": {
                                  "format": "date-time",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    ]
                  },
                  "paymentSetting": {
                    "description": "The payment method settings to use for this checkout's payment",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "allowedChains": {
                            "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                            "example": [
                              {
                                "chainId": 137
                              }
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "chainId": {
                                  "type": "number",
                                  "example": 1
                                },
                                "blacklistCurrencies": {
                                  "type": "array",
                                  "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                  "example": [
                                    "usdc"
                                  ],
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "chainId"
                              ]
                            }
                          },
                          "preferredChainId": {
                            "type": "number",
                            "example": 1,
                            "description": "The preferred chain's id"
                          },
                          "allowSwap": {
                            "type": "boolean",
                            "description": "Whether the user can swap the payment currency",
                            "default": false
                          },
                          "allowFiatPayment": {
                            "type": "boolean",
                            "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "successUrl",
                  "lineItems"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id of the checkout session"
                    },
                    "mode": {
                      "description": "The mode of the Checkout Session.",
                      "example": "payment",
                      "type": "string",
                      "enum": [
                        "payment",
                        "subscription"
                      ]
                    },
                    "paymentLinkId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The payment link id used to create this checkout session"
                    },
                    "subscriptionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The subscription created from this checkout session"
                    },
                    "invoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The invoice created from this checkout session"
                    },
                    "amountTotal": {
                      "format": "int64",
                      "type": "integer",
                      "example": 100000000,
                      "description": "A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
                      "minimum": 0
                    },
                    "amountSubtotal": {
                      "format": "int64",
                      "type": "integer",
                      "example": 100000000,
                      "description": "Amount subtotal is total of all line items excluding tax, shipping, application fee and discount. A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
                      "minimum": 0
                    },
                    "amountDetails": {
                      "description": "The amount details of the payment",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "description": "The currency of the payment",
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ]
                            },
                            "amountTotal": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment after discounts and taxes"
                            },
                            "amountSubtotal": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment before discounts and taxes"
                            },
                            "amountDiscount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment discount"
                            },
                            "amountTax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment tax"
                            },
                            "discountAmounts": {
                              "description": "The list of discount amounts",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The amount of the discount"
                                  },
                                  "couponId": {
                                    "type": "string",
                                    "description": "The coupon id of the discount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "couponId"
                                ]
                              }
                            },
                            "taxAmounts": {
                              "description": "The list of tax amounts",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The amount of the tax"
                                  },
                                  "taxId": {
                                    "type": "string",
                                    "description": "The tax id of the tax"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "taxId"
                                ]
                              }
                            }
                          },
                          "required": [
                            "currency",
                            "amountTotal",
                            "amountSubtotal",
                            "amountDiscount",
                            "amountTax",
                            "discountAmounts",
                            "taxAmounts"
                          ]
                        }
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Currency of the amount",
                      "example": "usdc"
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "description": "A list of the types of payment methods (e.g. wallet) this Checkout Session is allowed to accept.",
                      "example": "wallet",
                      "minItems": 1,
                      "maxItems": 1,
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "paymentSetting": {
                      "description": "The payment method settings to use for this checkout's payment",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "paymentMethodTypes": {
                              "type": "array",
                              "description": "A list of the types of payment methods",
                              "example": "wallet",
                              "minItems": 1,
                              "maxItems": 1,
                              "items": {
                                "type": "string",
                                "enum": [
                                  "superfluid",
                                  "wallet",
                                  "allowance_based_recurring",
                                  "stripe",
                                  "binance_pay"
                                ]
                              }
                            },
                            "allowedChains": {
                              "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                              "example": [
                                {
                                  "chainId": 137
                                }
                              ],
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "chainId": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "blacklistCurrencies": {
                                    "type": "array",
                                    "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                    "example": [
                                      "usdc"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "chainId"
                                ]
                              }
                            },
                            "preferredChainId": {
                              "type": "number",
                              "example": 1,
                              "description": "The preferred chain's id"
                            },
                            "allowSwap": {
                              "type": "boolean",
                              "description": "Whether the user can swap the payment currency",
                              "default": false
                            },
                            "allowFiatPayment": {
                              "type": "boolean",
                              "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
                            }
                          }
                        }
                      ]
                    },
                    "status": {
                      "description": "The status of the session",
                      "type": "string",
                      "enum": [
                        "open",
                        "complete",
                        "incomplete",
                        "expired"
                      ]
                    },
                    "paymentStatus": {
                      "description": "The status of the payment",
                      "type": "string",
                      "enum": [
                        "unpaid",
                        "paid"
                      ]
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The time at which the session will expire. Default: 1 Hour"
                    },
                    "customerId": {
                      "type": "string",
                      "description": "The ID of the customer if you want to associate the session with a customer"
                    },
                    "customer": {
                      "description": "The customer detail from saved customer's information. This is only available when customer id is provided or customer is stored",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Customer's id"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Customer's created at"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Customer's updated at"
                            },
                            "customerReferenceId": {
                              "type": "string",
                              "description": "Customer's reference id"
                            },
                            "shipping": {
                              "description": "Customer's shipping address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email"
                                    },
                                    "phone": {
                                      "type": "string",
                                      "description": "The phone"
                                    },
                                    "organizationName": {
                                      "type": "string",
                                      "description": "The organization name"
                                    },
                                    "address": {
                                      "description": "The address",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "line1": {
                                              "type": "string"
                                            },
                                            "line2": {
                                              "type": "string"
                                            },
                                            "city": {
                                              "type": "string"
                                            },
                                            "state": {
                                              "type": "string"
                                            },
                                            "postalCode": {
                                              "type": "string"
                                            },
                                            "country": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "taxIds": {
                              "type": "object",
                              "properties": {
                                "object": {
                                  "type": "string"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "customerId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "customerId"
                                    ]
                                  }
                                }
                              }
                            },
                            "visibility": {
                              "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Customer's metadata"
                            },
                            "customerNumber": {
                              "type": "string",
                              "description": "Customer number assigned by the system"
                            }
                          },
                          "required": [
                            "id",
                            "customerNumber"
                          ]
                        }
                      ]
                    },
                    "customerDetails": {
                      "description": "The checkout sessions's customer detail",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            },
                            "taxIds": {
                              "type": "object",
                              "properties": {
                                "object": {
                                  "type": "string"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "customerId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "customerId"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "clientReferenceId": {
                      "type": "string",
                      "description": "Unique ID string used to identify the session in your backend. This can be your payment ID, cart ID, or similar used to link this Checkout Session with your internal system."
                    },
                    "customerCreation": {
                      "description": "Whether to create a customer for the session. If required, a customer will be created for subsequent payments",
                      "type": "string",
                      "enum": [
                        "if_required",
                        "always"
                      ]
                    },
                    "customerUpdate": {
                      "description": "The customer update settings to use for this checkout to update existing customer details",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "enum": [
                                "auto",
                                "never"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "enum": [
                                "auto",
                                "never"
                              ]
                            },
                            "shipping": {
                              "type": "string",
                              "enum": [
                                "auto",
                                "never"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to complete payment"
                    },
                    "successUrl": {
                      "type": "string",
                      "description": "The URL to redirect the customer to after payment is completed. Only applicable when `afterCompletion` is set to `redirect`"
                    },
                    "cancelUrl": {
                      "type": "string",
                      "description": "The URL to redirect the customer to if they decide to cancel payment"
                    },
                    "submitType": {
                      "default": "pay",
                      "description": "The type of submit button to display on the Checkout page",
                      "type": "string",
                      "enum": [
                        "pay",
                        "book",
                        "donate"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to a Checkout Session object"
                    },
                    "nameCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's name. Default: false"
                    },
                    "emailCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's email address. Default: false"
                    },
                    "phoneNumberCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's phone number Default: false"
                    },
                    "shippingAddressCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's shipping address. Default: false"
                    },
                    "billingAddressCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's billing address. Default: false"
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "numeric",
                                  "dropdown"
                                ]
                              },
                              "label": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "custom"
                                    ]
                                  },
                                  "custom": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "custom"
                                ]
                              },
                              "optional": {
                                "type": "boolean",
                                "default": false
                              },
                              "text": {
                                "type": "object",
                                "properties": {
                                  "maximumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "minimumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ]
                              },
                              "numeric": {
                                "type": "object",
                                "properties": {
                                  "maximumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "minimumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ]
                              },
                              "dropdown": {
                                "type": "object",
                                "properties": {
                                  "options": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "value"
                                      ]
                                    }
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ]
                              }
                            },
                            "required": [
                              "key",
                              "type",
                              "label",
                              "optional"
                            ]
                          }
                        }
                      }
                    },
                    "afterCompletion": {
                      "description": "The action to take after the payment is completed. You can choose to redirect user to your application or use the default payment confirmation page provided by Copperx",
                      "type": "string",
                      "enum": [
                        "redirect",
                        "hosted_confirmation"
                      ]
                    },
                    "afterCompletionConfirmMsg": {
                      "type": "string",
                      "description": "The message to show after successful payment. Only applicable when `afterCompletion` is set to `hosted_confirmation`"
                    },
                    "shippingDetails": {
                      "description": "The shipping address to use for this checkout",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "billingDetails": {
                      "description": "The billing address to use for this checkout",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "lineItems": {
                      "description": "The list of line items to display on the session",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "price": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "billingScheme": {
                                        "description": "The billing scheme to use for this price",
                                        "type": "string",
                                        "enum": [
                                          "per_unit"
                                        ]
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi"
                                        ],
                                        "description": "The currency symbol"
                                      },
                                      "productId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                        "description": "Product's id"
                                      },
                                      "interval": {
                                        "description": "The interval at which to bill for this price. Only required for subscriptions",
                                        "type": "string",
                                        "enum": [
                                          "day",
                                          "week",
                                          "month",
                                          "year"
                                        ]
                                      },
                                      "intervalCount": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                      },
                                      "isActive": {
                                        "type": "boolean",
                                        "description": "Whether the price is currently active"
                                      },
                                      "usageType": {
                                        "description": "The usage type of the price.",
                                        "type": "string",
                                        "enum": [
                                          "licensed"
                                        ]
                                      },
                                      "type": {
                                        "description": "The type of the price",
                                        "type": "string",
                                        "enum": [
                                          "one_time",
                                          "recurring",
                                          "streaming"
                                        ]
                                      },
                                      "unitAmount": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                      },
                                      "unitAmountDecimal": {
                                        "type": "string"
                                      },
                                      "customUnitMax": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                      },
                                      "customUnitMin": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                      },
                                      "customPreset": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                      },
                                      "customUnitAmountSuggestions": {
                                        "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "product": {
                                        "description": "The product this price belongs to",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "createdAt": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "updatedAt": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the product. Displayed on the checkout page"
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "The description of the product. Displayed on the checkout page"
                                              },
                                              "isActive": {
                                                "type": "boolean",
                                                "description": "Whether the product is currently active"
                                              },
                                              "images": {
                                                "maxItems": 8,
                                                "description": "The url of product images. Displayed on the checkout page",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "publicImages": {
                                                "description": "Product images with absolute public url",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "unitLabel": {
                                                "type": "string",
                                                "description": "The label of the unit of the product. Displayed on the checkout page"
                                              },
                                              "url": {
                                                "type": "string",
                                                "description": "The url of the product"
                                              },
                                              "defaultPriceId": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                                "description": "Product's default price id"
                                              },
                                              "metadata": {
                                                "type": "object",
                                                "description": "The metadata of the product"
                                              },
                                              "visibility": {
                                                "description": "The visibility of the product",
                                                "type": "string",
                                                "enum": [
                                                  10,
                                                  20
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name"
                                            ]
                                          }
                                        ]
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                      },
                                      "visibility": {
                                        "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                        "type": "string",
                                        "enum": [
                                          10,
                                          20
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "currency",
                                      "productId",
                                      "type",
                                      "product"
                                    ]
                                  }
                                },
                                "required": [
                                  "price"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    "addresses": {
                      "description": "The list of payment addresses associated with the session. It is the list of the addresses that will be used to pay the amount.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "checkoutSessionId": {
                            "type": "string"
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "address": {
                                "type": "string"
                              },
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi",
                                  "usd",
                                  "inr"
                                ]
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number",
                                "example": 1
                              },
                              "coingeckoId": {
                                "type": "string"
                              },
                              "isPublic": {
                                "type": "boolean"
                              },
                              "superToken": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "SuperToken's address"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "SuperToken's symbol"
                                  }
                                },
                                "required": [
                                  "address",
                                  "decimals",
                                  "symbol"
                                ]
                              },
                              "chain": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Chain id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Chain name"
                                  },
                                  "icon": {
                                    "type": "string",
                                    "description": "Chain icon"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi",
                                      "usd",
                                      "inr"
                                    ],
                                    "description": "Chain currency symbol"
                                  },
                                  "blockExplorerTransactionUrl": {
                                    "type": "string",
                                    "description": "Chain block explorer transaction url"
                                  },
                                  "blockExplorerName": {
                                    "type": "string",
                                    "description": "Chain block explorer name"
                                  },
                                  "type": {
                                    "description": "Chain type",
                                    "type": "string",
                                    "enum": [
                                      "evm",
                                      "solana",
                                      "stripe",
                                      "binance_pay"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "icon",
                                  "currency",
                                  "blockExplorerTransactionUrl",
                                  "blockExplorerName",
                                  "type"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "address",
                              "chainId",
                              "currency",
                              "symbol",
                              "decimals",
                              "isPublic",
                              "chain"
                            ]
                          },
                          "paymentAddress": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "checkoutSessionId",
                          "asset",
                          "paymentAddress"
                        ]
                      }
                    },
                    "paymentIntent": {
                      "description": "The payment intent associated with the session. Payment intent is created when the session is created.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "organizationId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                            },
                            "amount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807"
                            },
                            "amountReceived": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807"
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "requires_payment_method",
                                "requires_confirmation",
                                "requires_action",
                                "processing",
                                "requires_capture",
                                "canceled",
                                "succeeded"
                              ]
                            },
                            "paymentMethodId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                            },
                            "description": {
                              "type": "string"
                            },
                            "paymentMethod": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "assetId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "asset": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Asset id"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Asset name"
                                    },
                                    "chainId": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Asset chain id"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Asset address on chain"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi",
                                        "usd",
                                        "inr"
                                      ],
                                      "description": "Asset currency symbol"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Asset symbol"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Asset decimals in which it is represented on chain"
                                    },
                                    "coingeckoId": {
                                      "type": "string",
                                      "description": "Asset coingecko id"
                                    },
                                    "superToken": {
                                      "description": "SuperToken data",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "description": "SuperToken's address"
                                            },
                                            "decimals": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "SuperToken's symbol"
                                            }
                                          },
                                          "required": [
                                            "address",
                                            "decimals",
                                            "symbol"
                                          ]
                                        }
                                      ]
                                    },
                                    "isEIP5827Supported": {
                                      "type": "boolean",
                                      "description": "Is EIP5827 supported"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "chainId",
                                    "address",
                                    "currency",
                                    "symbol",
                                    "decimals",
                                    "isEIP5827Supported"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "superfluid",
                                    "wallet",
                                    "allowance_based_recurring",
                                    "stripe",
                                    "binance_pay"
                                  ]
                                },
                                "accountAddress": {
                                  "type": "string"
                                },
                                "billingDetails": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email"
                                    },
                                    "phone": {
                                      "type": "string",
                                      "description": "The phone"
                                    },
                                    "organizationName": {
                                      "type": "string",
                                      "description": "The organization name"
                                    },
                                    "address": {
                                      "description": "The address",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "line1": {
                                              "type": "string"
                                            },
                                            "line2": {
                                              "type": "string"
                                            },
                                            "city": {
                                              "type": "string"
                                            },
                                            "state": {
                                              "type": "string"
                                            },
                                            "postalCode": {
                                              "type": "string"
                                            },
                                            "country": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                "customerId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "options": {
                                  "type": "object"
                                }
                              },
                              "required": [
                                "id",
                                "assetId",
                                "asset",
                                "type"
                              ]
                            },
                            "paymentMethodTypes": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "superfluid",
                                  "wallet",
                                  "allowance_based_recurring",
                                  "stripe",
                                  "binance_pay"
                                ]
                              }
                            },
                            "transferAccountAddress": {
                              "type": "string"
                            },
                            "transactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Transaction type",
                                    "type": "string",
                                    "enum": [
                                      "incoming",
                                      "outgoing",
                                      "event",
                                      "transfer"
                                    ]
                                  },
                                  "transactionRelayId": {
                                    "type": "string",
                                    "description": "Transaction relay id"
                                  },
                                  "transactionHash": {
                                    "type": "string",
                                    "description": "Transaction hash"
                                  },
                                  "nonce": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Transaction nonce"
                                  },
                                  "gasLimit": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Transaction gas limit used in payment"
                                  },
                                  "validUntil": {
                                    "type": "string",
                                    "description": "Transaction valid until"
                                  },
                                  "fromAddress": {
                                    "type": "string",
                                    "description": "Transaction from address"
                                  },
                                  "toAddress": {
                                    "type": "string",
                                    "description": "Transaction to address"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi",
                                      "usd",
                                      "inr"
                                    ],
                                    "description": "Transaction currency"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Transaction created at"
                                  },
                                  "amount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "Transaction amount in 8 decimals"
                                  },
                                  "amountRaw": {
                                    "type": "string",
                                    "description": "Transaction amount raw received from alchemy"
                                  },
                                  "assetId": {
                                    "type": "string",
                                    "description": "Transaction asset id"
                                  },
                                  "asset": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "address": {
                                        "type": "string"
                                      },
                                      "chainId": {
                                        "type": "number",
                                        "example": 1
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi",
                                          "usd",
                                          "inr"
                                        ]
                                      },
                                      "symbol": {
                                        "type": "string"
                                      },
                                      "decimals": {
                                        "type": "number",
                                        "example": 1
                                      },
                                      "coingeckoId": {
                                        "type": "string"
                                      },
                                      "isPublic": {
                                        "type": "boolean"
                                      },
                                      "superToken": {
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "type": "string",
                                            "description": "SuperToken's address"
                                          },
                                          "decimals": {
                                            "type": "number",
                                            "example": 1
                                          },
                                          "symbol": {
                                            "type": "string",
                                            "description": "SuperToken's symbol"
                                          }
                                        },
                                        "required": [
                                          "address",
                                          "decimals",
                                          "symbol"
                                        ]
                                      },
                                      "chain": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "number",
                                            "example": 1,
                                            "description": "Chain id"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Chain name"
                                          },
                                          "icon": {
                                            "type": "string",
                                            "description": "Chain icon"
                                          },
                                          "currency": {
                                            "type": "string",
                                            "enum": [
                                              "usdc",
                                              "usdt",
                                              "dai",
                                              "btc",
                                              "eth",
                                              "matic",
                                              "bnb",
                                              "sol",
                                              "busd",
                                              "food",
                                              "tfi",
                                              "usd",
                                              "inr"
                                            ],
                                            "description": "Chain currency symbol"
                                          },
                                          "blockExplorerTransactionUrl": {
                                            "type": "string",
                                            "description": "Chain block explorer transaction url"
                                          },
                                          "blockExplorerName": {
                                            "type": "string",
                                            "description": "Chain block explorer name"
                                          },
                                          "type": {
                                            "description": "Chain type",
                                            "type": "string",
                                            "enum": [
                                              "evm",
                                              "solana",
                                              "stripe",
                                              "binance_pay"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "icon",
                                          "currency",
                                          "blockExplorerTransactionUrl",
                                          "blockExplorerName",
                                          "type"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "address",
                                      "chainId",
                                      "currency",
                                      "symbol",
                                      "decimals",
                                      "isPublic",
                                      "chain"
                                    ]
                                  },
                                  "transactionUrl": {
                                    "type": "string",
                                    "description": "Transaction url"
                                  }
                                },
                                "required": [
                                  "type",
                                  "fromAddress",
                                  "toAddress",
                                  "currency",
                                  "amountRaw",
                                  "assetId",
                                  "asset"
                                ]
                              }
                            },
                            "paymentReceipt": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "organizationId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "paymentIntentId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "receiptNumber": {
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "organizationId",
                                "paymentIntentId",
                                "receiptNumber"
                              ]
                            },
                            "canceledAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "cancellationReason": {
                              "type": "string"
                            },
                            "stripe": {
                              "type": "object",
                              "properties": {
                                "paymentIntentId": {
                                  "type": "string"
                                },
                                "receiptUrl": {
                                  "type": "string"
                                },
                                "cardLast4": {
                                  "type": "string"
                                },
                                "displayName": {
                                  "type": "string"
                                }
                              }
                            },
                            "isMarkRefunded": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "markRefundedAt": {
                              "format": "date-time",
                              "type": "string",
                              "nullable": true
                            },
                            "markRefundedComment": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "id",
                            "organizationId",
                            "status",
                            "paymentMethodId",
                            "transactions"
                          ]
                        }
                      ]
                    },
                    "isMarkRefunded": {
                      "type": "boolean",
                      "description": "Whether to mark the payment as refunded"
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "discounts": {
                      "description": "The list of discounts applied to the session",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "format": "int64",
                            "type": "integer",
                            "example": "9223372036854775807",
                            "description": "The amount of the discount"
                          },
                          "couponId": {
                            "type": "string",
                            "description": "The coupon id of the discount"
                          },
                          "coupon": {
                            "description": "The coupon of the discount",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                                  },
                                  "percentOff": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "example": 1,
                                    "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                                  },
                                  "code": {
                                    "type": "string",
                                    "description": "The coupon code"
                                  }
                                },
                                "required": [
                                  "name",
                                  "percentOff",
                                  "code"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "amount",
                          "couponId",
                          "coupon"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "amountTotal",
                    "amountSubtotal",
                    "currency",
                    "status",
                    "paymentStatus",
                    "url",
                    "lineItems",
                    "addresses",
                    "paymentIntent",
                    "discounts"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Checkout Sessions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "SessionsController_findAll",
        "summary": "List of checkout sessions",
        "description": "Returns ths list of checkout sessions",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentLinkId",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by payment link id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by subscription id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by invoice ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by mode",
            "schema": {
              "type": "string",
              "enum": [
                "payment",
                "subscription"
              ]
            }
          },
          {
            "name": "paymentMethodTypes",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by payment method type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "superfluid",
                  "wallet",
                  "allowance_based_recurring",
                  "stripe",
                  "binance_pay"
                ]
              }
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentStatus",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by payment status",
            "schema": {
              "type": "string",
              "enum": [
                "unpaid",
                "paid"
              ]
            }
          },
          {
            "name": "customerId",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by customer id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "couponId",
            "required": false,
            "in": "query",
            "description": "To filter checkout sessions by applied coupon id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "organizationId": {
                                "type": "string",
                                "description": "Organization id of the checkout session"
                              },
                              "mode": {
                                "description": "The mode of the Checkout Session.",
                                "example": "payment",
                                "type": "string",
                                "enum": [
                                  "payment",
                                  "subscription"
                                ]
                              },
                              "paymentLinkId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                "description": "The payment link id used to create this checkout session"
                              },
                              "subscriptionId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                "description": "The subscription created from this checkout session"
                              },
                              "invoiceId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                "description": "The invoice created from this checkout session"
                              },
                              "amountTotal": {
                                "format": "int64",
                                "type": "integer",
                                "example": 100000000,
                                "description": "A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
                                "minimum": 0
                              },
                              "amountSubtotal": {
                                "format": "int64",
                                "type": "integer",
                                "example": 100000000,
                                "description": "Amount subtotal is total of all line items excluding tax, shipping, application fee and discount. A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
                                "minimum": 0
                              },
                              "amountDetails": {
                                "description": "The amount details of the payment",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "currency": {
                                        "description": "The currency of the payment",
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi",
                                          "usd",
                                          "inr"
                                        ]
                                      },
                                      "amountTotal": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The total amount of the payment after discounts and taxes"
                                      },
                                      "amountSubtotal": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The total amount of the payment before discounts and taxes"
                                      },
                                      "amountDiscount": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The total amount of the payment discount"
                                      },
                                      "amountTax": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The total amount of the payment tax"
                                      },
                                      "discountAmounts": {
                                        "description": "The list of discount amounts",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "amount": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The amount of the discount"
                                            },
                                            "couponId": {
                                              "type": "string",
                                              "description": "The coupon id of the discount"
                                            }
                                          },
                                          "required": [
                                            "amount",
                                            "couponId"
                                          ]
                                        }
                                      },
                                      "taxAmounts": {
                                        "description": "The list of tax amounts",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "amount": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The amount of the tax"
                                            },
                                            "taxId": {
                                              "type": "string",
                                              "description": "The tax id of the tax"
                                            }
                                          },
                                          "required": [
                                            "amount",
                                            "taxId"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "currency",
                                      "amountTotal",
                                      "amountSubtotal",
                                      "amountDiscount",
                                      "amountTax",
                                      "discountAmounts",
                                      "taxAmounts"
                                    ]
                                  }
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ],
                                "description": "Currency of the amount",
                                "example": "usdc"
                              },
                              "paymentMethodTypes": {
                                "type": "array",
                                "description": "A list of the types of payment methods (e.g. wallet) this Checkout Session is allowed to accept.",
                                "example": "wallet",
                                "minItems": 1,
                                "maxItems": 1,
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "superfluid",
                                    "wallet",
                                    "allowance_based_recurring",
                                    "stripe",
                                    "binance_pay"
                                  ]
                                }
                              },
                              "paymentSetting": {
                                "description": "The payment method settings to use for this checkout's payment",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "paymentMethodTypes": {
                                        "type": "array",
                                        "description": "A list of the types of payment methods",
                                        "example": "wallet",
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "superfluid",
                                            "wallet",
                                            "allowance_based_recurring",
                                            "stripe",
                                            "binance_pay"
                                          ]
                                        }
                                      },
                                      "allowedChains": {
                                        "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                                        "example": [
                                          {
                                            "chainId": 137
                                          }
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "chainId": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "blacklistCurrencies": {
                                              "type": "array",
                                              "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                              "example": [
                                                "usdc"
                                              ],
                                              "items": {
                                                "type": "string",
                                                "enum": [
                                                  "usdc",
                                                  "usdt",
                                                  "dai",
                                                  "btc",
                                                  "eth",
                                                  "matic",
                                                  "bnb",
                                                  "sol",
                                                  "busd",
                                                  "food",
                                                  "tfi"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "chainId"
                                          ]
                                        }
                                      },
                                      "preferredChainId": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "The preferred chain's id"
                                      },
                                      "allowSwap": {
                                        "type": "boolean",
                                        "description": "Whether the user can swap the payment currency",
                                        "default": false
                                      },
                                      "allowFiatPayment": {
                                        "type": "boolean",
                                        "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
                                      }
                                    }
                                  }
                                ]
                              },
                              "status": {
                                "description": "The status of the session",
                                "type": "string",
                                "enum": [
                                  "open",
                                  "complete",
                                  "incomplete",
                                  "expired"
                                ]
                              },
                              "paymentStatus": {
                                "description": "The status of the payment",
                                "type": "string",
                                "enum": [
                                  "unpaid",
                                  "paid"
                                ]
                              },
                              "expiresAt": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The time at which the session will expire. Default: 1 Hour"
                              },
                              "customerId": {
                                "type": "string",
                                "description": "The ID of the customer if you want to associate the session with a customer"
                              },
                              "customer": {
                                "description": "The customer detail from saved customer's information. This is only available when customer id is provided or customer is stored",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email"
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "The phone"
                                      },
                                      "organizationName": {
                                        "type": "string",
                                        "description": "The organization name"
                                      },
                                      "address": {
                                        "description": "The address",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "line1": {
                                                "type": "string"
                                              },
                                              "line2": {
                                                "type": "string"
                                              },
                                              "city": {
                                                "type": "string"
                                              },
                                              "state": {
                                                "type": "string"
                                              },
                                              "postalCode": {
                                                "type": "string"
                                              },
                                              "country": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                        "description": "Customer's id"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string",
                                        "description": "Customer's created at"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string",
                                        "description": "Customer's updated at"
                                      },
                                      "customerReferenceId": {
                                        "type": "string",
                                        "description": "Customer's reference id"
                                      },
                                      "shipping": {
                                        "description": "Customer's shipping address",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "The name"
                                              },
                                              "email": {
                                                "type": "string",
                                                "description": "The email"
                                              },
                                              "phone": {
                                                "type": "string",
                                                "description": "The phone"
                                              },
                                              "organizationName": {
                                                "type": "string",
                                                "description": "The organization name"
                                              },
                                              "address": {
                                                "description": "The address",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "line1": {
                                                        "type": "string"
                                                      },
                                                      "line2": {
                                                        "type": "string"
                                                      },
                                                      "city": {
                                                        "type": "string"
                                                      },
                                                      "state": {
                                                        "type": "string"
                                                      },
                                                      "postalCode": {
                                                        "type": "string"
                                                      },
                                                      "country": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "taxIds": {
                                        "type": "object",
                                        "properties": {
                                          "object": {
                                            "type": "string"
                                          },
                                          "data": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "createdAt": {
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "updatedAt": {
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "customerId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "customerId"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "visibility": {
                                        "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                                        "type": "string",
                                        "enum": [
                                          10,
                                          20
                                        ]
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "description": "Customer's metadata"
                                      },
                                      "customerNumber": {
                                        "type": "string",
                                        "description": "Customer number assigned by the system"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "customerNumber"
                                    ]
                                  }
                                ]
                              },
                              "customerDetails": {
                                "description": "The checkout sessions's customer detail",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "phone": {
                                        "type": "string"
                                      },
                                      "organizationName": {
                                        "type": "string",
                                        "description": "The organization name"
                                      },
                                      "address": {
                                        "type": "object",
                                        "properties": {
                                          "line1": {
                                            "type": "string"
                                          },
                                          "line2": {
                                            "type": "string"
                                          },
                                          "city": {
                                            "type": "string"
                                          },
                                          "state": {
                                            "type": "string"
                                          },
                                          "postalCode": {
                                            "type": "string"
                                          },
                                          "country": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "taxIds": {
                                        "type": "object",
                                        "properties": {
                                          "object": {
                                            "type": "string"
                                          },
                                          "data": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "createdAt": {
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "updatedAt": {
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "customerId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "customerId"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "clientReferenceId": {
                                "type": "string",
                                "description": "Unique ID string used to identify the session in your backend. This can be your payment ID, cart ID, or similar used to link this Checkout Session with your internal system."
                              },
                              "customerCreation": {
                                "description": "Whether to create a customer for the session. If required, a customer will be created for subsequent payments",
                                "type": "string",
                                "enum": [
                                  "if_required",
                                  "always"
                                ]
                              },
                              "customerUpdate": {
                                "description": "The customer update settings to use for this checkout to update existing customer details",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "string",
                                        "enum": [
                                          "auto",
                                          "never"
                                        ]
                                      },
                                      "name": {
                                        "type": "string",
                                        "enum": [
                                          "auto",
                                          "never"
                                        ]
                                      },
                                      "shipping": {
                                        "type": "string",
                                        "enum": [
                                          "auto",
                                          "never"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL to redirect the customer to complete payment"
                              },
                              "successUrl": {
                                "type": "string",
                                "description": "The URL to redirect the customer to after payment is completed. Only applicable when `afterCompletion` is set to `redirect`"
                              },
                              "cancelUrl": {
                                "type": "string",
                                "description": "The URL to redirect the customer to if they decide to cancel payment"
                              },
                              "submitType": {
                                "default": "pay",
                                "description": "The type of submit button to display on the Checkout page",
                                "type": "string",
                                "enum": [
                                  "pay",
                                  "book",
                                  "donate"
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "description": "A set of key-value pairs that you can attach to a Checkout Session object"
                              },
                              "nameCollection": {
                                "type": "boolean",
                                "description": "Whether to collect the customer's name. Default: false"
                              },
                              "emailCollection": {
                                "type": "boolean",
                                "description": "Whether to collect the customer's email address. Default: false"
                              },
                              "phoneNumberCollection": {
                                "type": "boolean",
                                "description": "Whether to collect the customer's phone number Default: false"
                              },
                              "shippingAddressCollection": {
                                "type": "boolean",
                                "description": "Whether to collect the customer's shipping address. Default: false"
                              },
                              "billingAddressCollection": {
                                "type": "boolean",
                                "description": "Whether to collect the customer's billing address. Default: false"
                              },
                              "customFields": {
                                "type": "object",
                                "properties": {
                                  "fields": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "numeric",
                                            "dropdown"
                                          ]
                                        },
                                        "label": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "custom"
                                              ]
                                            },
                                            "custom": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "custom"
                                          ]
                                        },
                                        "optional": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "text": {
                                          "type": "object",
                                          "properties": {
                                            "maximumLength": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "minimumLength": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "value"
                                          ]
                                        },
                                        "numeric": {
                                          "type": "object",
                                          "properties": {
                                            "maximumLength": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "minimumLength": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "value"
                                          ]
                                        },
                                        "dropdown": {
                                          "type": "object",
                                          "properties": {
                                            "options": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "label": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "label",
                                                  "value"
                                                ]
                                              }
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "value"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "type",
                                        "label",
                                        "optional"
                                      ]
                                    }
                                  }
                                }
                              },
                              "afterCompletion": {
                                "description": "The action to take after the payment is completed. You can choose to redirect user to your application or use the default payment confirmation page provided by Copperx",
                                "type": "string",
                                "enum": [
                                  "redirect",
                                  "hosted_confirmation"
                                ]
                              },
                              "afterCompletionConfirmMsg": {
                                "type": "string",
                                "description": "The message to show after successful payment. Only applicable when `afterCompletion` is set to `hosted_confirmation`"
                              },
                              "shippingDetails": {
                                "description": "The shipping address to use for this checkout",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email"
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "The phone"
                                      },
                                      "organizationName": {
                                        "type": "string",
                                        "description": "The organization name"
                                      },
                                      "address": {
                                        "description": "The address",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "line1": {
                                                "type": "string"
                                              },
                                              "line2": {
                                                "type": "string"
                                              },
                                              "city": {
                                                "type": "string"
                                              },
                                              "state": {
                                                "type": "string"
                                              },
                                              "postalCode": {
                                                "type": "string"
                                              },
                                              "country": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "billingDetails": {
                                "description": "The billing address to use for this checkout",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email"
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "The phone"
                                      },
                                      "organizationName": {
                                        "type": "string",
                                        "description": "The organization name"
                                      },
                                      "address": {
                                        "description": "The address",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "line1": {
                                                "type": "string"
                                              },
                                              "line2": {
                                                "type": "string"
                                              },
                                              "city": {
                                                "type": "string"
                                              },
                                              "state": {
                                                "type": "string"
                                              },
                                              "postalCode": {
                                                "type": "string"
                                              },
                                              "country": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "lineItems": {
                                "description": "The list of line items to display on the session",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "object": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "description": {
                                              "type": "string"
                                            },
                                            "quantity": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "price": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "createdAt": {
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "updatedAt": {
                                                  "format": "date-time",
                                                  "type": "string"
                                                },
                                                "billingScheme": {
                                                  "description": "The billing scheme to use for this price",
                                                  "type": "string",
                                                  "enum": [
                                                    "per_unit"
                                                  ]
                                                },
                                                "currency": {
                                                  "type": "string",
                                                  "enum": [
                                                    "usdc",
                                                    "usdt",
                                                    "dai",
                                                    "btc",
                                                    "eth",
                                                    "matic",
                                                    "bnb",
                                                    "sol",
                                                    "busd",
                                                    "food",
                                                    "tfi"
                                                  ],
                                                  "description": "The currency symbol"
                                                },
                                                "productId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                                  "description": "Product's id"
                                                },
                                                "interval": {
                                                  "description": "The interval at which to bill for this price. Only required for subscriptions",
                                                  "type": "string",
                                                  "enum": [
                                                    "day",
                                                    "week",
                                                    "month",
                                                    "year"
                                                  ]
                                                },
                                                "intervalCount": {
                                                  "type": "number",
                                                  "example": 1,
                                                  "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                                },
                                                "isActive": {
                                                  "type": "boolean",
                                                  "description": "Whether the price is currently active"
                                                },
                                                "usageType": {
                                                  "description": "The usage type of the price.",
                                                  "type": "string",
                                                  "enum": [
                                                    "licensed"
                                                  ]
                                                },
                                                "type": {
                                                  "description": "The type of the price",
                                                  "type": "string",
                                                  "enum": [
                                                    "one_time",
                                                    "recurring",
                                                    "streaming"
                                                  ]
                                                },
                                                "unitAmount": {
                                                  "format": "int64",
                                                  "type": "integer",
                                                  "example": "9223372036854775807",
                                                  "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                                },
                                                "unitAmountDecimal": {
                                                  "type": "string"
                                                },
                                                "customUnitMax": {
                                                  "format": "int64",
                                                  "type": "integer",
                                                  "example": "9223372036854775807",
                                                  "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                                },
                                                "customUnitMin": {
                                                  "format": "int64",
                                                  "type": "integer",
                                                  "example": "9223372036854775807",
                                                  "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                                },
                                                "customPreset": {
                                                  "format": "int64",
                                                  "type": "integer",
                                                  "example": "9223372036854775807",
                                                  "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                                },
                                                "customUnitAmountSuggestions": {
                                                  "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "product": {
                                                  "description": "The product this price belongs to",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "createdAt": {
                                                          "format": "date-time",
                                                          "type": "string"
                                                        },
                                                        "updatedAt": {
                                                          "format": "date-time",
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The name of the product. Displayed on the checkout page"
                                                        },
                                                        "description": {
                                                          "type": "string",
                                                          "description": "The description of the product. Displayed on the checkout page"
                                                        },
                                                        "isActive": {
                                                          "type": "boolean",
                                                          "description": "Whether the product is currently active"
                                                        },
                                                        "images": {
                                                          "maxItems": 8,
                                                          "description": "The url of product images. Displayed on the checkout page",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "publicImages": {
                                                          "description": "Product images with absolute public url",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "unitLabel": {
                                                          "type": "string",
                                                          "description": "The label of the unit of the product. Displayed on the checkout page"
                                                        },
                                                        "url": {
                                                          "type": "string",
                                                          "description": "The url of the product"
                                                        },
                                                        "defaultPriceId": {
                                                          "type": "string",
                                                          "format": "uuid",
                                                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                                          "description": "Product's default price id"
                                                        },
                                                        "metadata": {
                                                          "type": "object",
                                                          "description": "The metadata of the product"
                                                        },
                                                        "visibility": {
                                                          "description": "The visibility of the product",
                                                          "type": "string",
                                                          "enum": [
                                                            10,
                                                            20
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "name"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "metadata": {
                                                  "type": "object",
                                                  "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                                },
                                                "visibility": {
                                                  "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                                  "type": "string",
                                                  "enum": [
                                                    10,
                                                    20
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "currency",
                                                "productId",
                                                "type",
                                                "product"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "price"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "addresses": {
                                "description": "The list of payment addresses associated with the session. It is the list of the addresses that will be used to pay the amount.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "checkoutSessionId": {
                                      "type": "string"
                                    },
                                    "asset": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "address": {
                                          "type": "string"
                                        },
                                        "chainId": {
                                          "type": "number",
                                          "example": 1
                                        },
                                        "currency": {
                                          "type": "string",
                                          "enum": [
                                            "usdc",
                                            "usdt",
                                            "dai",
                                            "btc",
                                            "eth",
                                            "matic",
                                            "bnb",
                                            "sol",
                                            "busd",
                                            "food",
                                            "tfi",
                                            "usd",
                                            "inr"
                                          ]
                                        },
                                        "symbol": {
                                          "type": "string"
                                        },
                                        "decimals": {
                                          "type": "number",
                                          "example": 1
                                        },
                                        "coingeckoId": {
                                          "type": "string"
                                        },
                                        "isPublic": {
                                          "type": "boolean"
                                        },
                                        "superToken": {
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "description": "SuperToken's address"
                                            },
                                            "decimals": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "SuperToken's symbol"
                                            }
                                          },
                                          "required": [
                                            "address",
                                            "decimals",
                                            "symbol"
                                          ]
                                        },
                                        "chain": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "number",
                                              "example": 1,
                                              "description": "Chain id"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Chain name"
                                            },
                                            "icon": {
                                              "type": "string",
                                              "description": "Chain icon"
                                            },
                                            "currency": {
                                              "type": "string",
                                              "enum": [
                                                "usdc",
                                                "usdt",
                                                "dai",
                                                "btc",
                                                "eth",
                                                "matic",
                                                "bnb",
                                                "sol",
                                                "busd",
                                                "food",
                                                "tfi",
                                                "usd",
                                                "inr"
                                              ],
                                              "description": "Chain currency symbol"
                                            },
                                            "blockExplorerTransactionUrl": {
                                              "type": "string",
                                              "description": "Chain block explorer transaction url"
                                            },
                                            "blockExplorerName": {
                                              "type": "string",
                                              "description": "Chain block explorer name"
                                            },
                                            "type": {
                                              "description": "Chain type",
                                              "type": "string",
                                              "enum": [
                                                "evm",
                                                "solana",
                                                "stripe",
                                                "binance_pay"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "name",
                                            "icon",
                                            "currency",
                                            "blockExplorerTransactionUrl",
                                            "blockExplorerName",
                                            "type"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "name",
                                        "address",
                                        "chainId",
                                        "currency",
                                        "symbol",
                                        "decimals",
                                        "isPublic",
                                        "chain"
                                      ]
                                    },
                                    "paymentAddress": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "checkoutSessionId",
                                    "asset",
                                    "paymentAddress"
                                  ]
                                }
                              },
                              "paymentIntent": {
                                "description": "The payment intent associated with the session. Payment intent is created when the session is created.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "organizationId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                      },
                                      "amount": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807"
                                      },
                                      "amountReceived": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi",
                                          "usd",
                                          "inr"
                                        ]
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "requires_payment_method",
                                          "requires_confirmation",
                                          "requires_action",
                                          "processing",
                                          "requires_capture",
                                          "canceled",
                                          "succeeded"
                                        ]
                                      },
                                      "paymentMethodId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "paymentMethod": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "assetId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                          },
                                          "asset": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Asset id"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Asset name"
                                              },
                                              "chainId": {
                                                "type": "number",
                                                "example": 1,
                                                "description": "Asset chain id"
                                              },
                                              "address": {
                                                "type": "string",
                                                "description": "Asset address on chain"
                                              },
                                              "currency": {
                                                "type": "string",
                                                "enum": [
                                                  "usdc",
                                                  "usdt",
                                                  "dai",
                                                  "btc",
                                                  "eth",
                                                  "matic",
                                                  "bnb",
                                                  "sol",
                                                  "busd",
                                                  "food",
                                                  "tfi",
                                                  "usd",
                                                  "inr"
                                                ],
                                                "description": "Asset currency symbol"
                                              },
                                              "symbol": {
                                                "type": "string",
                                                "description": "Asset symbol"
                                              },
                                              "decimals": {
                                                "type": "number",
                                                "example": 1,
                                                "description": "Asset decimals in which it is represented on chain"
                                              },
                                              "coingeckoId": {
                                                "type": "string",
                                                "description": "Asset coingecko id"
                                              },
                                              "superToken": {
                                                "description": "SuperToken data",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "address": {
                                                        "type": "string",
                                                        "description": "SuperToken's address"
                                                      },
                                                      "decimals": {
                                                        "type": "number",
                                                        "example": 1
                                                      },
                                                      "symbol": {
                                                        "type": "string",
                                                        "description": "SuperToken's symbol"
                                                      }
                                                    },
                                                    "required": [
                                                      "address",
                                                      "decimals",
                                                      "symbol"
                                                    ]
                                                  }
                                                ]
                                              },
                                              "isEIP5827Supported": {
                                                "type": "boolean",
                                                "description": "Is EIP5827 supported"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name",
                                              "chainId",
                                              "address",
                                              "currency",
                                              "symbol",
                                              "decimals",
                                              "isEIP5827Supported"
                                            ]
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "superfluid",
                                              "wallet",
                                              "allowance_based_recurring",
                                              "stripe",
                                              "binance_pay"
                                            ]
                                          },
                                          "accountAddress": {
                                            "type": "string"
                                          },
                                          "billingDetails": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "The name"
                                              },
                                              "email": {
                                                "type": "string",
                                                "description": "The email"
                                              },
                                              "phone": {
                                                "type": "string",
                                                "description": "The phone"
                                              },
                                              "organizationName": {
                                                "type": "string",
                                                "description": "The organization name"
                                              },
                                              "address": {
                                                "description": "The address",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "line1": {
                                                        "type": "string"
                                                      },
                                                      "line2": {
                                                        "type": "string"
                                                      },
                                                      "city": {
                                                        "type": "string"
                                                      },
                                                      "state": {
                                                        "type": "string"
                                                      },
                                                      "postalCode": {
                                                        "type": "string"
                                                      },
                                                      "country": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          "customerId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                          },
                                          "options": {
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "assetId",
                                          "asset",
                                          "type"
                                        ]
                                      },
                                      "paymentMethodTypes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "superfluid",
                                            "wallet",
                                            "allowance_based_recurring",
                                            "stripe",
                                            "binance_pay"
                                          ]
                                        }
                                      },
                                      "transferAccountAddress": {
                                        "type": "string"
                                      },
                                      "transactions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "description": "Transaction type",
                                              "type": "string",
                                              "enum": [
                                                "incoming",
                                                "outgoing",
                                                "event",
                                                "transfer"
                                              ]
                                            },
                                            "transactionRelayId": {
                                              "type": "string",
                                              "description": "Transaction relay id"
                                            },
                                            "transactionHash": {
                                              "type": "string",
                                              "description": "Transaction hash"
                                            },
                                            "nonce": {
                                              "type": "number",
                                              "example": 1,
                                              "description": "Transaction nonce"
                                            },
                                            "gasLimit": {
                                              "type": "number",
                                              "example": 1,
                                              "description": "Transaction gas limit used in payment"
                                            },
                                            "validUntil": {
                                              "type": "string",
                                              "description": "Transaction valid until"
                                            },
                                            "fromAddress": {
                                              "type": "string",
                                              "description": "Transaction from address"
                                            },
                                            "toAddress": {
                                              "type": "string",
                                              "description": "Transaction to address"
                                            },
                                            "currency": {
                                              "type": "string",
                                              "enum": [
                                                "usdc",
                                                "usdt",
                                                "dai",
                                                "btc",
                                                "eth",
                                                "matic",
                                                "bnb",
                                                "sol",
                                                "busd",
                                                "food",
                                                "tfi",
                                                "usd",
                                                "inr"
                                              ],
                                              "description": "Transaction currency"
                                            },
                                            "createdAt": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "Transaction created at"
                                            },
                                            "amount": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "Transaction amount in 8 decimals"
                                            },
                                            "amountRaw": {
                                              "type": "string",
                                              "description": "Transaction amount raw received from alchemy"
                                            },
                                            "assetId": {
                                              "type": "string",
                                              "description": "Transaction asset id"
                                            },
                                            "asset": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "address": {
                                                  "type": "string"
                                                },
                                                "chainId": {
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "currency": {
                                                  "type": "string",
                                                  "enum": [
                                                    "usdc",
                                                    "usdt",
                                                    "dai",
                                                    "btc",
                                                    "eth",
                                                    "matic",
                                                    "bnb",
                                                    "sol",
                                                    "busd",
                                                    "food",
                                                    "tfi",
                                                    "usd",
                                                    "inr"
                                                  ]
                                                },
                                                "symbol": {
                                                  "type": "string"
                                                },
                                                "decimals": {
                                                  "type": "number",
                                                  "example": 1
                                                },
                                                "coingeckoId": {
                                                  "type": "string"
                                                },
                                                "isPublic": {
                                                  "type": "boolean"
                                                },
                                                "superToken": {
                                                  "type": "object",
                                                  "properties": {
                                                    "address": {
                                                      "type": "string",
                                                      "description": "SuperToken's address"
                                                    },
                                                    "decimals": {
                                                      "type": "number",
                                                      "example": 1
                                                    },
                                                    "symbol": {
                                                      "type": "string",
                                                      "description": "SuperToken's symbol"
                                                    }
                                                  },
                                                  "required": [
                                                    "address",
                                                    "decimals",
                                                    "symbol"
                                                  ]
                                                },
                                                "chain": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "number",
                                                      "example": 1,
                                                      "description": "Chain id"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Chain name"
                                                    },
                                                    "icon": {
                                                      "type": "string",
                                                      "description": "Chain icon"
                                                    },
                                                    "currency": {
                                                      "type": "string",
                                                      "enum": [
                                                        "usdc",
                                                        "usdt",
                                                        "dai",
                                                        "btc",
                                                        "eth",
                                                        "matic",
                                                        "bnb",
                                                        "sol",
                                                        "busd",
                                                        "food",
                                                        "tfi",
                                                        "usd",
                                                        "inr"
                                                      ],
                                                      "description": "Chain currency symbol"
                                                    },
                                                    "blockExplorerTransactionUrl": {
                                                      "type": "string",
                                                      "description": "Chain block explorer transaction url"
                                                    },
                                                    "blockExplorerName": {
                                                      "type": "string",
                                                      "description": "Chain block explorer name"
                                                    },
                                                    "type": {
                                                      "description": "Chain type",
                                                      "type": "string",
                                                      "enum": [
                                                        "evm",
                                                        "solana",
                                                        "stripe",
                                                        "binance_pay"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "name",
                                                    "icon",
                                                    "currency",
                                                    "blockExplorerTransactionUrl",
                                                    "blockExplorerName",
                                                    "type"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "name",
                                                "address",
                                                "chainId",
                                                "currency",
                                                "symbol",
                                                "decimals",
                                                "isPublic",
                                                "chain"
                                              ]
                                            },
                                            "transactionUrl": {
                                              "type": "string",
                                              "description": "Transaction url"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "fromAddress",
                                            "toAddress",
                                            "currency",
                                            "amountRaw",
                                            "assetId",
                                            "asset"
                                          ]
                                        }
                                      },
                                      "paymentReceipt": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "organizationId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                          },
                                          "paymentIntentId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "receiptNumber": {
                                            "type": "string"
                                          },
                                          "uri": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "organizationId",
                                          "paymentIntentId",
                                          "receiptNumber"
                                        ]
                                      },
                                      "canceledAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "cancellationReason": {
                                        "type": "string"
                                      },
                                      "stripe": {
                                        "type": "object",
                                        "properties": {
                                          "paymentIntentId": {
                                            "type": "string"
                                          },
                                          "receiptUrl": {
                                            "type": "string"
                                          },
                                          "cardLast4": {
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "isMarkRefunded": {
                                        "type": "boolean",
                                        "nullable": true
                                      },
                                      "markRefundedAt": {
                                        "format": "date-time",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "markRefundedComment": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "organizationId",
                                      "status",
                                      "paymentMethodId",
                                      "transactions"
                                    ]
                                  }
                                ]
                              },
                              "isMarkRefunded": {
                                "type": "boolean",
                                "description": "Whether to mark the payment as refunded"
                              },
                              "allowPromotionCodes": {
                                "type": "boolean",
                                "description": "Enables user redeemable promotion codes."
                              },
                              "discounts": {
                                "description": "The list of discounts applied to the session",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "format": "int64",
                                      "type": "integer",
                                      "example": "9223372036854775807",
                                      "description": "The amount of the discount"
                                    },
                                    "couponId": {
                                      "type": "string",
                                      "description": "The coupon id of the discount"
                                    },
                                    "coupon": {
                                      "description": "The coupon of the discount",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                                            },
                                            "percentOff": {
                                              "type": "number",
                                              "minimum": 0,
                                              "maximum": 100,
                                              "example": 1,
                                              "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                                            },
                                            "code": {
                                              "type": "string",
                                              "description": "The coupon code"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "percentOff",
                                            "code"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "amount",
                                    "couponId",
                                    "coupon"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id",
                              "organizationId",
                              "amountTotal",
                              "amountSubtotal",
                              "currency",
                              "status",
                              "paymentStatus",
                              "url",
                              "lineItems",
                              "addresses",
                              "paymentIntent",
                              "discounts"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Checkout Sessions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/checkout/sessions/{id}": {
      "get": {
        "operationId": "SessionsController_findOne",
        "summary": "Get a checkout session",
        "description": "Returns a checkout session",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id of the checkout session"
                    },
                    "mode": {
                      "description": "The mode of the Checkout Session.",
                      "example": "payment",
                      "type": "string",
                      "enum": [
                        "payment",
                        "subscription"
                      ]
                    },
                    "paymentLinkId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The payment link id used to create this checkout session"
                    },
                    "subscriptionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The subscription created from this checkout session"
                    },
                    "invoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The invoice created from this checkout session"
                    },
                    "amountTotal": {
                      "format": "int64",
                      "type": "integer",
                      "example": 100000000,
                      "description": "A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
                      "minimum": 0
                    },
                    "amountSubtotal": {
                      "format": "int64",
                      "type": "integer",
                      "example": 100000000,
                      "description": "Amount subtotal is total of all line items excluding tax, shipping, application fee and discount. A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
                      "minimum": 0
                    },
                    "amountDetails": {
                      "description": "The amount details of the payment",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "description": "The currency of the payment",
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ]
                            },
                            "amountTotal": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment after discounts and taxes"
                            },
                            "amountSubtotal": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment before discounts and taxes"
                            },
                            "amountDiscount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment discount"
                            },
                            "amountTax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The total amount of the payment tax"
                            },
                            "discountAmounts": {
                              "description": "The list of discount amounts",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The amount of the discount"
                                  },
                                  "couponId": {
                                    "type": "string",
                                    "description": "The coupon id of the discount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "couponId"
                                ]
                              }
                            },
                            "taxAmounts": {
                              "description": "The list of tax amounts",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The amount of the tax"
                                  },
                                  "taxId": {
                                    "type": "string",
                                    "description": "The tax id of the tax"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "taxId"
                                ]
                              }
                            }
                          },
                          "required": [
                            "currency",
                            "amountTotal",
                            "amountSubtotal",
                            "amountDiscount",
                            "amountTax",
                            "discountAmounts",
                            "taxAmounts"
                          ]
                        }
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Currency of the amount",
                      "example": "usdc"
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "description": "A list of the types of payment methods (e.g. wallet) this Checkout Session is allowed to accept.",
                      "example": "wallet",
                      "minItems": 1,
                      "maxItems": 1,
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "paymentSetting": {
                      "description": "The payment method settings to use for this checkout's payment",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "paymentMethodTypes": {
                              "type": "array",
                              "description": "A list of the types of payment methods",
                              "example": "wallet",
                              "minItems": 1,
                              "maxItems": 1,
                              "items": {
                                "type": "string",
                                "enum": [
                                  "superfluid",
                                  "wallet",
                                  "allowance_based_recurring",
                                  "stripe",
                                  "binance_pay"
                                ]
                              }
                            },
                            "allowedChains": {
                              "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                              "example": [
                                {
                                  "chainId": 137
                                }
                              ],
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "chainId": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "blacklistCurrencies": {
                                    "type": "array",
                                    "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                    "example": [
                                      "usdc"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "chainId"
                                ]
                              }
                            },
                            "preferredChainId": {
                              "type": "number",
                              "example": 1,
                              "description": "The preferred chain's id"
                            },
                            "allowSwap": {
                              "type": "boolean",
                              "description": "Whether the user can swap the payment currency",
                              "default": false
                            },
                            "allowFiatPayment": {
                              "type": "boolean",
                              "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
                            }
                          }
                        }
                      ]
                    },
                    "status": {
                      "description": "The status of the session",
                      "type": "string",
                      "enum": [
                        "open",
                        "complete",
                        "incomplete",
                        "expired"
                      ]
                    },
                    "paymentStatus": {
                      "description": "The status of the payment",
                      "type": "string",
                      "enum": [
                        "unpaid",
                        "paid"
                      ]
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The time at which the session will expire. Default: 1 Hour"
                    },
                    "customerId": {
                      "type": "string",
                      "description": "The ID of the customer if you want to associate the session with a customer"
                    },
                    "customer": {
                      "description": "The customer detail from saved customer's information. This is only available when customer id is provided or customer is stored",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Customer's id"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Customer's created at"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Customer's updated at"
                            },
                            "customerReferenceId": {
                              "type": "string",
                              "description": "Customer's reference id"
                            },
                            "shipping": {
                              "description": "Customer's shipping address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email"
                                    },
                                    "phone": {
                                      "type": "string",
                                      "description": "The phone"
                                    },
                                    "organizationName": {
                                      "type": "string",
                                      "description": "The organization name"
                                    },
                                    "address": {
                                      "description": "The address",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "line1": {
                                              "type": "string"
                                            },
                                            "line2": {
                                              "type": "string"
                                            },
                                            "city": {
                                              "type": "string"
                                            },
                                            "state": {
                                              "type": "string"
                                            },
                                            "postalCode": {
                                              "type": "string"
                                            },
                                            "country": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "taxIds": {
                              "type": "object",
                              "properties": {
                                "object": {
                                  "type": "string"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "customerId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "customerId"
                                    ]
                                  }
                                }
                              }
                            },
                            "visibility": {
                              "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Customer's metadata"
                            },
                            "customerNumber": {
                              "type": "string",
                              "description": "Customer number assigned by the system"
                            }
                          },
                          "required": [
                            "id",
                            "customerNumber"
                          ]
                        }
                      ]
                    },
                    "customerDetails": {
                      "description": "The checkout sessions's customer detail",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            },
                            "taxIds": {
                              "type": "object",
                              "properties": {
                                "object": {
                                  "type": "string"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "customerId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "customerId"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "clientReferenceId": {
                      "type": "string",
                      "description": "Unique ID string used to identify the session in your backend. This can be your payment ID, cart ID, or similar used to link this Checkout Session with your internal system."
                    },
                    "customerCreation": {
                      "description": "Whether to create a customer for the session. If required, a customer will be created for subsequent payments",
                      "type": "string",
                      "enum": [
                        "if_required",
                        "always"
                      ]
                    },
                    "customerUpdate": {
                      "description": "The customer update settings to use for this checkout to update existing customer details",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "enum": [
                                "auto",
                                "never"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "enum": [
                                "auto",
                                "never"
                              ]
                            },
                            "shipping": {
                              "type": "string",
                              "enum": [
                                "auto",
                                "never"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to complete payment"
                    },
                    "successUrl": {
                      "type": "string",
                      "description": "The URL to redirect the customer to after payment is completed. Only applicable when `afterCompletion` is set to `redirect`"
                    },
                    "cancelUrl": {
                      "type": "string",
                      "description": "The URL to redirect the customer to if they decide to cancel payment"
                    },
                    "submitType": {
                      "default": "pay",
                      "description": "The type of submit button to display on the Checkout page",
                      "type": "string",
                      "enum": [
                        "pay",
                        "book",
                        "donate"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to a Checkout Session object"
                    },
                    "nameCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's name. Default: false"
                    },
                    "emailCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's email address. Default: false"
                    },
                    "phoneNumberCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's phone number Default: false"
                    },
                    "shippingAddressCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's shipping address. Default: false"
                    },
                    "billingAddressCollection": {
                      "type": "boolean",
                      "description": "Whether to collect the customer's billing address. Default: false"
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "numeric",
                                  "dropdown"
                                ]
                              },
                              "label": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "custom"
                                    ]
                                  },
                                  "custom": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "custom"
                                ]
                              },
                              "optional": {
                                "type": "boolean",
                                "default": false
                              },
                              "text": {
                                "type": "object",
                                "properties": {
                                  "maximumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "minimumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ]
                              },
                              "numeric": {
                                "type": "object",
                                "properties": {
                                  "maximumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "minimumLength": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ]
                              },
                              "dropdown": {
                                "type": "object",
                                "properties": {
                                  "options": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "value"
                                      ]
                                    }
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ]
                              }
                            },
                            "required": [
                              "key",
                              "type",
                              "label",
                              "optional"
                            ]
                          }
                        }
                      }
                    },
                    "afterCompletion": {
                      "description": "The action to take after the payment is completed. You can choose to redirect user to your application or use the default payment confirmation page provided by Copperx",
                      "type": "string",
                      "enum": [
                        "redirect",
                        "hosted_confirmation"
                      ]
                    },
                    "afterCompletionConfirmMsg": {
                      "type": "string",
                      "description": "The message to show after successful payment. Only applicable when `afterCompletion` is set to `hosted_confirmation`"
                    },
                    "shippingDetails": {
                      "description": "The shipping address to use for this checkout",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "billingDetails": {
                      "description": "The billing address to use for this checkout",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "lineItems": {
                      "description": "The list of line items to display on the session",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "price": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "billingScheme": {
                                        "description": "The billing scheme to use for this price",
                                        "type": "string",
                                        "enum": [
                                          "per_unit"
                                        ]
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi"
                                        ],
                                        "description": "The currency symbol"
                                      },
                                      "productId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                        "description": "Product's id"
                                      },
                                      "interval": {
                                        "description": "The interval at which to bill for this price. Only required for subscriptions",
                                        "type": "string",
                                        "enum": [
                                          "day",
                                          "week",
                                          "month",
                                          "year"
                                        ]
                                      },
                                      "intervalCount": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                      },
                                      "isActive": {
                                        "type": "boolean",
                                        "description": "Whether the price is currently active"
                                      },
                                      "usageType": {
                                        "description": "The usage type of the price.",
                                        "type": "string",
                                        "enum": [
                                          "licensed"
                                        ]
                                      },
                                      "type": {
                                        "description": "The type of the price",
                                        "type": "string",
                                        "enum": [
                                          "one_time",
                                          "recurring",
                                          "streaming"
                                        ]
                                      },
                                      "unitAmount": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                      },
                                      "unitAmountDecimal": {
                                        "type": "string"
                                      },
                                      "customUnitMax": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                      },
                                      "customUnitMin": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                      },
                                      "customPreset": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                      },
                                      "customUnitAmountSuggestions": {
                                        "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "product": {
                                        "description": "The product this price belongs to",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "createdAt": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "updatedAt": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the product. Displayed on the checkout page"
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "The description of the product. Displayed on the checkout page"
                                              },
                                              "isActive": {
                                                "type": "boolean",
                                                "description": "Whether the product is currently active"
                                              },
                                              "images": {
                                                "maxItems": 8,
                                                "description": "The url of product images. Displayed on the checkout page",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "publicImages": {
                                                "description": "Product images with absolute public url",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "unitLabel": {
                                                "type": "string",
                                                "description": "The label of the unit of the product. Displayed on the checkout page"
                                              },
                                              "url": {
                                                "type": "string",
                                                "description": "The url of the product"
                                              },
                                              "defaultPriceId": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                                "description": "Product's default price id"
                                              },
                                              "metadata": {
                                                "type": "object",
                                                "description": "The metadata of the product"
                                              },
                                              "visibility": {
                                                "description": "The visibility of the product",
                                                "type": "string",
                                                "enum": [
                                                  10,
                                                  20
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name"
                                            ]
                                          }
                                        ]
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                      },
                                      "visibility": {
                                        "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                        "type": "string",
                                        "enum": [
                                          10,
                                          20
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "currency",
                                      "productId",
                                      "type",
                                      "product"
                                    ]
                                  }
                                },
                                "required": [
                                  "price"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    "addresses": {
                      "description": "The list of payment addresses associated with the session. It is the list of the addresses that will be used to pay the amount.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "checkoutSessionId": {
                            "type": "string"
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "address": {
                                "type": "string"
                              },
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi",
                                  "usd",
                                  "inr"
                                ]
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number",
                                "example": 1
                              },
                              "coingeckoId": {
                                "type": "string"
                              },
                              "isPublic": {
                                "type": "boolean"
                              },
                              "superToken": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "SuperToken's address"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "SuperToken's symbol"
                                  }
                                },
                                "required": [
                                  "address",
                                  "decimals",
                                  "symbol"
                                ]
                              },
                              "chain": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Chain id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Chain name"
                                  },
                                  "icon": {
                                    "type": "string",
                                    "description": "Chain icon"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi",
                                      "usd",
                                      "inr"
                                    ],
                                    "description": "Chain currency symbol"
                                  },
                                  "blockExplorerTransactionUrl": {
                                    "type": "string",
                                    "description": "Chain block explorer transaction url"
                                  },
                                  "blockExplorerName": {
                                    "type": "string",
                                    "description": "Chain block explorer name"
                                  },
                                  "type": {
                                    "description": "Chain type",
                                    "type": "string",
                                    "enum": [
                                      "evm",
                                      "solana",
                                      "stripe",
                                      "binance_pay"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "icon",
                                  "currency",
                                  "blockExplorerTransactionUrl",
                                  "blockExplorerName",
                                  "type"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "address",
                              "chainId",
                              "currency",
                              "symbol",
                              "decimals",
                              "isPublic",
                              "chain"
                            ]
                          },
                          "paymentAddress": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "checkoutSessionId",
                          "asset",
                          "paymentAddress"
                        ]
                      }
                    },
                    "paymentIntent": {
                      "description": "The payment intent associated with the session. Payment intent is created when the session is created.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "organizationId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                            },
                            "amount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807"
                            },
                            "amountReceived": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807"
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "requires_payment_method",
                                "requires_confirmation",
                                "requires_action",
                                "processing",
                                "requires_capture",
                                "canceled",
                                "succeeded"
                              ]
                            },
                            "paymentMethodId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                            },
                            "description": {
                              "type": "string"
                            },
                            "paymentMethod": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "assetId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "asset": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Asset id"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Asset name"
                                    },
                                    "chainId": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Asset chain id"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Asset address on chain"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi",
                                        "usd",
                                        "inr"
                                      ],
                                      "description": "Asset currency symbol"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Asset symbol"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Asset decimals in which it is represented on chain"
                                    },
                                    "coingeckoId": {
                                      "type": "string",
                                      "description": "Asset coingecko id"
                                    },
                                    "superToken": {
                                      "description": "SuperToken data",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "description": "SuperToken's address"
                                            },
                                            "decimals": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "SuperToken's symbol"
                                            }
                                          },
                                          "required": [
                                            "address",
                                            "decimals",
                                            "symbol"
                                          ]
                                        }
                                      ]
                                    },
                                    "isEIP5827Supported": {
                                      "type": "boolean",
                                      "description": "Is EIP5827 supported"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "chainId",
                                    "address",
                                    "currency",
                                    "symbol",
                                    "decimals",
                                    "isEIP5827Supported"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "superfluid",
                                    "wallet",
                                    "allowance_based_recurring",
                                    "stripe",
                                    "binance_pay"
                                  ]
                                },
                                "accountAddress": {
                                  "type": "string"
                                },
                                "billingDetails": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name"
                                    },
                                    "email": {
                                      "type": "string",
                                      "description": "The email"
                                    },
                                    "phone": {
                                      "type": "string",
                                      "description": "The phone"
                                    },
                                    "organizationName": {
                                      "type": "string",
                                      "description": "The organization name"
                                    },
                                    "address": {
                                      "description": "The address",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "line1": {
                                              "type": "string"
                                            },
                                            "line2": {
                                              "type": "string"
                                            },
                                            "city": {
                                              "type": "string"
                                            },
                                            "state": {
                                              "type": "string"
                                            },
                                            "postalCode": {
                                              "type": "string"
                                            },
                                            "country": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                "customerId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "options": {
                                  "type": "object"
                                }
                              },
                              "required": [
                                "id",
                                "assetId",
                                "asset",
                                "type"
                              ]
                            },
                            "paymentMethodTypes": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "superfluid",
                                  "wallet",
                                  "allowance_based_recurring",
                                  "stripe",
                                  "binance_pay"
                                ]
                              }
                            },
                            "transferAccountAddress": {
                              "type": "string"
                            },
                            "transactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Transaction type",
                                    "type": "string",
                                    "enum": [
                                      "incoming",
                                      "outgoing",
                                      "event",
                                      "transfer"
                                    ]
                                  },
                                  "transactionRelayId": {
                                    "type": "string",
                                    "description": "Transaction relay id"
                                  },
                                  "transactionHash": {
                                    "type": "string",
                                    "description": "Transaction hash"
                                  },
                                  "nonce": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Transaction nonce"
                                  },
                                  "gasLimit": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Transaction gas limit used in payment"
                                  },
                                  "validUntil": {
                                    "type": "string",
                                    "description": "Transaction valid until"
                                  },
                                  "fromAddress": {
                                    "type": "string",
                                    "description": "Transaction from address"
                                  },
                                  "toAddress": {
                                    "type": "string",
                                    "description": "Transaction to address"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi",
                                      "usd",
                                      "inr"
                                    ],
                                    "description": "Transaction currency"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Transaction created at"
                                  },
                                  "amount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "Transaction amount in 8 decimals"
                                  },
                                  "amountRaw": {
                                    "type": "string",
                                    "description": "Transaction amount raw received from alchemy"
                                  },
                                  "assetId": {
                                    "type": "string",
                                    "description": "Transaction asset id"
                                  },
                                  "asset": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "address": {
                                        "type": "string"
                                      },
                                      "chainId": {
                                        "type": "number",
                                        "example": 1
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi",
                                          "usd",
                                          "inr"
                                        ]
                                      },
                                      "symbol": {
                                        "type": "string"
                                      },
                                      "decimals": {
                                        "type": "number",
                                        "example": 1
                                      },
                                      "coingeckoId": {
                                        "type": "string"
                                      },
                                      "isPublic": {
                                        "type": "boolean"
                                      },
                                      "superToken": {
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "type": "string",
                                            "description": "SuperToken's address"
                                          },
                                          "decimals": {
                                            "type": "number",
                                            "example": 1
                                          },
                                          "symbol": {
                                            "type": "string",
                                            "description": "SuperToken's symbol"
                                          }
                                        },
                                        "required": [
                                          "address",
                                          "decimals",
                                          "symbol"
                                        ]
                                      },
                                      "chain": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "number",
                                            "example": 1,
                                            "description": "Chain id"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Chain name"
                                          },
                                          "icon": {
                                            "type": "string",
                                            "description": "Chain icon"
                                          },
                                          "currency": {
                                            "type": "string",
                                            "enum": [
                                              "usdc",
                                              "usdt",
                                              "dai",
                                              "btc",
                                              "eth",
                                              "matic",
                                              "bnb",
                                              "sol",
                                              "busd",
                                              "food",
                                              "tfi",
                                              "usd",
                                              "inr"
                                            ],
                                            "description": "Chain currency symbol"
                                          },
                                          "blockExplorerTransactionUrl": {
                                            "type": "string",
                                            "description": "Chain block explorer transaction url"
                                          },
                                          "blockExplorerName": {
                                            "type": "string",
                                            "description": "Chain block explorer name"
                                          },
                                          "type": {
                                            "description": "Chain type",
                                            "type": "string",
                                            "enum": [
                                              "evm",
                                              "solana",
                                              "stripe",
                                              "binance_pay"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "icon",
                                          "currency",
                                          "blockExplorerTransactionUrl",
                                          "blockExplorerName",
                                          "type"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "address",
                                      "chainId",
                                      "currency",
                                      "symbol",
                                      "decimals",
                                      "isPublic",
                                      "chain"
                                    ]
                                  },
                                  "transactionUrl": {
                                    "type": "string",
                                    "description": "Transaction url"
                                  }
                                },
                                "required": [
                                  "type",
                                  "fromAddress",
                                  "toAddress",
                                  "currency",
                                  "amountRaw",
                                  "assetId",
                                  "asset"
                                ]
                              }
                            },
                            "paymentReceipt": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "organizationId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "paymentIntentId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "receiptNumber": {
                                  "type": "string"
                                },
                                "uri": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "organizationId",
                                "paymentIntentId",
                                "receiptNumber"
                              ]
                            },
                            "canceledAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "cancellationReason": {
                              "type": "string"
                            },
                            "stripe": {
                              "type": "object",
                              "properties": {
                                "paymentIntentId": {
                                  "type": "string"
                                },
                                "receiptUrl": {
                                  "type": "string"
                                },
                                "cardLast4": {
                                  "type": "string"
                                },
                                "displayName": {
                                  "type": "string"
                                }
                              }
                            },
                            "isMarkRefunded": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "markRefundedAt": {
                              "format": "date-time",
                              "type": "string",
                              "nullable": true
                            },
                            "markRefundedComment": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "id",
                            "organizationId",
                            "status",
                            "paymentMethodId",
                            "transactions"
                          ]
                        }
                      ]
                    },
                    "isMarkRefunded": {
                      "type": "boolean",
                      "description": "Whether to mark the payment as refunded"
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "discounts": {
                      "description": "The list of discounts applied to the session",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "format": "int64",
                            "type": "integer",
                            "example": "9223372036854775807",
                            "description": "The amount of the discount"
                          },
                          "couponId": {
                            "type": "string",
                            "description": "The coupon id of the discount"
                          },
                          "coupon": {
                            "description": "The coupon of the discount",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                                  },
                                  "percentOff": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "example": 1,
                                    "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                                  },
                                  "code": {
                                    "type": "string",
                                    "description": "The coupon code"
                                  }
                                },
                                "required": [
                                  "name",
                                  "percentOff",
                                  "code"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "amount",
                          "couponId",
                          "coupon"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "amountTotal",
                    "amountSubtotal",
                    "currency",
                    "status",
                    "paymentStatus",
                    "url",
                    "lineItems",
                    "addresses",
                    "paymentIntent",
                    "discounts"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Checkout Sessions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/checkout/sessions/{id}/completed_webhook_delivered": {
      "get": {
        "operationId": "SessionsController_checkoutSessionCompletedStatus",
        "summary": "Get the status of checkout session",
        "description": "Returns only a status of checkout session with its transaction hash",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "completed": {
                      "type": "boolean",
                      "description": "if true, the checkout session was completed"
                    },
                    "transactionHash": {
                      "type": "string",
                      "description": "The transaction hash of the payment"
                    },
                    "status": {
                      "description": "The status of the session",
                      "type": "string",
                      "enum": [
                        "open",
                        "complete",
                        "incomplete",
                        "expired"
                      ]
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date when the session was last updated"
                    }
                  },
                  "required": [
                    "completed",
                    "status",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Checkout Sessions"
        ]
      }
    },
    "/api/v1/payment-links": {
      "post": {
        "operationId": "PaymentLinkController_create",
        "summary": "Create a payment link",
        "description": "Create a payment link to accept payments from customers. You can accept payments in a fixed or variable amount from your customers. Whether you are doing a freelancing, running a crowdfunding campaign, accept donations, or just looking for a simple way to build patrons via crypto, these payment links are the perfect solution.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Payment link type",
                    "type": "string",
                    "enum": [
                      "one_time",
                      "multiple"
                    ]
                  },
                  "amount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "Amount's currency"
                  },
                  "currencies": {
                    "type": "array",
                    "description": "Currencies in which amount is to be taken",
                    "items": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    }
                  },
                  "preferredCurrency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                  },
                  "title": {
                    "type": "string",
                    "description": "Payment link title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment link description"
                  },
                  "image": {
                    "type": "string",
                    "description": "Payment link product image"
                  },
                  "tags": {
                    "description": "Payment link tags",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "nameCollection": {
                    "type": "boolean",
                    "description": "If true then take name from user"
                  },
                  "emailCollection": {
                    "type": "boolean",
                    "description": "If true then take email from user"
                  },
                  "phoneNumberCollection": {
                    "type": "boolean",
                    "description": "If true then take phone number from user"
                  },
                  "shippingAddressCollection": {
                    "type": "boolean",
                    "description": "If true then take shipping address from user"
                  },
                  "billingAddressCollection": {
                    "type": "boolean",
                    "description": "If true then take billing address from user"
                  },
                  "customFields": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "text",
                                "numeric",
                                "dropdown"
                              ]
                            },
                            "label": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "custom"
                                  ]
                                },
                                "custom": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "custom"
                              ]
                            },
                            "optional": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "key",
                            "type",
                            "label",
                            "optional"
                          ]
                        }
                      }
                    }
                  },
                  "submitType": {
                    "description": "Payment link submit type",
                    "type": "string",
                    "enum": [
                      "pay",
                      "book",
                      "donate"
                    ]
                  },
                  "afterCompletion": {
                    "description": "After completion action to perform on checkout page",
                    "type": "string",
                    "enum": [
                      "redirect",
                      "hosted_confirmation"
                    ]
                  },
                  "afterCompletionRedirectUrl": {
                    "type": "string",
                    "description": "After completion redirect url to redirect user to after payment"
                  },
                  "afterCompletionConfirmMsg": {
                    "type": "string",
                    "description": "After completion confirmation message to show to user after payment"
                  },
                  "suggestedCurrency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "Suggested currency to take payment in"
                  },
                  "suggestedAmounts": {
                    "description": "Suggested amounts to show on checkout page if amount is not provided",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "productId": {
                    "type": "string",
                    "description": "Product id to take payment for"
                  },
                  "allowPromotionCodes": {
                    "type": "boolean",
                    "description": "Enables user redeemable promotion codes."
                  },
                  "allowedChains": {
                    "description": "Allowed chains to take payment from",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chainId": {
                          "type": "number",
                          "example": 1,
                          "description": "Chain id"
                        },
                        "isPreferred": {
                          "type": "boolean",
                          "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                        }
                      },
                      "required": [
                        "chainId",
                        "isPreferred"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "title",
                  "tags",
                  "nameCollection",
                  "emailCollection",
                  "phoneNumberCollection",
                  "shippingAddressCollection",
                  "billingAddressCollection",
                  "submitType",
                  "afterCompletion"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization's id"
                    },
                    "type": {
                      "description": "Payment link type",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "multiple"
                      ]
                    },
                    "amount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Amount's currency"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Currencies in which amount is to be taken",
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    },
                    "preferredCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                    },
                    "title": {
                      "type": "string",
                      "description": "Payment link title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment link description"
                    },
                    "image": {
                      "type": "string",
                      "description": "Payment link product image"
                    },
                    "publicImage": {
                      "type": "string",
                      "description": "Payment link product image with absolute public url"
                    },
                    "tags": {
                      "description": "Payment link tags",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the payment link is currently active"
                    },
                    "nameCollection": {
                      "type": "boolean",
                      "description": "If true then take name from user"
                    },
                    "emailCollection": {
                      "type": "boolean",
                      "description": "If true then take email from user"
                    },
                    "phoneNumberCollection": {
                      "type": "boolean",
                      "description": "If true then take phone number from user"
                    },
                    "shippingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take shipping address from user"
                    },
                    "billingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take billing address from user"
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "numeric",
                                  "dropdown"
                                ]
                              },
                              "label": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "custom"
                                    ]
                                  },
                                  "custom": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "custom"
                                ]
                              },
                              "optional": {
                                "type": "boolean",
                                "default": false
                              }
                            },
                            "required": [
                              "key",
                              "type",
                              "label",
                              "optional"
                            ]
                          }
                        }
                      }
                    },
                    "submitType": {
                      "description": "Payment link submit type",
                      "type": "string",
                      "enum": [
                        "pay",
                        "book",
                        "donate"
                      ]
                    },
                    "afterCompletion": {
                      "description": "After completion action to perform on checkout page",
                      "type": "string",
                      "enum": [
                        "redirect",
                        "hosted_confirmation"
                      ]
                    },
                    "afterCompletionRedirectUrl": {
                      "type": "string",
                      "description": "After completion redirect url to redirect user to after payment"
                    },
                    "afterCompletionConfirmMsg": {
                      "type": "string",
                      "description": "After completion confirmation message to show to user after payment"
                    },
                    "suggestedCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Suggested currency to take payment in"
                    },
                    "suggestedAmounts": {
                      "description": "Suggested amounts to show on checkout page if amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "type": "string",
                      "description": "Product id to take payment for"
                    },
                    "allowedChains": {
                      "description": "Allowed chains to take payment from",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Chain id"
                          },
                          "isPreferred": {
                            "type": "boolean",
                            "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                          }
                        },
                        "required": [
                          "chainId",
                          "isPreferred"
                        ]
                      }
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "priceType": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "type",
                    "title",
                    "tags",
                    "nameCollection",
                    "emailCollection",
                    "phoneNumberCollection",
                    "shippingAddressCollection",
                    "billingAddressCollection",
                    "submitType",
                    "afterCompletion",
                    "priceType"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Links"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PaymentLinkController_findAll",
        "summary": "List of payment links",
        "description": "Returns the list of payment links",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "To filter active payment links",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "organizationId": {
                                "type": "string",
                                "description": "Organization's id"
                              },
                              "type": {
                                "description": "Payment link type",
                                "type": "string",
                                "enum": [
                                  "one_time",
                                  "multiple"
                                ]
                              },
                              "amount": {
                                "format": "int64",
                                "type": "integer",
                                "example": "9223372036854775807",
                                "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ],
                                "description": "Amount's currency"
                              },
                              "currencies": {
                                "type": "array",
                                "description": "Currencies in which amount is to be taken",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              },
                              "preferredCurrency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ],
                                "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                              },
                              "title": {
                                "type": "string",
                                "description": "Payment link title"
                              },
                              "description": {
                                "type": "string",
                                "description": "Payment link description"
                              },
                              "image": {
                                "type": "string",
                                "description": "Payment link product image"
                              },
                              "publicImage": {
                                "type": "string",
                                "description": "Payment link product image with absolute public url"
                              },
                              "tags": {
                                "description": "Payment link tags",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isActive": {
                                "type": "boolean",
                                "description": "Whether the payment link is currently active"
                              },
                              "nameCollection": {
                                "type": "boolean",
                                "description": "If true then take name from user"
                              },
                              "emailCollection": {
                                "type": "boolean",
                                "description": "If true then take email from user"
                              },
                              "phoneNumberCollection": {
                                "type": "boolean",
                                "description": "If true then take phone number from user"
                              },
                              "shippingAddressCollection": {
                                "type": "boolean",
                                "description": "If true then take shipping address from user"
                              },
                              "billingAddressCollection": {
                                "type": "boolean",
                                "description": "If true then take billing address from user"
                              },
                              "customFields": {
                                "type": "object",
                                "properties": {
                                  "fields": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "numeric",
                                            "dropdown"
                                          ]
                                        },
                                        "label": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "custom"
                                              ]
                                            },
                                            "custom": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "custom"
                                          ]
                                        },
                                        "optional": {
                                          "type": "boolean",
                                          "default": false
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "type",
                                        "label",
                                        "optional"
                                      ]
                                    }
                                  }
                                }
                              },
                              "submitType": {
                                "description": "Payment link submit type",
                                "type": "string",
                                "enum": [
                                  "pay",
                                  "book",
                                  "donate"
                                ]
                              },
                              "afterCompletion": {
                                "description": "After completion action to perform on checkout page",
                                "type": "string",
                                "enum": [
                                  "redirect",
                                  "hosted_confirmation"
                                ]
                              },
                              "afterCompletionRedirectUrl": {
                                "type": "string",
                                "description": "After completion redirect url to redirect user to after payment"
                              },
                              "afterCompletionConfirmMsg": {
                                "type": "string",
                                "description": "After completion confirmation message to show to user after payment"
                              },
                              "suggestedCurrency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ],
                                "description": "Suggested currency to take payment in"
                              },
                              "suggestedAmounts": {
                                "description": "Suggested amounts to show on checkout page if amount is not provided",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "productId": {
                                "type": "string",
                                "description": "Product id to take payment for"
                              },
                              "allowedChains": {
                                "description": "Allowed chains to take payment from",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "chainId": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Chain id"
                                    },
                                    "isPreferred": {
                                      "type": "boolean",
                                      "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                                    }
                                  },
                                  "required": [
                                    "chainId",
                                    "isPreferred"
                                  ]
                                }
                              },
                              "interval": {
                                "description": "The interval at which to bill for this price. Only required for subscriptions",
                                "type": "string",
                                "enum": [
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ]
                              },
                              "intervalCount": {
                                "type": "number",
                                "example": 1,
                                "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                              },
                              "priceType": {
                                "description": "The type of the price",
                                "type": "string",
                                "enum": [
                                  "one_time",
                                  "recurring",
                                  "streaming"
                                ]
                              },
                              "allowPromotionCodes": {
                                "type": "boolean",
                                "description": "Enables user redeemable promotion codes."
                              }
                            },
                            "required": [
                              "id",
                              "organizationId",
                              "type",
                              "title",
                              "tags",
                              "nameCollection",
                              "emailCollection",
                              "phoneNumberCollection",
                              "shippingAddressCollection",
                              "billingAddressCollection",
                              "submitType",
                              "afterCompletion",
                              "priceType"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Links"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-links/{linkId}": {
      "get": {
        "operationId": "PaymentLinkController_get",
        "summary": "Get a payment link",
        "description": "Returns a payment link",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization's id"
                    },
                    "type": {
                      "description": "Payment link type",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "multiple"
                      ]
                    },
                    "amount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Amount's currency"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Currencies in which amount is to be taken",
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    },
                    "preferredCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                    },
                    "title": {
                      "type": "string",
                      "description": "Payment link title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment link description"
                    },
                    "image": {
                      "type": "string",
                      "description": "Payment link product image"
                    },
                    "publicImage": {
                      "type": "string",
                      "description": "Payment link product image with absolute public url"
                    },
                    "tags": {
                      "description": "Payment link tags",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the payment link is currently active"
                    },
                    "nameCollection": {
                      "type": "boolean",
                      "description": "If true then take name from user"
                    },
                    "emailCollection": {
                      "type": "boolean",
                      "description": "If true then take email from user"
                    },
                    "phoneNumberCollection": {
                      "type": "boolean",
                      "description": "If true then take phone number from user"
                    },
                    "shippingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take shipping address from user"
                    },
                    "billingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take billing address from user"
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "numeric",
                                  "dropdown"
                                ]
                              },
                              "label": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "custom"
                                    ]
                                  },
                                  "custom": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "custom"
                                ]
                              },
                              "optional": {
                                "type": "boolean",
                                "default": false
                              }
                            },
                            "required": [
                              "key",
                              "type",
                              "label",
                              "optional"
                            ]
                          }
                        }
                      }
                    },
                    "submitType": {
                      "description": "Payment link submit type",
                      "type": "string",
                      "enum": [
                        "pay",
                        "book",
                        "donate"
                      ]
                    },
                    "afterCompletion": {
                      "description": "After completion action to perform on checkout page",
                      "type": "string",
                      "enum": [
                        "redirect",
                        "hosted_confirmation"
                      ]
                    },
                    "afterCompletionRedirectUrl": {
                      "type": "string",
                      "description": "After completion redirect url to redirect user to after payment"
                    },
                    "afterCompletionConfirmMsg": {
                      "type": "string",
                      "description": "After completion confirmation message to show to user after payment"
                    },
                    "suggestedCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Suggested currency to take payment in"
                    },
                    "suggestedAmounts": {
                      "description": "Suggested amounts to show on checkout page if amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "type": "string",
                      "description": "Product id to take payment for"
                    },
                    "allowedChains": {
                      "description": "Allowed chains to take payment from",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Chain id"
                          },
                          "isPreferred": {
                            "type": "boolean",
                            "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                          }
                        },
                        "required": [
                          "chainId",
                          "isPreferred"
                        ]
                      }
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "priceType": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "type",
                    "title",
                    "tags",
                    "nameCollection",
                    "emailCollection",
                    "phoneNumberCollection",
                    "shippingAddressCollection",
                    "billingAddressCollection",
                    "submitType",
                    "afterCompletion",
                    "priceType"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Links"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "PaymentLinkController_update",
        "summary": "Update a payment link",
        "description": "Updates a payment link",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Payment link type",
                    "type": "string",
                    "enum": [
                      "one_time",
                      "multiple"
                    ]
                  },
                  "amount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "Amount's currency"
                  },
                  "currencies": {
                    "type": "array",
                    "description": "Currencies in which amount is to be taken",
                    "items": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    }
                  },
                  "preferredCurrency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                  },
                  "title": {
                    "type": "string",
                    "description": "Payment link title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Payment link description"
                  },
                  "image": {
                    "type": "string",
                    "description": "Payment link product image"
                  },
                  "tags": {
                    "description": "Payment link tags",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "nameCollection": {
                    "type": "boolean",
                    "description": "If true then take name from user"
                  },
                  "emailCollection": {
                    "type": "boolean",
                    "description": "If true then take email from user"
                  },
                  "phoneNumberCollection": {
                    "type": "boolean",
                    "description": "If true then take phone number from user"
                  },
                  "shippingAddressCollection": {
                    "type": "boolean",
                    "description": "If true then take shipping address from user"
                  },
                  "billingAddressCollection": {
                    "type": "boolean",
                    "description": "If true then take billing address from user"
                  },
                  "customFields": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "text",
                                "numeric",
                                "dropdown"
                              ]
                            },
                            "label": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "custom"
                                  ]
                                },
                                "custom": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "custom"
                              ]
                            },
                            "optional": {
                              "type": "boolean",
                              "default": false
                            }
                          },
                          "required": [
                            "key",
                            "type",
                            "label",
                            "optional"
                          ]
                        }
                      }
                    }
                  },
                  "submitType": {
                    "description": "Payment link submit type",
                    "type": "string",
                    "enum": [
                      "pay",
                      "book",
                      "donate"
                    ]
                  },
                  "afterCompletion": {
                    "description": "After completion action to perform on checkout page",
                    "type": "string",
                    "enum": [
                      "redirect",
                      "hosted_confirmation"
                    ]
                  },
                  "afterCompletionRedirectUrl": {
                    "type": "string",
                    "description": "After completion redirect url to redirect user to after payment"
                  },
                  "afterCompletionConfirmMsg": {
                    "type": "string",
                    "description": "After completion confirmation message to show to user after payment"
                  },
                  "suggestedCurrency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "Suggested currency to take payment in"
                  },
                  "suggestedAmounts": {
                    "description": "Suggested amounts to show on checkout page if amount is not provided",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "productId": {
                    "type": "string",
                    "description": "Product id to take payment for"
                  },
                  "allowPromotionCodes": {
                    "type": "boolean",
                    "description": "Enables user redeemable promotion codes."
                  },
                  "allowedChains": {
                    "description": "Allowed chains to take payment from",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chainId": {
                          "type": "number",
                          "example": 1,
                          "description": "Chain id"
                        },
                        "isPreferred": {
                          "type": "boolean",
                          "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                        }
                      },
                      "required": [
                        "chainId",
                        "isPreferred"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "title",
                  "tags",
                  "nameCollection",
                  "emailCollection",
                  "phoneNumberCollection",
                  "shippingAddressCollection",
                  "billingAddressCollection",
                  "submitType",
                  "afterCompletion"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization's id"
                    },
                    "type": {
                      "description": "Payment link type",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "multiple"
                      ]
                    },
                    "amount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Amount's currency"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Currencies in which amount is to be taken",
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    },
                    "preferredCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                    },
                    "title": {
                      "type": "string",
                      "description": "Payment link title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment link description"
                    },
                    "image": {
                      "type": "string",
                      "description": "Payment link product image"
                    },
                    "publicImage": {
                      "type": "string",
                      "description": "Payment link product image with absolute public url"
                    },
                    "tags": {
                      "description": "Payment link tags",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the payment link is currently active"
                    },
                    "nameCollection": {
                      "type": "boolean",
                      "description": "If true then take name from user"
                    },
                    "emailCollection": {
                      "type": "boolean",
                      "description": "If true then take email from user"
                    },
                    "phoneNumberCollection": {
                      "type": "boolean",
                      "description": "If true then take phone number from user"
                    },
                    "shippingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take shipping address from user"
                    },
                    "billingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take billing address from user"
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "numeric",
                                  "dropdown"
                                ]
                              },
                              "label": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "custom"
                                    ]
                                  },
                                  "custom": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "custom"
                                ]
                              },
                              "optional": {
                                "type": "boolean",
                                "default": false
                              }
                            },
                            "required": [
                              "key",
                              "type",
                              "label",
                              "optional"
                            ]
                          }
                        }
                      }
                    },
                    "submitType": {
                      "description": "Payment link submit type",
                      "type": "string",
                      "enum": [
                        "pay",
                        "book",
                        "donate"
                      ]
                    },
                    "afterCompletion": {
                      "description": "After completion action to perform on checkout page",
                      "type": "string",
                      "enum": [
                        "redirect",
                        "hosted_confirmation"
                      ]
                    },
                    "afterCompletionRedirectUrl": {
                      "type": "string",
                      "description": "After completion redirect url to redirect user to after payment"
                    },
                    "afterCompletionConfirmMsg": {
                      "type": "string",
                      "description": "After completion confirmation message to show to user after payment"
                    },
                    "suggestedCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Suggested currency to take payment in"
                    },
                    "suggestedAmounts": {
                      "description": "Suggested amounts to show on checkout page if amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "type": "string",
                      "description": "Product id to take payment for"
                    },
                    "allowedChains": {
                      "description": "Allowed chains to take payment from",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Chain id"
                          },
                          "isPreferred": {
                            "type": "boolean",
                            "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                          }
                        },
                        "required": [
                          "chainId",
                          "isPreferred"
                        ]
                      }
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "priceType": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "type",
                    "title",
                    "tags",
                    "nameCollection",
                    "emailCollection",
                    "phoneNumberCollection",
                    "shippingAddressCollection",
                    "billingAddressCollection",
                    "submitType",
                    "afterCompletion",
                    "priceType"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Links"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PaymentLinkController_delete",
        "summary": "Delete a payment link",
        "description": "Deletes a payment link",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Links"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-links/{linkId}/activate": {
      "put": {
        "operationId": "PaymentLinkController_activate",
        "summary": "Activate a payment link",
        "description": "Activate a payment link",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization's id"
                    },
                    "type": {
                      "description": "Payment link type",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "multiple"
                      ]
                    },
                    "amount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Amount's currency"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Currencies in which amount is to be taken",
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    },
                    "preferredCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                    },
                    "title": {
                      "type": "string",
                      "description": "Payment link title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment link description"
                    },
                    "image": {
                      "type": "string",
                      "description": "Payment link product image"
                    },
                    "publicImage": {
                      "type": "string",
                      "description": "Payment link product image with absolute public url"
                    },
                    "tags": {
                      "description": "Payment link tags",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the payment link is currently active"
                    },
                    "nameCollection": {
                      "type": "boolean",
                      "description": "If true then take name from user"
                    },
                    "emailCollection": {
                      "type": "boolean",
                      "description": "If true then take email from user"
                    },
                    "phoneNumberCollection": {
                      "type": "boolean",
                      "description": "If true then take phone number from user"
                    },
                    "shippingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take shipping address from user"
                    },
                    "billingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take billing address from user"
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "numeric",
                                  "dropdown"
                                ]
                              },
                              "label": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "custom"
                                    ]
                                  },
                                  "custom": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "custom"
                                ]
                              },
                              "optional": {
                                "type": "boolean",
                                "default": false
                              }
                            },
                            "required": [
                              "key",
                              "type",
                              "label",
                              "optional"
                            ]
                          }
                        }
                      }
                    },
                    "submitType": {
                      "description": "Payment link submit type",
                      "type": "string",
                      "enum": [
                        "pay",
                        "book",
                        "donate"
                      ]
                    },
                    "afterCompletion": {
                      "description": "After completion action to perform on checkout page",
                      "type": "string",
                      "enum": [
                        "redirect",
                        "hosted_confirmation"
                      ]
                    },
                    "afterCompletionRedirectUrl": {
                      "type": "string",
                      "description": "After completion redirect url to redirect user to after payment"
                    },
                    "afterCompletionConfirmMsg": {
                      "type": "string",
                      "description": "After completion confirmation message to show to user after payment"
                    },
                    "suggestedCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Suggested currency to take payment in"
                    },
                    "suggestedAmounts": {
                      "description": "Suggested amounts to show on checkout page if amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "type": "string",
                      "description": "Product id to take payment for"
                    },
                    "allowedChains": {
                      "description": "Allowed chains to take payment from",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Chain id"
                          },
                          "isPreferred": {
                            "type": "boolean",
                            "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                          }
                        },
                        "required": [
                          "chainId",
                          "isPreferred"
                        ]
                      }
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "priceType": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "type",
                    "title",
                    "tags",
                    "nameCollection",
                    "emailCollection",
                    "phoneNumberCollection",
                    "shippingAddressCollection",
                    "billingAddressCollection",
                    "submitType",
                    "afterCompletion",
                    "priceType"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Links"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-links/{linkId}/deactivate": {
      "put": {
        "operationId": "PaymentLinkController_deactivate",
        "summary": "Deactivate a payment link",
        "description": "Deactivate a payment link",
        "parameters": [
          {
            "name": "linkId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization's id"
                    },
                    "type": {
                      "description": "Payment link type",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "multiple"
                      ]
                    },
                    "amount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Amount's currency"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Currencies in which amount is to be taken",
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    },
                    "preferredCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Preferred currency. If provided then it will be selected by default on checkout page"
                    },
                    "title": {
                      "type": "string",
                      "description": "Payment link title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Payment link description"
                    },
                    "image": {
                      "type": "string",
                      "description": "Payment link product image"
                    },
                    "publicImage": {
                      "type": "string",
                      "description": "Payment link product image with absolute public url"
                    },
                    "tags": {
                      "description": "Payment link tags",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the payment link is currently active"
                    },
                    "nameCollection": {
                      "type": "boolean",
                      "description": "If true then take name from user"
                    },
                    "emailCollection": {
                      "type": "boolean",
                      "description": "If true then take email from user"
                    },
                    "phoneNumberCollection": {
                      "type": "boolean",
                      "description": "If true then take phone number from user"
                    },
                    "shippingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take shipping address from user"
                    },
                    "billingAddressCollection": {
                      "type": "boolean",
                      "description": "If true then take billing address from user"
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "numeric",
                                  "dropdown"
                                ]
                              },
                              "label": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "custom"
                                    ]
                                  },
                                  "custom": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "custom"
                                ]
                              },
                              "optional": {
                                "type": "boolean",
                                "default": false
                              }
                            },
                            "required": [
                              "key",
                              "type",
                              "label",
                              "optional"
                            ]
                          }
                        }
                      }
                    },
                    "submitType": {
                      "description": "Payment link submit type",
                      "type": "string",
                      "enum": [
                        "pay",
                        "book",
                        "donate"
                      ]
                    },
                    "afterCompletion": {
                      "description": "After completion action to perform on checkout page",
                      "type": "string",
                      "enum": [
                        "redirect",
                        "hosted_confirmation"
                      ]
                    },
                    "afterCompletionRedirectUrl": {
                      "type": "string",
                      "description": "After completion redirect url to redirect user to after payment"
                    },
                    "afterCompletionConfirmMsg": {
                      "type": "string",
                      "description": "After completion confirmation message to show to user after payment"
                    },
                    "suggestedCurrency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "Suggested currency to take payment in"
                    },
                    "suggestedAmounts": {
                      "description": "Suggested amounts to show on checkout page if amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "productId": {
                      "type": "string",
                      "description": "Product id to take payment for"
                    },
                    "allowedChains": {
                      "description": "Allowed chains to take payment from",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Chain id"
                          },
                          "isPreferred": {
                            "type": "boolean",
                            "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                          }
                        },
                        "required": [
                          "chainId",
                          "isPreferred"
                        ]
                      }
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "priceType": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "type",
                    "title",
                    "tags",
                    "nameCollection",
                    "emailCollection",
                    "phoneNumberCollection",
                    "shippingAddressCollection",
                    "billingAddressCollection",
                    "submitType",
                    "afterCompletion",
                    "priceType"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Links"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/prices": {
      "post": {
        "operationId": "PriceController_create",
        "summary": "Create a price",
        "description": "Creates a price with product",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The currency symbol"
                  },
                  "interval": {
                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                    "type": "string",
                    "enum": [
                      "day",
                      "week",
                      "month",
                      "year"
                    ]
                  },
                  "intervalCount": {
                    "type": "number",
                    "example": 1,
                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                  },
                  "unitAmount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                  },
                  "customPreset": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                  },
                  "customUnitAmountSuggestions": {
                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                  },
                  "visibility": {
                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  },
                  "nickname": {
                    "type": "string",
                    "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
                  },
                  "type": {
                    "description": "The type of the price. If price has interval and type is not provided then price type is set to default price type configured in settings",
                    "default": "one_time",
                    "type": "string",
                    "enum": [
                      "one_time",
                      "recurring",
                      "streaming"
                    ]
                  },
                  "productId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "Product's id to create a price for"
                  },
                  "productData": {
                    "description": "The product data to create a product and a price for",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the product. Displayed on the checkout page"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the product. Displayed on the checkout page"
                          },
                          "images": {
                            "maxItems": 8,
                            "description": "The url of product images. Displayed on the checkout page",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "unitLabel": {
                            "type": "string",
                            "description": "The label of the unit of the product. Displayed on the checkout page"
                          },
                          "url": {
                            "type": "string",
                            "description": "The url of the product"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "The metadata of the product"
                          },
                          "visibility": {
                            "description": "The visibility of the product",
                            "type": "string",
                            "enum": [
                              10,
                              20
                            ]
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "currency",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingScheme": {
                      "description": "The billing scheme to use for this price",
                      "type": "string",
                      "enum": [
                        "per_unit"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "The currency symbol"
                    },
                    "productId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's id"
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the price is currently active"
                    },
                    "usageType": {
                      "description": "The usage type of the price.",
                      "type": "string",
                      "enum": [
                        "licensed"
                      ]
                    },
                    "type": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "unitAmount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                    },
                    "unitAmountDecimal": {
                      "type": "string"
                    },
                    "customUnitMax": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customUnitMin": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customPreset": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                    },
                    "customUnitAmountSuggestions": {
                      "description": "Amount suggestions for this price. Only if unit amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product": {
                      "description": "The product this price belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product. Displayed on the checkout page"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the product. Displayed on the checkout page"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the product is currently active"
                            },
                            "images": {
                              "maxItems": 8,
                              "description": "The url of product images. Displayed on the checkout page",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "publicImages": {
                              "description": "Product images with absolute public url",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "unitLabel": {
                              "type": "string",
                              "description": "The label of the unit of the product. Displayed on the checkout page"
                            },
                            "url": {
                              "type": "string",
                              "description": "The url of the product"
                            },
                            "defaultPriceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's default price id"
                            },
                            "metadata": {
                              "type": "object",
                              "description": "The metadata of the product"
                            },
                            "visibility": {
                              "description": "The visibility of the product",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "visibility": {
                      "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "nickname": {
                      "type": "string",
                      "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "productId",
                    "type",
                    "product"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Price"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PriceController_findAll",
        "summary": "List of prices",
        "description": "Returns the list of prices",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "required": false,
            "in": "query",
            "description": "To filter prices by visibility",
            "schema": {
              "type": "string",
              "enum": [
                10,
                20
              ]
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "If true, only active prices will be returned",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "To filter prices by type",
            "schema": {
              "type": "string",
              "enum": [
                "one_time",
                "recurring",
                "streaming"
              ]
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "To filter prices by product id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "billingScheme": {
                                "description": "The billing scheme to use for this price",
                                "type": "string",
                                "enum": [
                                  "per_unit"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ],
                                "description": "The currency symbol"
                              },
                              "productId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                "description": "Product's id"
                              },
                              "interval": {
                                "description": "The interval at which to bill for this price. Only required for subscriptions",
                                "type": "string",
                                "enum": [
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ]
                              },
                              "intervalCount": {
                                "type": "number",
                                "example": 1,
                                "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                              },
                              "isActive": {
                                "type": "boolean",
                                "description": "Whether the price is currently active"
                              },
                              "usageType": {
                                "description": "The usage type of the price.",
                                "type": "string",
                                "enum": [
                                  "licensed"
                                ]
                              },
                              "type": {
                                "description": "The type of the price",
                                "type": "string",
                                "enum": [
                                  "one_time",
                                  "recurring",
                                  "streaming"
                                ]
                              },
                              "unitAmount": {
                                "format": "int64",
                                "type": "integer",
                                "example": "9223372036854775807",
                                "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                              },
                              "unitAmountDecimal": {
                                "type": "string"
                              },
                              "customUnitMax": {
                                "format": "int64",
                                "type": "integer",
                                "example": "9223372036854775807",
                                "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                              },
                              "customUnitMin": {
                                "format": "int64",
                                "type": "integer",
                                "example": "9223372036854775807",
                                "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                              },
                              "customPreset": {
                                "format": "int64",
                                "type": "integer",
                                "example": "9223372036854775807",
                                "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                              },
                              "customUnitAmountSuggestions": {
                                "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product": {
                                "description": "The product this price belongs to",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the product. Displayed on the checkout page"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "The description of the product. Displayed on the checkout page"
                                      },
                                      "isActive": {
                                        "type": "boolean",
                                        "description": "Whether the product is currently active"
                                      },
                                      "images": {
                                        "maxItems": 8,
                                        "description": "The url of product images. Displayed on the checkout page",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "publicImages": {
                                        "description": "Product images with absolute public url",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "unitLabel": {
                                        "type": "string",
                                        "description": "The label of the unit of the product. Displayed on the checkout page"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "The url of the product"
                                      },
                                      "defaultPriceId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                        "description": "Product's default price id"
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "description": "The metadata of the product"
                                      },
                                      "visibility": {
                                        "description": "The visibility of the product",
                                        "type": "string",
                                        "enum": [
                                          10,
                                          20
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ]
                                  }
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                              },
                              "visibility": {
                                "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                "type": "string",
                                "enum": [
                                  10,
                                  20
                                ]
                              },
                              "nickname": {
                                "type": "string",
                                "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
                              }
                            },
                            "required": [
                              "id",
                              "currency",
                              "productId",
                              "type",
                              "product"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Price"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/prices/{id}": {
      "get": {
        "operationId": "PriceController_get",
        "summary": "Get a price",
        "description": "Returns a price",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingScheme": {
                      "description": "The billing scheme to use for this price",
                      "type": "string",
                      "enum": [
                        "per_unit"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "The currency symbol"
                    },
                    "productId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's id"
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the price is currently active"
                    },
                    "usageType": {
                      "description": "The usage type of the price.",
                      "type": "string",
                      "enum": [
                        "licensed"
                      ]
                    },
                    "type": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "unitAmount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                    },
                    "unitAmountDecimal": {
                      "type": "string"
                    },
                    "customUnitMax": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customUnitMin": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customPreset": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                    },
                    "customUnitAmountSuggestions": {
                      "description": "Amount suggestions for this price. Only if unit amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product": {
                      "description": "The product this price belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product. Displayed on the checkout page"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the product. Displayed on the checkout page"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the product is currently active"
                            },
                            "images": {
                              "maxItems": 8,
                              "description": "The url of product images. Displayed on the checkout page",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "publicImages": {
                              "description": "Product images with absolute public url",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "unitLabel": {
                              "type": "string",
                              "description": "The label of the unit of the product. Displayed on the checkout page"
                            },
                            "url": {
                              "type": "string",
                              "description": "The url of the product"
                            },
                            "defaultPriceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's default price id"
                            },
                            "metadata": {
                              "type": "object",
                              "description": "The metadata of the product"
                            },
                            "visibility": {
                              "description": "The visibility of the product",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "visibility": {
                      "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "nickname": {
                      "type": "string",
                      "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "productId",
                    "type",
                    "product"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Price"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "PriceController_update",
        "summary": "Update a price",
        "description": "Updates a price nickname and metadata",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the price is currently active"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ],
                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard"
                  },
                  "nickname": {
                    "type": "string",
                    "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingScheme": {
                      "description": "The billing scheme to use for this price",
                      "type": "string",
                      "enum": [
                        "per_unit"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "The currency symbol"
                    },
                    "productId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's id"
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the price is currently active"
                    },
                    "usageType": {
                      "description": "The usage type of the price.",
                      "type": "string",
                      "enum": [
                        "licensed"
                      ]
                    },
                    "type": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "unitAmount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                    },
                    "unitAmountDecimal": {
                      "type": "string"
                    },
                    "customUnitMax": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customUnitMin": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customPreset": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                    },
                    "customUnitAmountSuggestions": {
                      "description": "Amount suggestions for this price. Only if unit amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product": {
                      "description": "The product this price belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product. Displayed on the checkout page"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the product. Displayed on the checkout page"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the product is currently active"
                            },
                            "images": {
                              "maxItems": 8,
                              "description": "The url of product images. Displayed on the checkout page",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "publicImages": {
                              "description": "Product images with absolute public url",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "unitLabel": {
                              "type": "string",
                              "description": "The label of the unit of the product. Displayed on the checkout page"
                            },
                            "url": {
                              "type": "string",
                              "description": "The url of the product"
                            },
                            "defaultPriceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's default price id"
                            },
                            "metadata": {
                              "type": "object",
                              "description": "The metadata of the product"
                            },
                            "visibility": {
                              "description": "The visibility of the product",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "visibility": {
                      "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "nickname": {
                      "type": "string",
                      "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "productId",
                    "type",
                    "product"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Price"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/products": {
      "post": {
        "operationId": "ProductController_create",
        "summary": "Create a product",
        "description": "Creates a product",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product. Displayed on the checkout page"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the product. Displayed on the checkout page"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the product is currently active"
                  },
                  "images": {
                    "maxItems": 8,
                    "description": "The url of product images. Displayed on the checkout page",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unitLabel": {
                    "type": "string",
                    "description": "The label of the unit of the product. Displayed on the checkout page"
                  },
                  "url": {
                    "type": "string",
                    "description": "The url of the product"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the product"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ],
                    "description": "The visibility of the product"
                  },
                  "defaultPriceData": {
                    "description": "The default price data to attach to the product",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "one_time",
                              "recurring",
                              "streaming"
                            ],
                            "description": "The type of the price"
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ],
                            "description": "The currency symbol"
                          },
                          "unitAmount": {
                            "format": "int64",
                            "type": "integer",
                            "example": "9223372036854775807",
                            "description": "The unit amount in 8 decimals, represented as a whole integer"
                          },
                          "interval": {
                            "description": "The interval at which to bill for this price. Only required for subscriptions",
                            "type": "string",
                            "enum": [
                              "day",
                              "week",
                              "month",
                              "year"
                            ]
                          },
                          "intervalCount": {
                            "type": "number",
                            "example": 1,
                            "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                          }
                        },
                        "required": [
                          "currency",
                          "unitAmount"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "defaultPriceData"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product. Displayed on the checkout page"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the product. Displayed on the checkout page"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the product is currently active"
                    },
                    "images": {
                      "maxItems": 8,
                      "description": "The url of product images. Displayed on the checkout page",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publicImages": {
                      "description": "Product images with absolute public url",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unitLabel": {
                      "type": "string",
                      "description": "The label of the unit of the product. Displayed on the checkout page"
                    },
                    "url": {
                      "type": "string",
                      "description": "The url of the product"
                    },
                    "defaultPriceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's default price id"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The metadata of the product"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ],
                      "description": "The visibility of the product"
                    },
                    "defaultPrice": {
                      "description": "The default price of the product",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "billingScheme": {
                              "description": "The billing scheme to use for this price",
                              "type": "string",
                              "enum": [
                                "per_unit"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's id"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the price is currently active"
                            },
                            "usageType": {
                              "description": "The usage type of the price.",
                              "type": "string",
                              "enum": [
                                "licensed"
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                            },
                            "unitAmountDecimal": {
                              "type": "string"
                            },
                            "customUnitMax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customUnitMin": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customPreset": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                            },
                            "customUnitAmountSuggestions": {
                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product": {
                              "description": "The product this price belongs to",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "isActive": {
                                      "type": "boolean",
                                      "description": "Whether the product is currently active"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "publicImages": {
                                      "description": "Product images with absolute public url",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "defaultPriceId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "Product's default price id"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                            },
                            "visibility": {
                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "currency",
                            "productId",
                            "type",
                            "product"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ProductController_findAll",
        "summary": "List of products",
        "description": "Returns the list of products",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "required": false,
            "in": "query",
            "description": "To filter products by visibility",
            "schema": {
              "type": "string",
              "enum": [
                10,
                20
              ]
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "If true, only active products will be returned",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "url",
            "required": false,
            "in": "query",
            "description": "To filter products by url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceTypes",
            "required": false,
            "in": "query",
            "description": "To filter products by price type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceCurrency",
            "required": false,
            "in": "query",
            "description": "To filter products by price currency",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the product. Displayed on the checkout page"
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of the product. Displayed on the checkout page"
                              },
                              "isActive": {
                                "type": "boolean",
                                "description": "Whether the product is currently active"
                              },
                              "images": {
                                "maxItems": 8,
                                "description": "The url of product images. Displayed on the checkout page",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "publicImages": {
                                "description": "Product images with absolute public url",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "unitLabel": {
                                "type": "string",
                                "description": "The label of the unit of the product. Displayed on the checkout page"
                              },
                              "url": {
                                "type": "string",
                                "description": "The url of the product"
                              },
                              "defaultPriceId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                "description": "Product's default price id"
                              },
                              "metadata": {
                                "type": "object",
                                "description": "The metadata of the product"
                              },
                              "visibility": {
                                "type": "string",
                                "enum": [
                                  10,
                                  20
                                ],
                                "description": "The visibility of the product"
                              },
                              "defaultPrice": {
                                "description": "The default price of the product",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "billingScheme": {
                                        "description": "The billing scheme to use for this price",
                                        "type": "string",
                                        "enum": [
                                          "per_unit"
                                        ]
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi"
                                        ],
                                        "description": "The currency symbol"
                                      },
                                      "productId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                        "description": "Product's id"
                                      },
                                      "interval": {
                                        "description": "The interval at which to bill for this price. Only required for subscriptions",
                                        "type": "string",
                                        "enum": [
                                          "day",
                                          "week",
                                          "month",
                                          "year"
                                        ]
                                      },
                                      "intervalCount": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                      },
                                      "isActive": {
                                        "type": "boolean",
                                        "description": "Whether the price is currently active"
                                      },
                                      "usageType": {
                                        "description": "The usage type of the price.",
                                        "type": "string",
                                        "enum": [
                                          "licensed"
                                        ]
                                      },
                                      "type": {
                                        "description": "The type of the price",
                                        "type": "string",
                                        "enum": [
                                          "one_time",
                                          "recurring",
                                          "streaming"
                                        ]
                                      },
                                      "unitAmount": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                      },
                                      "unitAmountDecimal": {
                                        "type": "string"
                                      },
                                      "customUnitMax": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                      },
                                      "customUnitMin": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                      },
                                      "customPreset": {
                                        "format": "int64",
                                        "type": "integer",
                                        "example": "9223372036854775807",
                                        "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                      },
                                      "customUnitAmountSuggestions": {
                                        "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "product": {
                                        "description": "The product this price belongs to",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "createdAt": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "updatedAt": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the product. Displayed on the checkout page"
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "The description of the product. Displayed on the checkout page"
                                              },
                                              "isActive": {
                                                "type": "boolean",
                                                "description": "Whether the product is currently active"
                                              },
                                              "images": {
                                                "maxItems": 8,
                                                "description": "The url of product images. Displayed on the checkout page",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "publicImages": {
                                                "description": "Product images with absolute public url",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "unitLabel": {
                                                "type": "string",
                                                "description": "The label of the unit of the product. Displayed on the checkout page"
                                              },
                                              "url": {
                                                "type": "string",
                                                "description": "The url of the product"
                                              },
                                              "defaultPriceId": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                                "description": "Product's default price id"
                                              },
                                              "metadata": {
                                                "type": "object",
                                                "description": "The metadata of the product"
                                              },
                                              "visibility": {
                                                "description": "The visibility of the product",
                                                "type": "string",
                                                "enum": [
                                                  10,
                                                  20
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name"
                                            ]
                                          }
                                        ]
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                      },
                                      "visibility": {
                                        "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                        "type": "string",
                                        "enum": [
                                          10,
                                          20
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "currency",
                                      "productId",
                                      "type",
                                      "product"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "operationId": "ProductController_get",
        "summary": "Get a product",
        "description": "Returns a product",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product. Displayed on the checkout page"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the product. Displayed on the checkout page"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the product is currently active"
                    },
                    "images": {
                      "maxItems": 8,
                      "description": "The url of product images. Displayed on the checkout page",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publicImages": {
                      "description": "Product images with absolute public url",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unitLabel": {
                      "type": "string",
                      "description": "The label of the unit of the product. Displayed on the checkout page"
                    },
                    "url": {
                      "type": "string",
                      "description": "The url of the product"
                    },
                    "defaultPriceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's default price id"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The metadata of the product"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ],
                      "description": "The visibility of the product"
                    },
                    "defaultPrice": {
                      "description": "The default price of the product",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "billingScheme": {
                              "description": "The billing scheme to use for this price",
                              "type": "string",
                              "enum": [
                                "per_unit"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's id"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the price is currently active"
                            },
                            "usageType": {
                              "description": "The usage type of the price.",
                              "type": "string",
                              "enum": [
                                "licensed"
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                            },
                            "unitAmountDecimal": {
                              "type": "string"
                            },
                            "customUnitMax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customUnitMin": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customPreset": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                            },
                            "customUnitAmountSuggestions": {
                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product": {
                              "description": "The product this price belongs to",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "isActive": {
                                      "type": "boolean",
                                      "description": "Whether the product is currently active"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "publicImages": {
                                      "description": "Product images with absolute public url",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "defaultPriceId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "Product's default price id"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                            },
                            "visibility": {
                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "currency",
                            "productId",
                            "type",
                            "product"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ProductController_update",
        "summary": "Update a product",
        "description": "Updates a product information",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product. Displayed on the checkout page"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the product. Displayed on the checkout page"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the product is currently active"
                  },
                  "images": {
                    "maxItems": 8,
                    "description": "The url of product images. Displayed on the checkout page",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unitLabel": {
                    "type": "string",
                    "description": "The label of the unit of the product. Displayed on the checkout page"
                  },
                  "url": {
                    "type": "string",
                    "description": "The url of the product"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the product"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ],
                    "description": "The visibility of the product"
                  },
                  "defaultPriceId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "Product's default price id"
                  }
                },
                "required": [
                  "name",
                  "defaultPriceId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product. Displayed on the checkout page"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the product. Displayed on the checkout page"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the product is currently active"
                    },
                    "images": {
                      "maxItems": 8,
                      "description": "The url of product images. Displayed on the checkout page",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publicImages": {
                      "description": "Product images with absolute public url",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unitLabel": {
                      "type": "string",
                      "description": "The label of the unit of the product. Displayed on the checkout page"
                    },
                    "url": {
                      "type": "string",
                      "description": "The url of the product"
                    },
                    "defaultPriceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's default price id"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The metadata of the product"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ],
                      "description": "The visibility of the product"
                    },
                    "defaultPrice": {
                      "description": "The default price of the product",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "billingScheme": {
                              "description": "The billing scheme to use for this price",
                              "type": "string",
                              "enum": [
                                "per_unit"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's id"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the price is currently active"
                            },
                            "usageType": {
                              "description": "The usage type of the price.",
                              "type": "string",
                              "enum": [
                                "licensed"
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                            },
                            "unitAmountDecimal": {
                              "type": "string"
                            },
                            "customUnitMax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customUnitMin": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customPreset": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                            },
                            "customUnitAmountSuggestions": {
                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product": {
                              "description": "The product this price belongs to",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "isActive": {
                                      "type": "boolean",
                                      "description": "Whether the product is currently active"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "publicImages": {
                                      "description": "Product images with absolute public url",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "defaultPriceId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "Product's default price id"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                            },
                            "visibility": {
                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "currency",
                            "productId",
                            "type",
                            "product"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ProductController_delete",
        "summary": "Delete a product",
        "description": "Deletes a product",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/products/{id}/activate": {
      "put": {
        "operationId": "ProductController_activate",
        "summary": "Activate a product",
        "description": "Activate a product",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product. Displayed on the checkout page"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the product. Displayed on the checkout page"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the product is currently active"
                    },
                    "images": {
                      "maxItems": 8,
                      "description": "The url of product images. Displayed on the checkout page",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publicImages": {
                      "description": "Product images with absolute public url",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unitLabel": {
                      "type": "string",
                      "description": "The label of the unit of the product. Displayed on the checkout page"
                    },
                    "url": {
                      "type": "string",
                      "description": "The url of the product"
                    },
                    "defaultPriceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's default price id"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The metadata of the product"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ],
                      "description": "The visibility of the product"
                    },
                    "defaultPrice": {
                      "description": "The default price of the product",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "billingScheme": {
                              "description": "The billing scheme to use for this price",
                              "type": "string",
                              "enum": [
                                "per_unit"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's id"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the price is currently active"
                            },
                            "usageType": {
                              "description": "The usage type of the price.",
                              "type": "string",
                              "enum": [
                                "licensed"
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                            },
                            "unitAmountDecimal": {
                              "type": "string"
                            },
                            "customUnitMax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customUnitMin": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customPreset": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                            },
                            "customUnitAmountSuggestions": {
                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product": {
                              "description": "The product this price belongs to",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "isActive": {
                                      "type": "boolean",
                                      "description": "Whether the product is currently active"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "publicImages": {
                                      "description": "Product images with absolute public url",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "defaultPriceId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "Product's default price id"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                            },
                            "visibility": {
                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "currency",
                            "productId",
                            "type",
                            "product"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/products/{id}/deactivate": {
      "put": {
        "operationId": "ProductController_deactivate",
        "summary": "Deactivate a product",
        "description": "Deactivate a product",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product. Displayed on the checkout page"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the product. Displayed on the checkout page"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the product is currently active"
                    },
                    "images": {
                      "maxItems": 8,
                      "description": "The url of product images. Displayed on the checkout page",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publicImages": {
                      "description": "Product images with absolute public url",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "unitLabel": {
                      "type": "string",
                      "description": "The label of the unit of the product. Displayed on the checkout page"
                    },
                    "url": {
                      "type": "string",
                      "description": "The url of the product"
                    },
                    "defaultPriceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's default price id"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The metadata of the product"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ],
                      "description": "The visibility of the product"
                    },
                    "defaultPrice": {
                      "description": "The default price of the product",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "billingScheme": {
                              "description": "The billing scheme to use for this price",
                              "type": "string",
                              "enum": [
                                "per_unit"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's id"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the price is currently active"
                            },
                            "usageType": {
                              "description": "The usage type of the price.",
                              "type": "string",
                              "enum": [
                                "licensed"
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                            },
                            "unitAmountDecimal": {
                              "type": "string"
                            },
                            "customUnitMax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customUnitMin": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customPreset": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                            },
                            "customUnitAmountSuggestions": {
                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product": {
                              "description": "The product this price belongs to",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "isActive": {
                                      "type": "boolean",
                                      "description": "Whether the product is currently active"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "publicImages": {
                                      "description": "Product images with absolute public url",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "defaultPriceId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "Product's default price id"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                            },
                            "visibility": {
                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "currency",
                            "productId",
                            "type",
                            "product"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/subscriptions": {
      "get": {
        "operationId": "SubscriptionController_findAll",
        "summary": "List of subscriptions",
        "description": "Returns the list of subscriptions",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientReferenceId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "endedAt",
            "required": false,
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "priceId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "organizationId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "clientReferenceId": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ]
                              },
                              "collectionMethod": {
                                "type": "string",
                                "enum": [
                                  "superfluid",
                                  "charge_automatically",
                                  "send_invoice"
                                ]
                              },
                              "interval": {
                                "type": "string",
                                "enum": [
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ]
                              },
                              "intervalCount": {
                                "type": "number",
                                "example": 1
                              },
                              "paymentMethodTypes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "superfluid",
                                    "wallet",
                                    "allowance_based_recurring",
                                    "stripe",
                                    "binance_pay"
                                  ]
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "incomplete",
                                  "incomplete_expired",
                                  "trialing",
                                  "active",
                                  "past_due",
                                  "canceled",
                                  "unpaid",
                                  "paused"
                                ]
                              },
                              "description": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object"
                              },
                              "defaultPaymentMethodId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "defaultPaymentMethod": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "assetId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  },
                                  "asset": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Asset id"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Asset name"
                                      },
                                      "chainId": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "Asset chain id"
                                      },
                                      "address": {
                                        "type": "string",
                                        "description": "Asset address on chain"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi",
                                          "usd",
                                          "inr"
                                        ],
                                        "description": "Asset currency symbol"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "Asset symbol"
                                      },
                                      "decimals": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "Asset decimals in which it is represented on chain"
                                      },
                                      "coingeckoId": {
                                        "type": "string",
                                        "description": "Asset coingecko id"
                                      },
                                      "superToken": {
                                        "description": "SuperToken data",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "address": {
                                                "type": "string",
                                                "description": "SuperToken's address"
                                              },
                                              "decimals": {
                                                "type": "number",
                                                "example": 1
                                              },
                                              "symbol": {
                                                "type": "string",
                                                "description": "SuperToken's symbol"
                                              }
                                            },
                                            "required": [
                                              "address",
                                              "decimals",
                                              "symbol"
                                            ]
                                          }
                                        ]
                                      },
                                      "isEIP5827Supported": {
                                        "type": "boolean",
                                        "description": "Is EIP5827 supported"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "chainId",
                                      "address",
                                      "currency",
                                      "symbol",
                                      "decimals",
                                      "isEIP5827Supported"
                                    ]
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "superfluid",
                                      "wallet",
                                      "allowance_based_recurring",
                                      "stripe",
                                      "binance_pay"
                                    ]
                                  },
                                  "accountAddress": {
                                    "type": "string"
                                  },
                                  "billingDetails": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email"
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "The phone"
                                      },
                                      "organizationName": {
                                        "type": "string",
                                        "description": "The organization name"
                                      },
                                      "address": {
                                        "description": "The address",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "line1": {
                                                "type": "string"
                                              },
                                              "line2": {
                                                "type": "string"
                                              },
                                              "city": {
                                                "type": "string"
                                              },
                                              "state": {
                                                "type": "string"
                                              },
                                              "postalCode": {
                                                "type": "string"
                                              },
                                              "country": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  },
                                  "options": {
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "id",
                                  "assetId",
                                  "asset",
                                  "type"
                                ]
                              },
                              "customerId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "customer": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name"
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "The email"
                                  },
                                  "phone": {
                                    "type": "string",
                                    "description": "The phone"
                                  },
                                  "organizationName": {
                                    "type": "string",
                                    "description": "The organization name"
                                  },
                                  "address": {
                                    "description": "The address",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "line1": {
                                            "type": "string"
                                          },
                                          "line2": {
                                            "type": "string"
                                          },
                                          "city": {
                                            "type": "string"
                                          },
                                          "state": {
                                            "type": "string"
                                          },
                                          "postalCode": {
                                            "type": "string"
                                          },
                                          "country": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Customer's id"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Customer's created at"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Customer's updated at"
                                  },
                                  "customerReferenceId": {
                                    "type": "string",
                                    "description": "Customer's reference id"
                                  },
                                  "shipping": {
                                    "description": "Customer's shipping address",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "The email"
                                          },
                                          "phone": {
                                            "type": "string",
                                            "description": "The phone"
                                          },
                                          "organizationName": {
                                            "type": "string",
                                            "description": "The organization name"
                                          },
                                          "address": {
                                            "description": "The address",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "line1": {
                                                    "type": "string"
                                                  },
                                                  "line2": {
                                                    "type": "string"
                                                  },
                                                  "city": {
                                                    "type": "string"
                                                  },
                                                  "state": {
                                                    "type": "string"
                                                  },
                                                  "postalCode": {
                                                    "type": "string"
                                                  },
                                                  "country": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "taxIds": {
                                    "type": "object",
                                    "properties": {
                                      "object": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "country": {
                                              "type": "string"
                                            },
                                            "customerId": {
                                              "type": "string",
                                              "format": "uuid",
                                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "customerId"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "visibility": {
                                    "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Customer's metadata"
                                  },
                                  "customerNumber": {
                                    "type": "string",
                                    "description": "Customer number assigned by the system"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerNumber"
                                ]
                              },
                              "startDate": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "endedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "cancelAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "canceledAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "lineItems": {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "quantity": {
                                          "type": "number",
                                          "example": 1
                                        },
                                        "price": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "billingScheme": {
                                              "description": "The billing scheme to use for this price",
                                              "type": "string",
                                              "enum": [
                                                "per_unit"
                                              ]
                                            },
                                            "currency": {
                                              "type": "string",
                                              "enum": [
                                                "usdc",
                                                "usdt",
                                                "dai",
                                                "btc",
                                                "eth",
                                                "matic",
                                                "bnb",
                                                "sol",
                                                "busd",
                                                "food",
                                                "tfi"
                                              ],
                                              "description": "The currency symbol"
                                            },
                                            "productId": {
                                              "type": "string",
                                              "format": "uuid",
                                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                              "description": "Product's id"
                                            },
                                            "interval": {
                                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                                              "type": "string",
                                              "enum": [
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                              ]
                                            },
                                            "intervalCount": {
                                              "type": "number",
                                              "example": 1,
                                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                            },
                                            "isActive": {
                                              "type": "boolean",
                                              "description": "Whether the price is currently active"
                                            },
                                            "usageType": {
                                              "description": "The usage type of the price.",
                                              "type": "string",
                                              "enum": [
                                                "licensed"
                                              ]
                                            },
                                            "type": {
                                              "description": "The type of the price",
                                              "type": "string",
                                              "enum": [
                                                "one_time",
                                                "recurring",
                                                "streaming"
                                              ]
                                            },
                                            "unitAmount": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                            },
                                            "unitAmountDecimal": {
                                              "type": "string"
                                            },
                                            "customUnitMax": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                            },
                                            "customUnitMin": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                            },
                                            "customPreset": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                            },
                                            "customUnitAmountSuggestions": {
                                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product": {
                                              "description": "The product this price belongs to",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "createdAt": {
                                                      "format": "date-time",
                                                      "type": "string"
                                                    },
                                                    "updatedAt": {
                                                      "format": "date-time",
                                                      "type": "string"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of the product. Displayed on the checkout page"
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "description": "The description of the product. Displayed on the checkout page"
                                                    },
                                                    "isActive": {
                                                      "type": "boolean",
                                                      "description": "Whether the product is currently active"
                                                    },
                                                    "images": {
                                                      "maxItems": 8,
                                                      "description": "The url of product images. Displayed on the checkout page",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "publicImages": {
                                                      "description": "Product images with absolute public url",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "unitLabel": {
                                                      "type": "string",
                                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "description": "The url of the product"
                                                    },
                                                    "defaultPriceId": {
                                                      "type": "string",
                                                      "format": "uuid",
                                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                                      "description": "Product's default price id"
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "description": "The metadata of the product"
                                                    },
                                                    "visibility": {
                                                      "description": "The visibility of the product",
                                                      "type": "string",
                                                      "enum": [
                                                        10,
                                                        20
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "name"
                                                  ]
                                                }
                                              ]
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                            },
                                            "visibility": {
                                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                              "type": "string",
                                              "enum": [
                                                10,
                                                20
                                              ]
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "currency",
                                            "productId",
                                            "type",
                                            "product"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "price"
                                      ]
                                    }
                                  }
                                }
                              },
                              "cancellationReason": {
                                "type": "string"
                              },
                              "currentPeriodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "currentPeriodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "cancelAtPeriodEnd": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "currency",
                              "interval",
                              "status",
                              "lineItems"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/subscriptions/{id}": {
      "get": {
        "operationId": "SubscriptionController_get",
        "summary": "Get a subscription",
        "description": "Returns a subscription",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "interval": {
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "incomplete",
                        "incomplete_expired",
                        "trialing",
                        "active",
                        "past_due",
                        "canceled",
                        "unpaid",
                        "paused"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "defaultPaymentMethodId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "defaultPaymentMethod": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "asset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Asset id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Asset name"
                            },
                            "chainId": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset chain id"
                            },
                            "address": {
                              "type": "string",
                              "description": "Asset address on chain"
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ],
                              "description": "Asset currency symbol"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Asset symbol"
                            },
                            "decimals": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset decimals in which it is represented on chain"
                            },
                            "coingeckoId": {
                              "type": "string",
                              "description": "Asset coingecko id"
                            },
                            "superToken": {
                              "description": "SuperToken data",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "SuperToken's address"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "SuperToken's symbol"
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "decimals",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "isEIP5827Supported": {
                              "type": "boolean",
                              "description": "Is EIP5827 supported"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "chainId",
                            "address",
                            "currency",
                            "symbol",
                            "decimals",
                            "isEIP5827Supported"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "superfluid",
                            "wallet",
                            "allowance_based_recurring",
                            "stripe",
                            "binance_pay"
                          ]
                        },
                        "accountAddress": {
                          "type": "string"
                        },
                        "billingDetails": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "customerId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "options": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "assetId",
                        "asset",
                        "type"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "startDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "endedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "canceledAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "cancellationReason": {
                      "type": "string"
                    },
                    "currentPeriodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentPeriodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAtPeriodEnd": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "interval",
                    "status",
                    "lineItems"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "SubscriptionController_end",
        "summary": "Cancel a subscription immediately",
        "description": "Cancel a subscription. It ends the subscription immediately and no refund is made.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellationComment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "interval": {
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "incomplete",
                        "incomplete_expired",
                        "trialing",
                        "active",
                        "past_due",
                        "canceled",
                        "unpaid",
                        "paused"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "defaultPaymentMethodId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "defaultPaymentMethod": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "asset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Asset id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Asset name"
                            },
                            "chainId": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset chain id"
                            },
                            "address": {
                              "type": "string",
                              "description": "Asset address on chain"
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ],
                              "description": "Asset currency symbol"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Asset symbol"
                            },
                            "decimals": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset decimals in which it is represented on chain"
                            },
                            "coingeckoId": {
                              "type": "string",
                              "description": "Asset coingecko id"
                            },
                            "superToken": {
                              "description": "SuperToken data",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "SuperToken's address"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "SuperToken's symbol"
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "decimals",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "isEIP5827Supported": {
                              "type": "boolean",
                              "description": "Is EIP5827 supported"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "chainId",
                            "address",
                            "currency",
                            "symbol",
                            "decimals",
                            "isEIP5827Supported"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "superfluid",
                            "wallet",
                            "allowance_based_recurring",
                            "stripe",
                            "binance_pay"
                          ]
                        },
                        "accountAddress": {
                          "type": "string"
                        },
                        "billingDetails": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "customerId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "options": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "assetId",
                        "asset",
                        "type"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "startDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "endedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "canceledAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "cancellationReason": {
                      "type": "string"
                    },
                    "currentPeriodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentPeriodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAtPeriodEnd": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "interval",
                    "status",
                    "lineItems"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/subscriptions/{id}/cancel": {
      "post": {
        "operationId": "SubscriptionController_cancel",
        "summary": "Cancel a subscription",
        "description": "Cancel a subscription. It does not end the subscription, but it will be canceled at the end of the period.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellationComment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "interval": {
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "incomplete",
                        "incomplete_expired",
                        "trialing",
                        "active",
                        "past_due",
                        "canceled",
                        "unpaid",
                        "paused"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "defaultPaymentMethodId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "defaultPaymentMethod": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "asset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Asset id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Asset name"
                            },
                            "chainId": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset chain id"
                            },
                            "address": {
                              "type": "string",
                              "description": "Asset address on chain"
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ],
                              "description": "Asset currency symbol"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Asset symbol"
                            },
                            "decimals": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset decimals in which it is represented on chain"
                            },
                            "coingeckoId": {
                              "type": "string",
                              "description": "Asset coingecko id"
                            },
                            "superToken": {
                              "description": "SuperToken data",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "SuperToken's address"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "SuperToken's symbol"
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "decimals",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "isEIP5827Supported": {
                              "type": "boolean",
                              "description": "Is EIP5827 supported"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "chainId",
                            "address",
                            "currency",
                            "symbol",
                            "decimals",
                            "isEIP5827Supported"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "superfluid",
                            "wallet",
                            "allowance_based_recurring",
                            "stripe",
                            "binance_pay"
                          ]
                        },
                        "accountAddress": {
                          "type": "string"
                        },
                        "billingDetails": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "customerId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "options": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "assetId",
                        "asset",
                        "type"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "startDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "endedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "canceledAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "cancellationReason": {
                      "type": "string"
                    },
                    "currentPeriodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentPeriodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAtPeriodEnd": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "interval",
                    "status",
                    "lineItems"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/subscriptions/{id}/resume": {
      "post": {
        "operationId": "SubscriptionController_resume",
        "summary": "Resume a subscription",
        "description": "Resume a subscription. It resumes the subscription that is scheduled be cancel at the end of the period.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "interval": {
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "incomplete",
                        "incomplete_expired",
                        "trialing",
                        "active",
                        "past_due",
                        "canceled",
                        "unpaid",
                        "paused"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "defaultPaymentMethodId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "defaultPaymentMethod": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "asset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Asset id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Asset name"
                            },
                            "chainId": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset chain id"
                            },
                            "address": {
                              "type": "string",
                              "description": "Asset address on chain"
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ],
                              "description": "Asset currency symbol"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Asset symbol"
                            },
                            "decimals": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset decimals in which it is represented on chain"
                            },
                            "coingeckoId": {
                              "type": "string",
                              "description": "Asset coingecko id"
                            },
                            "superToken": {
                              "description": "SuperToken data",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "SuperToken's address"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "SuperToken's symbol"
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "decimals",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "isEIP5827Supported": {
                              "type": "boolean",
                              "description": "Is EIP5827 supported"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "chainId",
                            "address",
                            "currency",
                            "symbol",
                            "decimals",
                            "isEIP5827Supported"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "superfluid",
                            "wallet",
                            "allowance_based_recurring",
                            "stripe",
                            "binance_pay"
                          ]
                        },
                        "accountAddress": {
                          "type": "string"
                        },
                        "billingDetails": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "customerId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "options": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "assetId",
                        "asset",
                        "type"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "startDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "endedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "canceledAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "cancellationReason": {
                      "type": "string"
                    },
                    "currentPeriodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentPeriodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancelAtPeriodEnd": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "interval",
                    "status",
                    "lineItems"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices": {
      "post": {
        "operationId": "InvoiceController_create",
        "summary": "Create an invoice",
        "description": "Creates as invoice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "customFields": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ]
                        }
                      }
                    }
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "footer": {
                    "type": "string"
                  },
                  "fromInvoiceId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                  },
                  "metadata": {
                    "type": "object"
                  },
                  "clientReferenceId": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  },
                  "allowPromotionCodes": {
                    "type": "boolean",
                    "description": "Enables user redeemable promotion codes."
                  },
                  "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                  },
                  "lineItems": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "minItems": 1,
                        "description": "The line items to be used in checkout session",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "priceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "The id of the price to use in checkout session"
                            },
                            "priceData": {
                              "description": "The price data to be created to use in checkout session",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "currency": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi"
                                      ],
                                      "description": "The currency symbol"
                                    },
                                    "interval": {
                                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                                      "type": "string",
                                      "enum": [
                                        "day",
                                        "week",
                                        "month",
                                        "year"
                                      ]
                                    },
                                    "intervalCount": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                    },
                                    "unitAmount": {
                                      "format": "int64",
                                      "type": "integer",
                                      "example": "9223372036854775807",
                                      "description": "The unit amount in 8 decimals, represented as a whole integer"
                                    },
                                    "productId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "The id of the product for which this price is associated"
                                    },
                                    "productData": {
                                      "description": "The product data to be created to link with this price",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the product. Displayed on the checkout page"
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "The description of the product. Displayed on the checkout page"
                                            },
                                            "images": {
                                              "maxItems": 8,
                                              "description": "The url of product images. Displayed on the checkout page",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "unitLabel": {
                                              "type": "string",
                                              "description": "The label of the unit of the product. Displayed on the checkout page"
                                            },
                                            "url": {
                                              "type": "string",
                                              "description": "The url of the product"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "description": "The metadata of the product"
                                            },
                                            "visibility": {
                                              "description": "The visibility of the product",
                                              "type": "string",
                                              "enum": [
                                                10,
                                                20
                                              ]
                                            }
                                          },
                                          "required": [
                                            "name"
                                          ]
                                        }
                                      ]
                                    },
                                    "type": {
                                      "description": "The type of the price",
                                      "type": "string",
                                      "enum": [
                                        "one_time",
                                        "recurring",
                                        "streaming"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "currency",
                                    "unitAmount"
                                  ]
                                }
                              ]
                            },
                            "quantity": {
                              "type": "number",
                              "example": 1,
                              "default": 1,
                              "description": "The quantity of the line item"
                            },
                            "periodStart": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "periodEnd": {
                              "format": "date-time",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "paymentSetting": {
                    "type": "object",
                    "properties": {
                      "allowedChains": {
                        "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                        "example": [
                          {
                            "chainId": 137
                          }
                        ],
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "chainId": {
                              "type": "number",
                              "example": 1
                            },
                            "blacklistCurrencies": {
                              "type": "array",
                              "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                              "example": [
                                "usdc"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ]
                              }
                            }
                          },
                          "required": [
                            "chainId"
                          ]
                        }
                      },
                      "preferredChainId": {
                        "type": "number",
                        "example": 1,
                        "description": "The preferred chain's id"
                      },
                      "preferredCurrency": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ],
                        "description": "The preferred currency for payment"
                      },
                      "allowSwap": {
                        "type": "boolean",
                        "description": "Whether the user can swap the payment currency",
                        "default": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "InvoiceController_getAll",
        "summary": "List of all invoices",
        "description": "Returns the list of all invoices",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueDate",
            "required": false,
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "organizationId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "description": {
                                "type": "string"
                              },
                              "total": {
                                "format": "int64",
                                "type": "integer",
                                "example": "9223372036854775807"
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ]
                              },
                              "customerId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "customer": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name"
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "The email"
                                  },
                                  "phone": {
                                    "type": "string",
                                    "description": "The phone"
                                  },
                                  "organizationName": {
                                    "type": "string",
                                    "description": "The organization name"
                                  },
                                  "address": {
                                    "description": "The address",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "line1": {
                                            "type": "string"
                                          },
                                          "line2": {
                                            "type": "string"
                                          },
                                          "city": {
                                            "type": "string"
                                          },
                                          "state": {
                                            "type": "string"
                                          },
                                          "postalCode": {
                                            "type": "string"
                                          },
                                          "country": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Customer's id"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Customer's created at"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Customer's updated at"
                                  },
                                  "customerReferenceId": {
                                    "type": "string",
                                    "description": "Customer's reference id"
                                  },
                                  "shipping": {
                                    "description": "Customer's shipping address",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name"
                                          },
                                          "email": {
                                            "type": "string",
                                            "description": "The email"
                                          },
                                          "phone": {
                                            "type": "string",
                                            "description": "The phone"
                                          },
                                          "organizationName": {
                                            "type": "string",
                                            "description": "The organization name"
                                          },
                                          "address": {
                                            "description": "The address",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "line1": {
                                                    "type": "string"
                                                  },
                                                  "line2": {
                                                    "type": "string"
                                                  },
                                                  "city": {
                                                    "type": "string"
                                                  },
                                                  "state": {
                                                    "type": "string"
                                                  },
                                                  "postalCode": {
                                                    "type": "string"
                                                  },
                                                  "country": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "taxIds": {
                                    "type": "object",
                                    "properties": {
                                      "object": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "country": {
                                              "type": "string"
                                            },
                                            "customerId": {
                                              "type": "string",
                                              "format": "uuid",
                                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "customerId"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "visibility": {
                                    "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Customer's metadata"
                                  },
                                  "customerNumber": {
                                    "type": "string",
                                    "description": "Customer number assigned by the system"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerNumber"
                                ]
                              },
                              "autoAdvance": {
                                "type": "boolean"
                              },
                              "collectionMethod": {
                                "type": "string",
                                "enum": [
                                  "charge_automatically",
                                  "send_invoice"
                                ]
                              },
                              "customFields": {
                                "type": "object",
                                "properties": {
                                  "fields": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "value"
                                      ]
                                    }
                                  }
                                }
                              },
                              "paymentSettingId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "paymentSetting": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "paymentMethodTypes": {
                                    "type": "array",
                                    "description": "A list of the types of payment methods",
                                    "example": "wallet",
                                    "minItems": 1,
                                    "maxItems": 1,
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "superfluid",
                                        "wallet",
                                        "allowance_based_recurring",
                                        "stripe",
                                        "binance_pay"
                                      ]
                                    }
                                  },
                                  "allowedChains": {
                                    "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                                    "example": [
                                      {
                                        "chainId": 137
                                      }
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "chainId": {
                                          "type": "number",
                                          "example": 1
                                        },
                                        "blacklistCurrencies": {
                                          "type": "array",
                                          "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                          "example": [
                                            "usdc"
                                          ],
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "usdc",
                                              "usdt",
                                              "dai",
                                              "btc",
                                              "eth",
                                              "matic",
                                              "bnb",
                                              "sol",
                                              "busd",
                                              "food",
                                              "tfi"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "chainId"
                                      ]
                                    }
                                  },
                                  "allowedCurrencies": {
                                    "type": "array",
                                    "description": "The list of currencies allowed for the payment.",
                                    "example": [
                                      "usdc",
                                      "usdt"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi"
                                      ]
                                    }
                                  },
                                  "preferredChainId": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "The preferred chain's id"
                                  },
                                  "preferredCurrency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The preferred currency for payment"
                                  },
                                  "allowSwap": {
                                    "type": "boolean",
                                    "description": "Whether the user can swap the payment currency",
                                    "default": false
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "draft",
                                  "open",
                                  "paid",
                                  "void",
                                  "uncollectible"
                                ]
                              },
                              "attempted": {
                                "type": "boolean"
                              },
                              "attemptCount": {
                                "type": "number",
                                "example": 1
                              },
                              "nextPaymentAttempt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "dueDate": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "footer": {
                                "type": "string"
                              },
                              "fromInvoiceId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "latestRevisionId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "invoicePdfUrl": {
                                "type": "string"
                              },
                              "invoiceNumber": {
                                "type": "string"
                              },
                              "paid": {
                                "type": "boolean"
                              },
                              "paidOutOfBand": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "object"
                              },
                              "clientReferenceId": {
                                "type": "string"
                              },
                              "lineItems": {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "periodStart": {
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "periodEnd": {
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "quantity": {
                                          "type": "number",
                                          "example": 1
                                        },
                                        "price": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "billingScheme": {
                                              "description": "The billing scheme to use for this price",
                                              "type": "string",
                                              "enum": [
                                                "per_unit"
                                              ]
                                            },
                                            "currency": {
                                              "type": "string",
                                              "enum": [
                                                "usdc",
                                                "usdt",
                                                "dai",
                                                "btc",
                                                "eth",
                                                "matic",
                                                "bnb",
                                                "sol",
                                                "busd",
                                                "food",
                                                "tfi"
                                              ],
                                              "description": "The currency symbol"
                                            },
                                            "productId": {
                                              "type": "string",
                                              "format": "uuid",
                                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                              "description": "Product's id"
                                            },
                                            "interval": {
                                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                                              "type": "string",
                                              "enum": [
                                                "day",
                                                "week",
                                                "month",
                                                "year"
                                              ]
                                            },
                                            "intervalCount": {
                                              "type": "number",
                                              "example": 1,
                                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                            },
                                            "isActive": {
                                              "type": "boolean",
                                              "description": "Whether the price is currently active"
                                            },
                                            "usageType": {
                                              "description": "The usage type of the price.",
                                              "type": "string",
                                              "enum": [
                                                "licensed"
                                              ]
                                            },
                                            "type": {
                                              "description": "The type of the price",
                                              "type": "string",
                                              "enum": [
                                                "one_time",
                                                "recurring",
                                                "streaming"
                                              ]
                                            },
                                            "unitAmount": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                            },
                                            "unitAmountDecimal": {
                                              "type": "string"
                                            },
                                            "customUnitMax": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                            },
                                            "customUnitMin": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                            },
                                            "customPreset": {
                                              "format": "int64",
                                              "type": "integer",
                                              "example": "9223372036854775807",
                                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                            },
                                            "customUnitAmountSuggestions": {
                                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product": {
                                              "description": "The product this price belongs to",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "createdAt": {
                                                      "format": "date-time",
                                                      "type": "string"
                                                    },
                                                    "updatedAt": {
                                                      "format": "date-time",
                                                      "type": "string"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of the product. Displayed on the checkout page"
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "description": "The description of the product. Displayed on the checkout page"
                                                    },
                                                    "isActive": {
                                                      "type": "boolean",
                                                      "description": "Whether the product is currently active"
                                                    },
                                                    "images": {
                                                      "maxItems": 8,
                                                      "description": "The url of product images. Displayed on the checkout page",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "publicImages": {
                                                      "description": "Product images with absolute public url",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "unitLabel": {
                                                      "type": "string",
                                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "description": "The url of the product"
                                                    },
                                                    "defaultPriceId": {
                                                      "type": "string",
                                                      "format": "uuid",
                                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                                      "description": "Product's default price id"
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "description": "The metadata of the product"
                                                    },
                                                    "visibility": {
                                                      "description": "The visibility of the product",
                                                      "type": "string",
                                                      "enum": [
                                                        10,
                                                        20
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "name"
                                                  ]
                                                }
                                              ]
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                            },
                                            "visibility": {
                                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                              "type": "string",
                                              "enum": [
                                                10,
                                                20
                                              ]
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "currency",
                                            "productId",
                                            "type",
                                            "product"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "price"
                                      ]
                                    }
                                  }
                                }
                              },
                              "finalizedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "paidAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "markedUncollectibleAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "visibility": {
                                "type": "string",
                                "enum": [
                                  10,
                                  20
                                ]
                              },
                              "paymentIntentId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL to redirect the customer to pay invoice"
                              },
                              "subscriptionId": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "billingReason": {
                                "type": "string",
                                "enum": [
                                  "subscription_cycle",
                                  "subscription_create",
                                  "subscription_update",
                                  "subscription",
                                  "manual",
                                  "upcoming",
                                  "subscription_threshold"
                                ]
                              },
                              "allowPromotionCodes": {
                                "type": "boolean",
                                "description": "Enables user redeemable promotion codes."
                              },
                              "finalizeScheduleAt": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date on which invoice will be finalize and send"
                              }
                            },
                            "required": [
                              "id",
                              "organizationId",
                              "customerId",
                              "customer",
                              "autoAdvance",
                              "collectionMethod",
                              "paymentSettingId",
                              "paymentSetting",
                              "status",
                              "attempted",
                              "paid",
                              "lineItems",
                              "url",
                              "billingReason"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "operationId": "InvoiceController_get",
        "summary": "Get an invoice",
        "description": "Returns an invoice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "InvoiceController_update",
        "summary": "Update a draft invoice",
        "description": "Creates a draft invoice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "customFields": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ]
                        }
                      }
                    }
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "footer": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object"
                  },
                  "clientReferenceId": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  },
                  "allowPromotionCodes": {
                    "type": "boolean",
                    "description": "Enables user redeemable promotion codes."
                  },
                  "lineItems": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "minItems": 1,
                        "description": "The line items to be used in checkout session",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "priceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "The id of the price to use in checkout session"
                            },
                            "priceData": {
                              "description": "The price data to be created to use in checkout session",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "currency": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi"
                                      ],
                                      "description": "The currency symbol"
                                    },
                                    "interval": {
                                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                                      "type": "string",
                                      "enum": [
                                        "day",
                                        "week",
                                        "month",
                                        "year"
                                      ]
                                    },
                                    "intervalCount": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                    },
                                    "unitAmount": {
                                      "format": "int64",
                                      "type": "integer",
                                      "example": "9223372036854775807",
                                      "description": "The unit amount in 8 decimals, represented as a whole integer"
                                    },
                                    "productId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "The id of the product for which this price is associated"
                                    },
                                    "productData": {
                                      "description": "The product data to be created to link with this price",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the product. Displayed on the checkout page"
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "The description of the product. Displayed on the checkout page"
                                            },
                                            "images": {
                                              "maxItems": 8,
                                              "description": "The url of product images. Displayed on the checkout page",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "unitLabel": {
                                              "type": "string",
                                              "description": "The label of the unit of the product. Displayed on the checkout page"
                                            },
                                            "url": {
                                              "type": "string",
                                              "description": "The url of the product"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "description": "The metadata of the product"
                                            },
                                            "visibility": {
                                              "description": "The visibility of the product",
                                              "type": "string",
                                              "enum": [
                                                10,
                                                20
                                              ]
                                            }
                                          },
                                          "required": [
                                            "name"
                                          ]
                                        }
                                      ]
                                    },
                                    "type": {
                                      "description": "The type of the price",
                                      "type": "string",
                                      "enum": [
                                        "one_time",
                                        "recurring",
                                        "streaming"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "currency",
                                    "unitAmount"
                                  ]
                                }
                              ]
                            },
                            "quantity": {
                              "type": "number",
                              "example": 1,
                              "default": 1,
                              "description": "The quantity of the line item"
                            },
                            "periodStart": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "periodEnd": {
                              "format": "date-time",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "paymentSetting": {
                    "type": "object",
                    "properties": {
                      "allowedChains": {
                        "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                        "example": [
                          {
                            "chainId": 137
                          }
                        ],
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "chainId": {
                              "type": "number",
                              "example": 1
                            },
                            "blacklistCurrencies": {
                              "type": "array",
                              "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                              "example": [
                                "usdc"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ]
                              }
                            }
                          },
                          "required": [
                            "chainId"
                          ]
                        }
                      },
                      "preferredChainId": {
                        "type": "number",
                        "example": 1,
                        "description": "The preferred chain's id"
                      },
                      "preferredCurrency": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ],
                        "description": "The preferred currency for payment"
                      },
                      "allowSwap": {
                        "type": "boolean",
                        "description": "Whether the user can swap the payment currency",
                        "default": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "InvoiceController_delete",
        "summary": "Delete a draft invoice",
        "description": "Deletes a draft invoice. If invoice is not in draft state, it should be voided and can not be deleted.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/duplicate": {
      "post": {
        "operationId": "InvoiceController_duplicateInvoice",
        "summary": "Duplicate an invoice",
        "description": "Duplicate an invoice using the incoming invoice id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/void": {
      "post": {
        "operationId": "InvoiceController_voidInvoice",
        "summary": "Void an invoice",
        "description": "Void an invoice. If an invoice is paid then it can not be voided.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/mark-uncollectible": {
      "post": {
        "operationId": "InvoiceController_markUncollectibleInvoice",
        "summary": "Mark an invoice as uncollectible",
        "description": "Mark an invoice as uncollectible. If an invoice is paid then it can not be marked as uncollectible.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/finalize": {
      "post": {
        "operationId": "InvoiceController_finalizeInvoice",
        "summary": "Finalize an invoice",
        "description": "Finalize an invoice.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/send": {
      "post": {
        "operationId": "InvoiceController_finalizeAndSendInvoice",
        "summary": "Send email to customer. Finalize an invoice if not finalized.",
        "description": "Send email to customer. Finalize an invoice if not finalized.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cc": {
                    "description": "The list of email addresses to send the invoice to along the customer email address",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "finalizeScheduleAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "The date on which the invoice should be finalized and sent"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/pay": {
      "post": {
        "operationId": "InvoiceController_payInvoice",
        "summary": "Mark an open invoice as paid.",
        "description": "Mark an open invoice as paid.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "total": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone"
                        },
                        "organizationName": {
                          "type": "string",
                          "description": "The organization name"
                        },
                        "address": {
                          "description": "The address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "line1": {
                                  "type": "string"
                                },
                                "line2": {
                                  "type": "string"
                                },
                                "city": {
                                  "type": "string"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Customer's id"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's created at"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Customer's updated at"
                        },
                        "customerReferenceId": {
                          "type": "string",
                          "description": "Customer's reference id"
                        },
                        "shipping": {
                          "description": "Customer's shipping address",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "The email"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "The phone"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "description": "The organization name"
                                },
                                "address": {
                                  "description": "The address",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "line1": {
                                          "type": "string"
                                        },
                                        "line2": {
                                          "type": "string"
                                        },
                                        "city": {
                                          "type": "string"
                                        },
                                        "state": {
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "taxIds": {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                  }
                                },
                                "required": [
                                  "id",
                                  "customerId"
                                ]
                              }
                            }
                          }
                        },
                        "visibility": {
                          "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Customer's metadata"
                        },
                        "customerNumber": {
                          "type": "string",
                          "description": "Customer number assigned by the system"
                        }
                      },
                      "required": [
                        "id",
                        "customerNumber"
                      ]
                    },
                    "autoAdvance": {
                      "type": "boolean"
                    },
                    "collectionMethod": {
                      "type": "string",
                      "enum": [
                        "charge_automatically",
                        "send_invoice"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          }
                        }
                      }
                    },
                    "paymentSettingId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentSetting": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "paymentMethodTypes": {
                          "type": "array",
                          "description": "A list of the types of payment methods",
                          "example": "wallet",
                          "minItems": 1,
                          "maxItems": 1,
                          "items": {
                            "type": "string",
                            "enum": [
                              "superfluid",
                              "wallet",
                              "allowance_based_recurring",
                              "stripe",
                              "binance_pay"
                            ]
                          }
                        },
                        "allowedChains": {
                          "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                          "example": [
                            {
                              "chainId": 137
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "blacklistCurrencies": {
                                "type": "array",
                                "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                "example": [
                                  "usdc"
                                ],
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "chainId"
                            ]
                          }
                        },
                        "allowedCurrencies": {
                          "type": "array",
                          "description": "The list of currencies allowed for the payment.",
                          "example": [
                            "usdc",
                            "usdt"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        },
                        "preferredChainId": {
                          "type": "number",
                          "example": 1,
                          "description": "The preferred chain's id"
                        },
                        "preferredCurrency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The preferred currency for payment"
                        },
                        "allowSwap": {
                          "type": "boolean",
                          "description": "Whether the user can swap the payment currency",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "open",
                        "paid",
                        "void",
                        "uncollectible"
                      ]
                    },
                    "attempted": {
                      "type": "boolean"
                    },
                    "attemptCount": {
                      "type": "number",
                      "example": 1
                    },
                    "nextPaymentAttempt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "dueDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "footer": {
                      "type": "string"
                    },
                    "fromInvoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "latestRevisionId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "invoicePdfUrl": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "paid": {
                      "type": "boolean"
                    },
                    "paidOutOfBand": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "clientReferenceId": {
                      "type": "string"
                    },
                    "lineItems": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "periodStart": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "periodEnd": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number",
                                "example": 1
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "billingScheme": {
                                    "description": "The billing scheme to use for this price",
                                    "type": "string",
                                    "enum": [
                                      "per_unit"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi"
                                    ],
                                    "description": "The currency symbol"
                                  },
                                  "productId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                    "description": "Product's id"
                                  },
                                  "interval": {
                                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                                    "type": "string",
                                    "enum": [
                                      "day",
                                      "week",
                                      "month",
                                      "year"
                                    ]
                                  },
                                  "intervalCount": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                  },
                                  "isActive": {
                                    "type": "boolean",
                                    "description": "Whether the price is currently active"
                                  },
                                  "usageType": {
                                    "description": "The usage type of the price.",
                                    "type": "string",
                                    "enum": [
                                      "licensed"
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the price",
                                    "type": "string",
                                    "enum": [
                                      "one_time",
                                      "recurring",
                                      "streaming"
                                    ]
                                  },
                                  "unitAmount": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                                  },
                                  "unitAmountDecimal": {
                                    "type": "string"
                                  },
                                  "customUnitMax": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customUnitMin": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                                  },
                                  "customPreset": {
                                    "format": "int64",
                                    "type": "integer",
                                    "example": "9223372036854775807",
                                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                                  },
                                  "customUnitAmountSuggestions": {
                                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "product": {
                                    "description": "The product this price belongs to",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the product. Displayed on the checkout page"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The description of the product. Displayed on the checkout page"
                                          },
                                          "isActive": {
                                            "type": "boolean",
                                            "description": "Whether the product is currently active"
                                          },
                                          "images": {
                                            "maxItems": 8,
                                            "description": "The url of product images. Displayed on the checkout page",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "publicImages": {
                                            "description": "Product images with absolute public url",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "unitLabel": {
                                            "type": "string",
                                            "description": "The label of the unit of the product. Displayed on the checkout page"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "The url of the product"
                                          },
                                          "defaultPriceId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                            "description": "Product's default price id"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "description": "The metadata of the product"
                                          },
                                          "visibility": {
                                            "description": "The visibility of the product",
                                            "type": "string",
                                            "enum": [
                                              10,
                                              20
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ]
                                      }
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                  },
                                  "visibility": {
                                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                                    "type": "string",
                                    "enum": [
                                      10,
                                      20
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "currency",
                                  "productId",
                                  "type",
                                  "product"
                                ]
                              }
                            },
                            "required": [
                              "price"
                            ]
                          }
                        }
                      }
                    },
                    "finalizedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "paidAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "markedUncollectibleAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect the customer to pay invoice"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingReason": {
                      "type": "string",
                      "enum": [
                        "subscription_cycle",
                        "subscription_create",
                        "subscription_update",
                        "subscription",
                        "manual",
                        "upcoming",
                        "subscription_threshold"
                      ]
                    },
                    "allowPromotionCodes": {
                      "type": "boolean",
                      "description": "Enables user redeemable promotion codes."
                    },
                    "finalizeScheduleAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date on which invoice will be finalize and send"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "customerId",
                    "customer",
                    "autoAdvance",
                    "collectionMethod",
                    "paymentSettingId",
                    "paymentSetting",
                    "status",
                    "attempted",
                    "paid",
                    "lineItems",
                    "url",
                    "billingReason"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/customers": {
      "post": {
        "operationId": "CustomerController_create",
        "summary": "Create a customer",
        "description": "Creates a customer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "customerReferenceId": {
                    "type": "string",
                    "description": "Customer's reference id"
                  },
                  "shipping": {
                    "description": "Customer's shipping address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email"
                          },
                          "phone": {
                            "type": "string",
                            "description": "The phone"
                          },
                          "organizationName": {
                            "type": "string",
                            "description": "The organization name"
                          },
                          "address": {
                            "description": "The address",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "line1": {
                                    "type": "string"
                                  },
                                  "line2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ],
                    "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Customer's metadata"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "taxIds": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The phone"
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The organization name"
                    },
                    "address": {
                      "description": "The address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "line1": {
                              "type": "string"
                            },
                            "line2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Customer's id"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Customer's created at"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Customer's updated at"
                    },
                    "customerReferenceId": {
                      "type": "string",
                      "description": "Customer's reference id"
                    },
                    "shipping": {
                      "description": "Customer's shipping address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "taxIds": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "customerId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              }
                            },
                            "required": [
                              "id",
                              "customerId"
                            ]
                          }
                        }
                      }
                    },
                    "visibility": {
                      "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Customer's metadata"
                    },
                    "customerNumber": {
                      "type": "string",
                      "description": "Customer number assigned by the system"
                    }
                  },
                  "required": [
                    "id",
                    "customerNumber"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CustomerController_findAll",
        "summary": "List of customers",
        "description": "Returns the list of customers",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                10,
                20
              ]
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerReferenceId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name"
                              },
                              "email": {
                                "type": "string",
                                "description": "The email"
                              },
                              "phone": {
                                "type": "string",
                                "description": "The phone"
                              },
                              "organizationName": {
                                "type": "string",
                                "description": "The organization name"
                              },
                              "address": {
                                "description": "The address",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "line1": {
                                        "type": "string"
                                      },
                                      "line2": {
                                        "type": "string"
                                      },
                                      "city": {
                                        "type": "string"
                                      },
                                      "state": {
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                "description": "Customer's id"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string",
                                "description": "Customer's created at"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string",
                                "description": "Customer's updated at"
                              },
                              "customerReferenceId": {
                                "type": "string",
                                "description": "Customer's reference id"
                              },
                              "shipping": {
                                "description": "Customer's shipping address",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "The email"
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "The phone"
                                      },
                                      "organizationName": {
                                        "type": "string",
                                        "description": "The organization name"
                                      },
                                      "address": {
                                        "description": "The address",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "line1": {
                                                "type": "string"
                                              },
                                              "line2": {
                                                "type": "string"
                                              },
                                              "city": {
                                                "type": "string"
                                              },
                                              "state": {
                                                "type": "string"
                                              },
                                              "postalCode": {
                                                "type": "string"
                                              },
                                              "country": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "taxIds": {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "createdAt": {
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "updatedAt": {
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        },
                                        "customerId": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "customerId"
                                      ]
                                    }
                                  }
                                }
                              },
                              "visibility": {
                                "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                                "type": "string",
                                "enum": [
                                  10,
                                  20
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "description": "Customer's metadata"
                              },
                              "customerNumber": {
                                "type": "string",
                                "description": "Customer number assigned by the system"
                              }
                            },
                            "required": [
                              "id",
                              "customerNumber"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/customers/{id}": {
      "get": {
        "operationId": "CustomerController_get",
        "summary": "Get a customer",
        "description": "Returns a customer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The phone"
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The organization name"
                    },
                    "address": {
                      "description": "The address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "line1": {
                              "type": "string"
                            },
                            "line2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Customer's id"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Customer's created at"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Customer's updated at"
                    },
                    "customerReferenceId": {
                      "type": "string",
                      "description": "Customer's reference id"
                    },
                    "shipping": {
                      "description": "Customer's shipping address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "taxIds": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "customerId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              }
                            },
                            "required": [
                              "id",
                              "customerId"
                            ]
                          }
                        }
                      }
                    },
                    "visibility": {
                      "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Customer's metadata"
                    },
                    "customerNumber": {
                      "type": "string",
                      "description": "Customer number assigned by the system"
                    }
                  },
                  "required": [
                    "id",
                    "customerNumber"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "CustomerController_update",
        "summary": "Update a customer",
        "description": "Updates a customer email, phone, address, etc.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "shipping": {
                    "description": "Customer's shipping address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email"
                          },
                          "phone": {
                            "type": "string",
                            "description": "The phone"
                          },
                          "organizationName": {
                            "type": "string",
                            "description": "The organization name"
                          },
                          "address": {
                            "description": "The address",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "line1": {
                                    "type": "string"
                                  },
                                  "line2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ],
                    "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Customer's metadata"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "taxIds": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The phone"
                    },
                    "organizationName": {
                      "type": "string",
                      "description": "The organization name"
                    },
                    "address": {
                      "description": "The address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "line1": {
                              "type": "string"
                            },
                            "line2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Customer's id"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Customer's created at"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Customer's updated at"
                    },
                    "customerReferenceId": {
                      "type": "string",
                      "description": "Customer's reference id"
                    },
                    "shipping": {
                      "description": "Customer's shipping address",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "taxIds": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "customerId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                              }
                            },
                            "required": [
                              "id",
                              "customerId"
                            ]
                          }
                        }
                      }
                    },
                    "visibility": {
                      "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Customer's metadata"
                    },
                    "customerNumber": {
                      "type": "string",
                      "description": "Customer number assigned by the system"
                    }
                  },
                  "required": [
                    "id",
                    "customerNumber"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "CustomerController_delete",
        "summary": "Delete a customer",
        "description": "Deletes a customer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/transactions": {
      "get": {
        "operationId": "TransactionController_findAll",
        "summary": "List of transactions",
        "description": "Returns the list of transactions",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentIntentId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Transaction type",
                                "type": "string",
                                "enum": [
                                  "incoming",
                                  "outgoing",
                                  "event",
                                  "transfer"
                                ]
                              },
                              "transactionRelayId": {
                                "type": "string",
                                "description": "Transaction relay id"
                              },
                              "transactionHash": {
                                "type": "string",
                                "description": "Transaction hash"
                              },
                              "nonce": {
                                "type": "number",
                                "example": 1,
                                "description": "Transaction nonce"
                              },
                              "gasLimit": {
                                "type": "number",
                                "example": 1,
                                "description": "Transaction gas limit used in payment"
                              },
                              "validUntil": {
                                "type": "string",
                                "description": "Transaction valid until"
                              },
                              "fromAddress": {
                                "type": "string",
                                "description": "Transaction from address"
                              },
                              "toAddress": {
                                "type": "string",
                                "description": "Transaction to address"
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi",
                                  "usd",
                                  "inr"
                                ],
                                "description": "Transaction currency"
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string",
                                "description": "Transaction created at"
                              },
                              "amount": {
                                "format": "int64",
                                "type": "integer",
                                "example": "9223372036854775807",
                                "description": "Transaction amount in 8 decimals"
                              },
                              "amountRaw": {
                                "type": "string",
                                "description": "Transaction amount raw received from alchemy"
                              },
                              "assetId": {
                                "type": "string",
                                "description": "Transaction asset id"
                              },
                              "asset": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "address": {
                                    "type": "string"
                                  },
                                  "chainId": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi",
                                      "usd",
                                      "inr"
                                    ]
                                  },
                                  "symbol": {
                                    "type": "string"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "coingeckoId": {
                                    "type": "string"
                                  },
                                  "isPublic": {
                                    "type": "boolean"
                                  },
                                  "superToken": {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "string",
                                        "description": "SuperToken's address"
                                      },
                                      "decimals": {
                                        "type": "number",
                                        "example": 1
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "SuperToken's symbol"
                                      }
                                    },
                                    "required": [
                                      "address",
                                      "decimals",
                                      "symbol"
                                    ]
                                  },
                                  "chain": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "Chain id"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Chain name"
                                      },
                                      "icon": {
                                        "type": "string",
                                        "description": "Chain icon"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi",
                                          "usd",
                                          "inr"
                                        ],
                                        "description": "Chain currency symbol"
                                      },
                                      "blockExplorerTransactionUrl": {
                                        "type": "string",
                                        "description": "Chain block explorer transaction url"
                                      },
                                      "blockExplorerName": {
                                        "type": "string",
                                        "description": "Chain block explorer name"
                                      },
                                      "type": {
                                        "description": "Chain type",
                                        "type": "string",
                                        "enum": [
                                          "evm",
                                          "solana",
                                          "stripe",
                                          "binance_pay"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "icon",
                                      "currency",
                                      "blockExplorerTransactionUrl",
                                      "blockExplorerName",
                                      "type"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "address",
                                  "chainId",
                                  "currency",
                                  "symbol",
                                  "decimals",
                                  "isPublic",
                                  "chain"
                                ]
                              },
                              "transactionUrl": {
                                "type": "string",
                                "description": "Transaction url"
                              }
                            },
                            "required": [
                              "type",
                              "fromAddress",
                              "toAddress",
                              "currency",
                              "amountRaw",
                              "assetId",
                              "asset"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/assets": {
      "get": {
        "operationId": "AssetController_findAll",
        "summary": "List of assets",
        "description": "Returns the list of assets",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Asset id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Asset name"
                              },
                              "chainId": {
                                "type": "number",
                                "example": 1,
                                "description": "Asset chain id"
                              },
                              "address": {
                                "type": "string",
                                "description": "Asset address on chain"
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi",
                                  "usd",
                                  "inr"
                                ],
                                "description": "Asset currency symbol"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Asset symbol"
                              },
                              "decimals": {
                                "type": "number",
                                "example": 1,
                                "description": "Asset decimals in which it is represented on chain"
                              },
                              "coingeckoId": {
                                "type": "string",
                                "description": "Asset coingecko id"
                              },
                              "superToken": {
                                "description": "SuperToken data",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "string",
                                        "description": "SuperToken's address"
                                      },
                                      "decimals": {
                                        "type": "number",
                                        "example": 1
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "description": "SuperToken's symbol"
                                      }
                                    },
                                    "required": [
                                      "address",
                                      "decimals",
                                      "symbol"
                                    ]
                                  }
                                ]
                              },
                              "isEIP5827Supported": {
                                "type": "boolean",
                                "description": "Is EIP5827 supported"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "chainId",
                              "address",
                              "currency",
                              "symbol",
                              "decimals",
                              "isEIP5827Supported"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/assets/{id}": {
      "get": {
        "operationId": "AssetController_get",
        "summary": "Get an asset",
        "description": "Returns an asset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Asset id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Asset name"
                    },
                    "chainId": {
                      "type": "number",
                      "example": 1,
                      "description": "Asset chain id"
                    },
                    "address": {
                      "type": "string",
                      "description": "Asset address on chain"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi",
                        "usd",
                        "inr"
                      ],
                      "description": "Asset currency symbol"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Asset symbol"
                    },
                    "decimals": {
                      "type": "number",
                      "example": 1,
                      "description": "Asset decimals in which it is represented on chain"
                    },
                    "coingeckoId": {
                      "type": "string",
                      "description": "Asset coingecko id"
                    },
                    "superToken": {
                      "description": "SuperToken data",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "SuperToken's address"
                            },
                            "decimals": {
                              "type": "number",
                              "example": 1
                            },
                            "symbol": {
                              "type": "string",
                              "description": "SuperToken's symbol"
                            }
                          },
                          "required": [
                            "address",
                            "decimals",
                            "symbol"
                          ]
                        }
                      ]
                    },
                    "isEIP5827Supported": {
                      "type": "boolean",
                      "description": "Is EIP5827 supported"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "chainId",
                    "address",
                    "currency",
                    "symbol",
                    "decimals",
                    "isEIP5827Supported"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/chains": {
      "get": {
        "operationId": "ChainController_findAll",
        "summary": "List of chains",
        "description": "Returns the list of chains with assets",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 1,
                                "description": "Chain id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Chain name"
                              },
                              "icon": {
                                "type": "string",
                                "description": "Chain icon"
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi",
                                  "usd",
                                  "inr"
                                ],
                                "description": "Chain currency symbol"
                              },
                              "blockExplorerTransactionUrl": {
                                "type": "string",
                                "description": "Chain block explorer transaction url"
                              },
                              "blockExplorerName": {
                                "type": "string",
                                "description": "Chain block explorer name"
                              },
                              "type": {
                                "description": "Chain type",
                                "type": "string",
                                "enum": [
                                  "evm",
                                  "solana",
                                  "stripe",
                                  "binance_pay"
                                ]
                              },
                              "assets": {
                                "description": "Chain assets",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Asset id"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Asset name"
                                    },
                                    "chainId": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Asset chain id"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Asset address on chain"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi",
                                        "usd",
                                        "inr"
                                      ],
                                      "description": "Asset currency symbol"
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "Asset symbol"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Asset decimals in which it is represented on chain"
                                    },
                                    "coingeckoId": {
                                      "type": "string",
                                      "description": "Asset coingecko id"
                                    },
                                    "superToken": {
                                      "description": "SuperToken data",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "description": "SuperToken's address"
                                            },
                                            "decimals": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "symbol": {
                                              "type": "string",
                                              "description": "SuperToken's symbol"
                                            }
                                          },
                                          "required": [
                                            "address",
                                            "decimals",
                                            "symbol"
                                          ]
                                        }
                                      ]
                                    },
                                    "isEIP5827Supported": {
                                      "type": "boolean",
                                      "description": "Is EIP5827 supported"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "chainId",
                                    "address",
                                    "currency",
                                    "symbol",
                                    "decimals",
                                    "isEIP5827Supported"
                                  ]
                                }
                              },
                              "isTestnet": {
                                "type": "boolean"
                              },
                              "isEIP1559Supported": {
                                "type": "boolean"
                              },
                              "hasMonitoring": {
                                "type": "boolean"
                              },
                              "forkOf": {
                                "type": "number",
                                "example": 1
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "icon",
                              "currency",
                              "blockExplorerTransactionUrl",
                              "blockExplorerName",
                              "type",
                              "assets",
                              "isTestnet",
                              "isEIP1559Supported",
                              "hasMonitoring"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Chain"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/chains/{id}": {
      "get": {
        "operationId": "ChainController_get",
        "summary": "Get a chain",
        "description": "Returns a chain with assets",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1,
                      "description": "Chain id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Chain name"
                    },
                    "icon": {
                      "type": "string",
                      "description": "Chain icon"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi",
                        "usd",
                        "inr"
                      ],
                      "description": "Chain currency symbol"
                    },
                    "blockExplorerTransactionUrl": {
                      "type": "string",
                      "description": "Chain block explorer transaction url"
                    },
                    "blockExplorerName": {
                      "type": "string",
                      "description": "Chain block explorer name"
                    },
                    "type": {
                      "description": "Chain type",
                      "type": "string",
                      "enum": [
                        "evm",
                        "solana",
                        "stripe",
                        "binance_pay"
                      ]
                    },
                    "assets": {
                      "description": "Chain assets",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Asset id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Asset name"
                          },
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Asset chain id"
                          },
                          "address": {
                            "type": "string",
                            "description": "Asset address on chain"
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi",
                              "usd",
                              "inr"
                            ],
                            "description": "Asset currency symbol"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Asset symbol"
                          },
                          "decimals": {
                            "type": "number",
                            "example": 1,
                            "description": "Asset decimals in which it is represented on chain"
                          },
                          "coingeckoId": {
                            "type": "string",
                            "description": "Asset coingecko id"
                          },
                          "superToken": {
                            "description": "SuperToken data",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "SuperToken's address"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "SuperToken's symbol"
                                  }
                                },
                                "required": [
                                  "address",
                                  "decimals",
                                  "symbol"
                                ]
                              }
                            ]
                          },
                          "isEIP5827Supported": {
                            "type": "boolean",
                            "description": "Is EIP5827 supported"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "chainId",
                          "address",
                          "currency",
                          "symbol",
                          "decimals",
                          "isEIP5827Supported"
                        ]
                      }
                    },
                    "isTestnet": {
                      "type": "boolean"
                    },
                    "isEIP1559Supported": {
                      "type": "boolean"
                    },
                    "hasMonitoring": {
                      "type": "boolean"
                    },
                    "forkOf": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "icon",
                    "currency",
                    "blockExplorerTransactionUrl",
                    "blockExplorerName",
                    "type",
                    "assets",
                    "isTestnet",
                    "isEIP1559Supported",
                    "hasMonitoring"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Chain"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-intents/{paymentIntentId}/payment-receipts/send": {
      "post": {
        "operationId": "PaymentIntentController_sendCheckoutSessionPaymentReceipt",
        "summary": "Send payment receipt email to customer.",
        "description": "Send payment receipt email to customer.",
        "parameters": [
          {
            "name": "paymentIntentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "paymentIntentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "name": {
                      "type": "string"
                    },
                    "receiptNumber": {
                      "type": "string"
                    },
                    "uri": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "paymentIntentId",
                    "receiptNumber"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Intents"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-intents/{paymentIntentId}/mark-as-refund": {
      "post": {
        "operationId": "PaymentIntentController_markAsRefunded",
        "summary": "Mark payment as refunded",
        "description": "Mark payment as refunded",
        "parameters": [
          {
            "name": "paymentIntentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "markRefundedComment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "amount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "amountReceived": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807"
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi",
                        "usd",
                        "inr"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "requires_payment_method",
                        "requires_confirmation",
                        "requires_action",
                        "processing",
                        "requires_capture",
                        "canceled",
                        "succeeded"
                      ]
                    },
                    "paymentMethodId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    },
                    "description": {
                      "type": "string"
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "asset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Asset id"
                            },
                            "name": {
                              "type": "string",
                              "description": "Asset name"
                            },
                            "chainId": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset chain id"
                            },
                            "address": {
                              "type": "string",
                              "description": "Asset address on chain"
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ],
                              "description": "Asset currency symbol"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Asset symbol"
                            },
                            "decimals": {
                              "type": "number",
                              "example": 1,
                              "description": "Asset decimals in which it is represented on chain"
                            },
                            "coingeckoId": {
                              "type": "string",
                              "description": "Asset coingecko id"
                            },
                            "superToken": {
                              "description": "SuperToken data",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": "string",
                                      "description": "SuperToken's address"
                                    },
                                    "decimals": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "symbol": {
                                      "type": "string",
                                      "description": "SuperToken's symbol"
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "decimals",
                                    "symbol"
                                  ]
                                }
                              ]
                            },
                            "isEIP5827Supported": {
                              "type": "boolean",
                              "description": "Is EIP5827 supported"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "chainId",
                            "address",
                            "currency",
                            "symbol",
                            "decimals",
                            "isEIP5827Supported"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "superfluid",
                            "wallet",
                            "allowance_based_recurring",
                            "stripe",
                            "binance_pay"
                          ]
                        },
                        "accountAddress": {
                          "type": "string"
                        },
                        "billingDetails": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The phone"
                            },
                            "organizationName": {
                              "type": "string",
                              "description": "The organization name"
                            },
                            "address": {
                              "description": "The address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "customerId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "options": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "assetId",
                        "asset",
                        "type"
                      ]
                    },
                    "paymentMethodTypes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      }
                    },
                    "transferAccountAddress": {
                      "type": "string"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Transaction type",
                            "type": "string",
                            "enum": [
                              "incoming",
                              "outgoing",
                              "event",
                              "transfer"
                            ]
                          },
                          "transactionRelayId": {
                            "type": "string",
                            "description": "Transaction relay id"
                          },
                          "transactionHash": {
                            "type": "string",
                            "description": "Transaction hash"
                          },
                          "nonce": {
                            "type": "number",
                            "example": 1,
                            "description": "Transaction nonce"
                          },
                          "gasLimit": {
                            "type": "number",
                            "example": 1,
                            "description": "Transaction gas limit used in payment"
                          },
                          "validUntil": {
                            "type": "string",
                            "description": "Transaction valid until"
                          },
                          "fromAddress": {
                            "type": "string",
                            "description": "Transaction from address"
                          },
                          "toAddress": {
                            "type": "string",
                            "description": "Transaction to address"
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi",
                              "usd",
                              "inr"
                            ],
                            "description": "Transaction currency"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Transaction created at"
                          },
                          "amount": {
                            "format": "int64",
                            "type": "integer",
                            "example": "9223372036854775807",
                            "description": "Transaction amount in 8 decimals"
                          },
                          "amountRaw": {
                            "type": "string",
                            "description": "Transaction amount raw received from alchemy"
                          },
                          "assetId": {
                            "type": "string",
                            "description": "Transaction asset id"
                          },
                          "asset": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "address": {
                                "type": "string"
                              },
                              "chainId": {
                                "type": "number",
                                "example": 1
                              },
                              "currency": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi",
                                  "usd",
                                  "inr"
                                ]
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number",
                                "example": 1
                              },
                              "coingeckoId": {
                                "type": "string"
                              },
                              "isPublic": {
                                "type": "boolean"
                              },
                              "superToken": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "SuperToken's address"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "SuperToken's symbol"
                                  }
                                },
                                "required": [
                                  "address",
                                  "decimals",
                                  "symbol"
                                ]
                              },
                              "chain": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Chain id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Chain name"
                                  },
                                  "icon": {
                                    "type": "string",
                                    "description": "Chain icon"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "usdc",
                                      "usdt",
                                      "dai",
                                      "btc",
                                      "eth",
                                      "matic",
                                      "bnb",
                                      "sol",
                                      "busd",
                                      "food",
                                      "tfi",
                                      "usd",
                                      "inr"
                                    ],
                                    "description": "Chain currency symbol"
                                  },
                                  "blockExplorerTransactionUrl": {
                                    "type": "string",
                                    "description": "Chain block explorer transaction url"
                                  },
                                  "blockExplorerName": {
                                    "type": "string",
                                    "description": "Chain block explorer name"
                                  },
                                  "type": {
                                    "description": "Chain type",
                                    "type": "string",
                                    "enum": [
                                      "evm",
                                      "solana",
                                      "stripe",
                                      "binance_pay"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "icon",
                                  "currency",
                                  "blockExplorerTransactionUrl",
                                  "blockExplorerName",
                                  "type"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "address",
                              "chainId",
                              "currency",
                              "symbol",
                              "decimals",
                              "isPublic",
                              "chain"
                            ]
                          },
                          "transactionUrl": {
                            "type": "string",
                            "description": "Transaction url"
                          }
                        },
                        "required": [
                          "type",
                          "fromAddress",
                          "toAddress",
                          "currency",
                          "amountRaw",
                          "assetId",
                          "asset"
                        ]
                      }
                    },
                    "paymentReceipt": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "paymentIntentId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        },
                        "name": {
                          "type": "string"
                        },
                        "receiptNumber": {
                          "type": "string"
                        },
                        "uri": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "organizationId",
                        "paymentIntentId",
                        "receiptNumber"
                      ]
                    },
                    "canceledAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "cancellationReason": {
                      "type": "string"
                    },
                    "stripe": {
                      "type": "object",
                      "properties": {
                        "paymentIntentId": {
                          "type": "string"
                        },
                        "receiptUrl": {
                          "type": "string"
                        },
                        "cardLast4": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    },
                    "isMarkRefunded": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "markRefundedAt": {
                      "format": "date-time",
                      "type": "string",
                      "nullable": true
                    },
                    "markRefundedComment": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "status",
                    "paymentMethodId",
                    "transactions"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payment Intents"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/coupons": {
      "get": {
        "operationId": "CouponController_search",
        "summary": "List of coupons",
        "description": "Returns the list of coupons",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 200,
              "type": "number"
            }
          },
          {
            "required": false,
            "description": "Returns null values",
            "name": "isnull",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "required": false,
            "description": "Returns not null values",
            "name": "notnull",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Returns values greater than the given date",
            "required": false,
            "name": "gt",
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Returns values greater than or equal to the given date",
            "required": false,
            "name": "gte",
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Returns values less than the given date",
            "required": false,
            "name": "lt",
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Returns values less than or equal to the given date",
            "required": false,
            "name": "lte",
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "format": "uuid",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "isEnable",
            "required": false,
            "in": "query",
            "description": "If true, only active coupons will be returned",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isArchived",
            "required": false,
            "in": "query",
            "description": "If true, only archived coupons will be returned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Coupon id"
                              },
                              "organizationId": {
                                "type": "string",
                                "description": "Organization id"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                              },
                              "percentOff": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100,
                                "example": 1,
                                "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                              },
                              "maxRedemptions": {
                                "type": "number",
                                "example": 1,
                                "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                              },
                              "redeemBy": {
                                "format": "date-time",
                                "type": "string",
                                "description": "Date after which the coupon can no longer be redeemed"
                              },
                              "isEnable": {
                                "type": "boolean",
                                "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string",
                                "description": "Time at which this coupon was created."
                              },
                              "metadata": {
                                "type": "object",
                                "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                              },
                              "isArchived": {
                                "type": "boolean",
                                "description": "Whether the coupon is archived."
                              },
                              "archivedAt": {
                                "format": "date-time",
                                "type": "string",
                                "description": "Date at which the coupon was archived"
                              },
                              "promotionCodes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Promotion code id"
                                    },
                                    "organizationId": {
                                      "type": "string",
                                      "description": "Organization id"
                                    },
                                    "code": {
                                      "type": "string",
                                      "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                                      "maxLength": 20,
                                      "minLength": 3
                                    },
                                    "couponId": {
                                      "type": "string",
                                      "description": "Coupon id"
                                    },
                                    "isActive": {
                                      "type": "boolean",
                                      "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                                    },
                                    "expiredAt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                                    },
                                    "maxRedemptions": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Date at which the promotion code was created"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "organizationId",
                                    "code",
                                    "couponId",
                                    "isActive"
                                  ]
                                }
                              },
                              "status": {
                                "description": "The status of the coupon.",
                                "type": "string",
                                "enum": [
                                  "active",
                                  "expired",
                                  "disabled",
                                  "limit_reached"
                                ]
                              },
                              "timesRedeemed": {
                                "type": "number",
                                "example": 1,
                                "description": "Number of times this coupon has been applied."
                              }
                            },
                            "required": [
                              "id",
                              "organizationId",
                              "name",
                              "percentOff",
                              "isEnable",
                              "isArchived",
                              "promotionCodes",
                              "status"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Coupons"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "CouponController_create",
        "summary": "Create a coupon",
        "description": "Creates a coupon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                  },
                  "percentOff": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "example": 1,
                    "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                  },
                  "maxRedemptions": {
                    "type": "number",
                    "example": 1,
                    "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                  },
                  "redeemBy": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Date after which the coupon can no longer be redeemed"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                  },
                  "isEnable": {
                    "type": "boolean",
                    "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                  },
                  "promotionCodeData": {
                    "description": "The items to be used to create promotion code",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "data": {
                            "minItems": 1,
                            "maxItems": 1,
                            "description": "The line items to be used to create promotion code",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                                  "maxLength": 20,
                                  "minLength": 3
                                },
                                "expiredAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                                },
                                "maxRedemptions": {
                                  "type": "number",
                                  "example": 1,
                                  "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                                },
                                "metadata": {
                                  "type": "object",
                                  "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                                }
                              },
                              "required": [
                                "code"
                              ]
                            }
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "percentOff",
                  "promotionCodeData"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Coupon id"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                    },
                    "percentOff": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "example": 1,
                      "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                    },
                    "maxRedemptions": {
                      "type": "number",
                      "example": 1,
                      "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                    },
                    "redeemBy": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date after which the coupon can no longer be redeemed"
                    },
                    "isEnable": {
                      "type": "boolean",
                      "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Time at which this coupon was created."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "isArchived": {
                      "type": "boolean",
                      "description": "Whether the coupon is archived."
                    },
                    "archivedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date at which the coupon was archived"
                    },
                    "promotionCodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Promotion code id"
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Organization id"
                          },
                          "code": {
                            "type": "string",
                            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                            "maxLength": 20,
                            "minLength": 3
                          },
                          "couponId": {
                            "type": "string",
                            "description": "Coupon id"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                          },
                          "expiredAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                          },
                          "maxRedemptions": {
                            "type": "number",
                            "example": 1,
                            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code was created"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                          }
                        },
                        "required": [
                          "id",
                          "organizationId",
                          "code",
                          "couponId",
                          "isActive"
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the coupon.",
                      "type": "string",
                      "enum": [
                        "active",
                        "expired",
                        "disabled",
                        "limit_reached"
                      ]
                    },
                    "timesRedeemed": {
                      "type": "number",
                      "example": 1,
                      "description": "Number of times this coupon has been applied."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "name",
                    "percentOff",
                    "isEnable",
                    "isArchived",
                    "promotionCodes",
                    "status"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Coupons"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/coupons/{id}": {
      "get": {
        "operationId": "CouponController_get",
        "summary": "Get a coupon",
        "description": "Returns a coupon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Coupon id"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                    },
                    "percentOff": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "example": 1,
                      "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                    },
                    "maxRedemptions": {
                      "type": "number",
                      "example": 1,
                      "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                    },
                    "redeemBy": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date after which the coupon can no longer be redeemed"
                    },
                    "isEnable": {
                      "type": "boolean",
                      "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Time at which this coupon was created."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "isArchived": {
                      "type": "boolean",
                      "description": "Whether the coupon is archived."
                    },
                    "archivedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date at which the coupon was archived"
                    },
                    "promotionCodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Promotion code id"
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Organization id"
                          },
                          "code": {
                            "type": "string",
                            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                            "maxLength": 20,
                            "minLength": 3
                          },
                          "couponId": {
                            "type": "string",
                            "description": "Coupon id"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                          },
                          "expiredAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                          },
                          "maxRedemptions": {
                            "type": "number",
                            "example": 1,
                            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code was created"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                          }
                        },
                        "required": [
                          "id",
                          "organizationId",
                          "code",
                          "couponId",
                          "isActive"
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the coupon.",
                      "type": "string",
                      "enum": [
                        "active",
                        "expired",
                        "disabled",
                        "limit_reached"
                      ]
                    },
                    "timesRedeemed": {
                      "type": "number",
                      "example": 1,
                      "description": "Number of times this coupon has been applied."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "name",
                    "percentOff",
                    "isEnable",
                    "isArchived",
                    "promotionCodes",
                    "status"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Coupons"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "CouponController_update",
        "summary": "Update a coupon",
        "description": "Updates a coupon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                  },
                  "maxRedemptions": {
                    "type": "number",
                    "example": 1,
                    "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                  },
                  "redeemBy": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Date after which the coupon can no longer be redeemed"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                  },
                  "isEnable": {
                    "type": "boolean",
                    "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Coupon id"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                    },
                    "percentOff": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "example": 1,
                      "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                    },
                    "maxRedemptions": {
                      "type": "number",
                      "example": 1,
                      "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                    },
                    "redeemBy": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date after which the coupon can no longer be redeemed"
                    },
                    "isEnable": {
                      "type": "boolean",
                      "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Time at which this coupon was created."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "isArchived": {
                      "type": "boolean",
                      "description": "Whether the coupon is archived."
                    },
                    "archivedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date at which the coupon was archived"
                    },
                    "promotionCodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Promotion code id"
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Organization id"
                          },
                          "code": {
                            "type": "string",
                            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                            "maxLength": 20,
                            "minLength": 3
                          },
                          "couponId": {
                            "type": "string",
                            "description": "Coupon id"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                          },
                          "expiredAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                          },
                          "maxRedemptions": {
                            "type": "number",
                            "example": 1,
                            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code was created"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                          }
                        },
                        "required": [
                          "id",
                          "organizationId",
                          "code",
                          "couponId",
                          "isActive"
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the coupon.",
                      "type": "string",
                      "enum": [
                        "active",
                        "expired",
                        "disabled",
                        "limit_reached"
                      ]
                    },
                    "timesRedeemed": {
                      "type": "number",
                      "example": 1,
                      "description": "Number of times this coupon has been applied."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "name",
                    "percentOff",
                    "isEnable",
                    "isArchived",
                    "promotionCodes",
                    "status"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Coupons"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/coupons/{id}/enable": {
      "post": {
        "operationId": "CouponController_enable",
        "summary": "Enable a coupon",
        "description": "Enable a coupon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Coupon id"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                    },
                    "percentOff": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "example": 1,
                      "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                    },
                    "maxRedemptions": {
                      "type": "number",
                      "example": 1,
                      "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                    },
                    "redeemBy": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date after which the coupon can no longer be redeemed"
                    },
                    "isEnable": {
                      "type": "boolean",
                      "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Time at which this coupon was created."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "isArchived": {
                      "type": "boolean",
                      "description": "Whether the coupon is archived."
                    },
                    "archivedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date at which the coupon was archived"
                    },
                    "promotionCodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Promotion code id"
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Organization id"
                          },
                          "code": {
                            "type": "string",
                            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                            "maxLength": 20,
                            "minLength": 3
                          },
                          "couponId": {
                            "type": "string",
                            "description": "Coupon id"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                          },
                          "expiredAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                          },
                          "maxRedemptions": {
                            "type": "number",
                            "example": 1,
                            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code was created"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                          }
                        },
                        "required": [
                          "id",
                          "organizationId",
                          "code",
                          "couponId",
                          "isActive"
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the coupon.",
                      "type": "string",
                      "enum": [
                        "active",
                        "expired",
                        "disabled",
                        "limit_reached"
                      ]
                    },
                    "timesRedeemed": {
                      "type": "number",
                      "example": 1,
                      "description": "Number of times this coupon has been applied."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "name",
                    "percentOff",
                    "isEnable",
                    "isArchived",
                    "promotionCodes",
                    "status"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Coupons"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/coupons/{id}/disable": {
      "post": {
        "operationId": "CouponController_disable",
        "summary": "Disable a coupon",
        "description": "Disable a coupon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Coupon id"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                    },
                    "percentOff": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "example": 1,
                      "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                    },
                    "maxRedemptions": {
                      "type": "number",
                      "example": 1,
                      "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                    },
                    "redeemBy": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date after which the coupon can no longer be redeemed"
                    },
                    "isEnable": {
                      "type": "boolean",
                      "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Time at which this coupon was created."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "isArchived": {
                      "type": "boolean",
                      "description": "Whether the coupon is archived."
                    },
                    "archivedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date at which the coupon was archived"
                    },
                    "promotionCodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Promotion code id"
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Organization id"
                          },
                          "code": {
                            "type": "string",
                            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                            "maxLength": 20,
                            "minLength": 3
                          },
                          "couponId": {
                            "type": "string",
                            "description": "Coupon id"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                          },
                          "expiredAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                          },
                          "maxRedemptions": {
                            "type": "number",
                            "example": 1,
                            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code was created"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                          }
                        },
                        "required": [
                          "id",
                          "organizationId",
                          "code",
                          "couponId",
                          "isActive"
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the coupon.",
                      "type": "string",
                      "enum": [
                        "active",
                        "expired",
                        "disabled",
                        "limit_reached"
                      ]
                    },
                    "timesRedeemed": {
                      "type": "number",
                      "example": 1,
                      "description": "Number of times this coupon has been applied."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "name",
                    "percentOff",
                    "isEnable",
                    "isArchived",
                    "promotionCodes",
                    "status"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Coupons"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/coupons/{id}/archive": {
      "post": {
        "operationId": "CouponController_archive",
        "summary": "Archive a coupon",
        "description": "Archive a coupon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Coupon id"
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization id"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                    },
                    "percentOff": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "example": 1,
                      "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                    },
                    "maxRedemptions": {
                      "type": "number",
                      "example": 1,
                      "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
                    },
                    "redeemBy": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date after which the coupon can no longer be redeemed"
                    },
                    "isEnable": {
                      "type": "boolean",
                      "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Time at which this coupon was created."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "isArchived": {
                      "type": "boolean",
                      "description": "Whether the coupon is archived."
                    },
                    "archivedAt": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Date at which the coupon was archived"
                    },
                    "promotionCodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Promotion code id"
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Organization id"
                          },
                          "code": {
                            "type": "string",
                            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                            "maxLength": 20,
                            "minLength": 3
                          },
                          "couponId": {
                            "type": "string",
                            "description": "Coupon id"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                          },
                          "expiredAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                          },
                          "maxRedemptions": {
                            "type": "number",
                            "example": 1,
                            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Date at which the promotion code was created"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                          }
                        },
                        "required": [
                          "id",
                          "organizationId",
                          "code",
                          "couponId",
                          "isActive"
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the coupon.",
                      "type": "string",
                      "enum": [
                        "active",
                        "expired",
                        "disabled",
                        "limit_reached"
                      ]
                    },
                    "timesRedeemed": {
                      "type": "number",
                      "example": 1,
                      "description": "Number of times this coupon has been applied."
                    }
                  },
                  "required": [
                    "id",
                    "organizationId",
                    "name",
                    "percentOff",
                    "isEnable",
                    "isArchived",
                    "promotionCodes",
                    "status"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Coupons"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/constants/prices": {
      "get": {
        "operationId": "ConstantsController_getPrices",
        "parameters": [
          {
            "name": "currency",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "number",
                            "example": 1
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          },
                          "coingeckoId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "price",
                          "currency"
                        ]
                      }
                    }
                  },
                  "required": [
                    "prices"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Constants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/webhook-endpoints": {
      "get": {
        "operationId": "WebhookEndpointController_getAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "example": 1,
            "description": "Page number. Starts from 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 10,
            "description": "Number of items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "isnull": {
                  "type": "boolean",
                  "description": "Returns null values"
                },
                "notnull": {
                  "type": "boolean",
                  "description": "Returns not null values"
                },
                "gt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than the given date"
                },
                "gte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values greater than or equal to the given date"
                },
                "lt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than the given date"
                },
                "lte": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Returns values less than or equal to the given date"
                }
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "example": [
              "c3611c05-df51-4b47-b601-f2eac02f4ef0",
              "c3611c05-df51-4b47-b601-f2eac02f4ef2"
            ],
            "description": "Filter by id. Returns items with given ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isDisabled",
            "required": false,
            "in": "query",
            "description": "To filter if webhook endpoint is disabled",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              },
                              "secret": {
                                "type": "string"
                              },
                              "isDisabled": {
                                "type": "boolean"
                              },
                              "enabledEvents": {
                                "type": "object",
                                "properties": {
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "*",
                                        "withdrawal_address.created",
                                        "withdrawal_address.updated",
                                        "withdrawal_address.deleted",
                                        "checkout_session.completed",
                                        "checkout_session.expired",
                                        "checkout_session.canceled",
                                        "customer.subscription.created",
                                        "customer.subscription.started",
                                        "customer.subscription.deleted",
                                        "customer.subscription.past_due",
                                        "customer.subscription.unpaid",
                                        "customer.subscription.incomplete_expired",
                                        "payment_intent.payment_failed",
                                        "payment_intent.canceled",
                                        "payment_intent.succeeded",
                                        "invoice.finalized",
                                        "invoice.paid",
                                        "invoice.marked_as_paid",
                                        "invoice.marked_uncollectible",
                                        "invoice.payment_failed"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "events"
                                ]
                              },
                              "createdAt": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "updatedAt": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "description",
                              "url",
                              "secret",
                              "enabledEvents",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "WebhookEndpoints"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "WebhookEndpointController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "enabledEvents": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "*",
                            "withdrawal_address.created",
                            "withdrawal_address.updated",
                            "withdrawal_address.deleted",
                            "checkout_session.completed",
                            "checkout_session.expired",
                            "checkout_session.canceled",
                            "customer.subscription.created",
                            "customer.subscription.started",
                            "customer.subscription.deleted",
                            "customer.subscription.past_due",
                            "customer.subscription.unpaid",
                            "customer.subscription.incomplete_expired",
                            "payment_intent.payment_failed",
                            "payment_intent.canceled",
                            "payment_intent.succeeded",
                            "invoice.finalized",
                            "invoice.paid",
                            "invoice.marked_as_paid",
                            "invoice.marked_uncollectible",
                            "invoice.payment_failed"
                          ]
                        }
                      }
                    },
                    "required": [
                      "events"
                    ]
                  }
                },
                "required": [
                  "description",
                  "url",
                  "enabledEvents"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "isDisabled": {
                      "type": "boolean"
                    },
                    "enabledEvents": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "*",
                              "withdrawal_address.created",
                              "withdrawal_address.updated",
                              "withdrawal_address.deleted",
                              "checkout_session.completed",
                              "checkout_session.expired",
                              "checkout_session.canceled",
                              "customer.subscription.created",
                              "customer.subscription.started",
                              "customer.subscription.deleted",
                              "customer.subscription.past_due",
                              "customer.subscription.unpaid",
                              "customer.subscription.incomplete_expired",
                              "payment_intent.payment_failed",
                              "payment_intent.canceled",
                              "payment_intent.succeeded",
                              "invoice.finalized",
                              "invoice.paid",
                              "invoice.marked_as_paid",
                              "invoice.marked_uncollectible",
                              "invoice.payment_failed"
                            ]
                          }
                        }
                      },
                      "required": [
                        "events"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "description",
                    "url",
                    "secret",
                    "enabledEvents",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "WebhookEndpoints"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/webhook-endpoints/{id}": {
      "get": {
        "operationId": "WebhookEndpointController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "isDisabled": {
                      "type": "boolean"
                    },
                    "enabledEvents": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "*",
                              "withdrawal_address.created",
                              "withdrawal_address.updated",
                              "withdrawal_address.deleted",
                              "checkout_session.completed",
                              "checkout_session.expired",
                              "checkout_session.canceled",
                              "customer.subscription.created",
                              "customer.subscription.started",
                              "customer.subscription.deleted",
                              "customer.subscription.past_due",
                              "customer.subscription.unpaid",
                              "customer.subscription.incomplete_expired",
                              "payment_intent.payment_failed",
                              "payment_intent.canceled",
                              "payment_intent.succeeded",
                              "invoice.finalized",
                              "invoice.paid",
                              "invoice.marked_as_paid",
                              "invoice.marked_uncollectible",
                              "invoice.payment_failed"
                            ]
                          }
                        }
                      },
                      "required": [
                        "events"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "description",
                    "url",
                    "secret",
                    "enabledEvents",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "WebhookEndpoints"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "WebhookEndpointController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "isDisabled": {
                    "type": "boolean"
                  },
                  "enabledEvents": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "*",
                            "withdrawal_address.created",
                            "withdrawal_address.updated",
                            "withdrawal_address.deleted",
                            "checkout_session.completed",
                            "checkout_session.expired",
                            "checkout_session.canceled",
                            "customer.subscription.created",
                            "customer.subscription.started",
                            "customer.subscription.deleted",
                            "customer.subscription.past_due",
                            "customer.subscription.unpaid",
                            "customer.subscription.incomplete_expired",
                            "payment_intent.payment_failed",
                            "payment_intent.canceled",
                            "payment_intent.succeeded",
                            "invoice.finalized",
                            "invoice.paid",
                            "invoice.marked_as_paid",
                            "invoice.marked_uncollectible",
                            "invoice.payment_failed"
                          ]
                        }
                      }
                    },
                    "required": [
                      "events"
                    ]
                  }
                },
                "required": [
                  "description",
                  "url",
                  "enabledEvents"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "isDisabled": {
                      "type": "boolean"
                    },
                    "enabledEvents": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "*",
                              "withdrawal_address.created",
                              "withdrawal_address.updated",
                              "withdrawal_address.deleted",
                              "checkout_session.completed",
                              "checkout_session.expired",
                              "checkout_session.canceled",
                              "customer.subscription.created",
                              "customer.subscription.started",
                              "customer.subscription.deleted",
                              "customer.subscription.past_due",
                              "customer.subscription.unpaid",
                              "customer.subscription.incomplete_expired",
                              "payment_intent.payment_failed",
                              "payment_intent.canceled",
                              "payment_intent.succeeded",
                              "invoice.finalized",
                              "invoice.paid",
                              "invoice.marked_as_paid",
                              "invoice.marked_uncollectible",
                              "invoice.payment_failed"
                            ]
                          }
                        }
                      },
                      "required": [
                        "events"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "description",
                    "url",
                    "secret",
                    "enabledEvents",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "WebhookEndpoints"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "WebhookEndpointController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "WebhookEndpoints"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/webhook-endpoints/{id}/regenerate": {
      "post": {
        "operationId": "WebhookEndpointController_regenerate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "isDisabled": {
                      "type": "boolean"
                    },
                    "enabledEvents": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "*",
                              "withdrawal_address.created",
                              "withdrawal_address.updated",
                              "withdrawal_address.deleted",
                              "checkout_session.completed",
                              "checkout_session.expired",
                              "checkout_session.canceled",
                              "customer.subscription.created",
                              "customer.subscription.started",
                              "customer.subscription.deleted",
                              "customer.subscription.past_due",
                              "customer.subscription.unpaid",
                              "customer.subscription.incomplete_expired",
                              "payment_intent.payment_failed",
                              "payment_intent.canceled",
                              "payment_intent.succeeded",
                              "invoice.finalized",
                              "invoice.paid",
                              "invoice.marked_as_paid",
                              "invoice.marked_uncollectible",
                              "invoice.payment_failed"
                            ]
                          }
                        }
                      },
                      "required": [
                        "events"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "description",
                    "url",
                    "secret",
                    "enabledEvents",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "WebhookEndpoints"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/webhook-endpoints/{id}/test": {
      "post": {
        "operationId": "WebhookEndpointController_test",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "WebhookEndpoints"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/partners/accounts/onboard": {
      "post": {
        "operationId": "PartnerController_createAccount",
        "summary": "Create an account for a partner",
        "description": "partner_api",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email. Should be unique"
                  },
                  "name": {
                    "type": "string",
                    "description": "Business name"
                  },
                  "website": {
                    "type": "string",
                    "description": "Business website"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Business phone number"
                  },
                  "brandColor": {
                    "type": "string",
                    "description": "Brand color in hex format"
                  },
                  "addressDetails": {
                    "description": "Organization's business address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "paymentSetting": {
                    "description": "Organization payment setting",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "preferredChainId": {
                            "type": "number",
                            "example": 1,
                            "description": "The preferred chain's id"
                          },
                          "preferredCurrency": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ],
                            "description": "The preferred currency for payment"
                          },
                          "allowSwap": {
                            "type": "boolean",
                            "description": "Whether the user can swap the payment currency",
                            "default": false
                          }
                        }
                      }
                    ]
                  },
                  "withdrawalAddresses": {
                    "description": "Organization withdrawal addresses",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Withdrawal address name"
                        },
                        "address": {
                          "type": "string",
                          "description": "Withdrawal address"
                        },
                        "chainId": {
                          "type": "number",
                          "example": 1,
                          "description": "Withdrawal address chain id"
                        }
                      },
                      "required": [
                        "name",
                        "address",
                        "chainId"
                      ]
                    }
                  },
                  "webhookEndpoints": {
                    "description": "Organization webhook endpoints",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "enabledEvents": {
                          "type": "object",
                          "properties": {
                            "events": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "*",
                                  "withdrawal_address.created",
                                  "withdrawal_address.updated",
                                  "withdrawal_address.deleted",
                                  "checkout_session.completed",
                                  "checkout_session.expired",
                                  "checkout_session.canceled",
                                  "customer.subscription.created",
                                  "customer.subscription.started",
                                  "customer.subscription.deleted",
                                  "customer.subscription.past_due",
                                  "customer.subscription.unpaid",
                                  "customer.subscription.incomplete_expired",
                                  "payment_intent.payment_failed",
                                  "payment_intent.canceled",
                                  "payment_intent.succeeded",
                                  "invoice.finalized",
                                  "invoice.paid",
                                  "invoice.marked_as_paid",
                                  "invoice.marked_uncollectible",
                                  "invoice.payment_failed"
                                ]
                              }
                            }
                          },
                          "required": [
                            "events"
                          ]
                        }
                      },
                      "required": [
                        "description",
                        "url",
                        "enabledEvents"
                      ]
                    }
                  }
                },
                "required": [
                  "email",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organization": {
                      "description": "Organization details",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "Organization's name"
                            },
                            "type": {
                              "type": "string",
                              "description": "Organization's type"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "active",
                                "suspended"
                              ],
                              "description": "Organization's status"
                            },
                            "kind": {
                              "description": "Organization's kind",
                              "type": "string",
                              "enum": [
                                "individual",
                                "business"
                              ]
                            },
                            "ownerId": {
                              "type": "string",
                              "description": "User's id who owns organization"
                            },
                            "noOfEmployees": {
                              "type": "string",
                              "description": "No of employees"
                            },
                            "monthlyPaymentVolume": {
                              "type": "string",
                              "description": "Monthly payment volume"
                            },
                            "addresses": {
                              "description": "Withdrawal addresses",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Withdrawal address id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Withdrawal address name"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "Withdrawal address"
                                  },
                                  "chainId": {
                                    "type": "number",
                                    "example": 1,
                                    "description": "Withdrawal address chain id"
                                  },
                                  "isDefault": {
                                    "type": "boolean",
                                    "description": "Is default withdrawal address"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "address",
                                  "chainId",
                                  "isDefault"
                                ]
                              }
                            },
                            "email": {
                              "type": "string",
                              "description": "Organization's support email"
                            },
                            "phone": {
                              "type": "string",
                              "description": "Organization's support phone number"
                            },
                            "addressDetails": {
                              "description": "Organization's business address",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "brandLogo": {
                              "type": "string",
                              "description": "Brand logo url"
                            },
                            "brandColor": {
                              "type": "string",
                              "description": "Brand color in hex format"
                            },
                            "supportUrl": {
                              "type": "string",
                              "description": "Organization's support url"
                            },
                            "termsUrl": {
                              "type": "string",
                              "description": "Organization's terms and conditions url"
                            },
                            "privacyUrl": {
                              "type": "string",
                              "description": "Organization's privacy policy url"
                            },
                            "websiteUrl": {
                              "type": "string",
                              "description": "Organization's website url"
                            },
                            "featureAccessRequests": {
                              "description": "Feature access requests from organization",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "type",
                            "status",
                            "kind",
                            "ownerId",
                            "noOfEmployees",
                            "monthlyPaymentVolume",
                            "addresses",
                            "brandLogo",
                            "brandColor",
                            "featureAccessRequests"
                          ]
                        }
                      ]
                    },
                    "user": {
                      "description": "User details",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string"
                            },
                            "profilePicture": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "position": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "active",
                                "suspended"
                              ]
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "flags": {
                              "type": "object",
                              "properties": {
                                "introModal": {
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "required": [
                            "id",
                            "firstName",
                            "lastName",
                            "role",
                            "status"
                          ]
                        }
                      ]
                    },
                    "paymentSetting": {
                      "description": "Organization payment setting details",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "paymentMethodTypes": {
                              "type": "array",
                              "description": "A list of the types of payment methods",
                              "example": "wallet",
                              "minItems": 1,
                              "maxItems": 1,
                              "items": {
                                "type": "string",
                                "enum": [
                                  "superfluid",
                                  "wallet",
                                  "allowance_based_recurring",
                                  "stripe",
                                  "binance_pay"
                                ]
                              }
                            },
                            "allowedChains": {
                              "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                              "example": [
                                {
                                  "chainId": 137
                                }
                              ],
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "chainId": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "blacklistCurrencies": {
                                    "type": "array",
                                    "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                    "example": [
                                      "usdc"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "usdc",
                                        "usdt",
                                        "dai",
                                        "btc",
                                        "eth",
                                        "matic",
                                        "bnb",
                                        "sol",
                                        "busd",
                                        "food",
                                        "tfi"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "chainId"
                                ]
                              }
                            },
                            "allowedCurrencies": {
                              "type": "array",
                              "description": "The list of currencies allowed for the payment.",
                              "example": [
                                "usdc",
                                "usdt"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "usdc",
                                  "usdt",
                                  "dai",
                                  "btc",
                                  "eth",
                                  "matic",
                                  "bnb",
                                  "sol",
                                  "busd",
                                  "food",
                                  "tfi"
                                ]
                              }
                            },
                            "preferredChainId": {
                              "type": "number",
                              "example": 1,
                              "description": "The preferred chain's id"
                            },
                            "preferredCurrency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The preferred currency for payment"
                            },
                            "allowSwap": {
                              "type": "boolean",
                              "description": "Whether the user can swap the payment currency",
                              "default": false
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    },
                    "webhookEndpoints": {
                      "description": "Organization webhook endpoints",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "withdrawalAddresses": {
                      "description": "Organization withdrawal addresses",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Withdrawal address id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Withdrawal address name"
                          },
                          "address": {
                            "type": "string",
                            "description": "Withdrawal address"
                          },
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Withdrawal address chain id"
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "Is default withdrawal address"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Withdrawal address creation date"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Withdrawal address update date"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "address",
                          "chainId",
                          "isDefault",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "personalAccessToken": {
                      "description": "Organization personal access token to access organization' API",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "tokenIdentifier": {
                              "type": "string"
                            },
                            "organizationId": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "tokenIdentifier",
                            "organizationId",
                            "userId",
                            "createdAt",
                            "updatedAt",
                            "token"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "organization",
                    "user",
                    "paymentSetting",
                    "webhookEndpoints",
                    "withdrawalAddresses",
                    "personalAccessToken"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Partner"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/partners/accounts": {
      "get": {
        "operationId": "PartnerController_getAccount",
        "summary": "Get accounts of a partner by emails",
        "description": "partner_api",
        "parameters": [
          {
            "name": "emails",
            "required": false,
            "in": "query",
            "description": "To filter accounts by email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "Page number. Starts from 1"
                        },
                        "limit": {
                          "type": "number",
                          "example": 10,
                          "default": 200,
                          "description": "Number of items per page"
                        },
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "hasMore": {
                          "type": "boolean"
                        },
                        "query": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "minimum": 1,
                              "example": 1,
                              "default": 1,
                              "description": "Page number. Starts from 1"
                            },
                            "limit": {
                              "type": "number",
                              "minimum": 1,
                              "maximum": 200,
                              "example": 10,
                              "default": 200,
                              "description": "Number of items per page"
                            },
                            "createdAt": {
                              "description": "Filter by created date",
                              "example": {
                                "gt": "2020-01-01"
                              },
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "isnull": {
                                      "type": "boolean",
                                      "description": "Returns null values"
                                    },
                                    "notnull": {
                                      "type": "boolean",
                                      "description": "Returns not null values"
                                    },
                                    "gt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than the given date"
                                    },
                                    "gte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values greater than or equal to the given date"
                                    },
                                    "lt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than the given date"
                                    },
                                    "lte": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Returns values less than or equal to the given date"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "page",
                        "limit",
                        "count",
                        "hasMore",
                        "data"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "organization": {
                                "description": "Organization details",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Organization's name"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Organization's type"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "pending",
                                          "active",
                                          "suspended"
                                        ],
                                        "description": "Organization's status"
                                      },
                                      "kind": {
                                        "description": "Organization's kind",
                                        "type": "string",
                                        "enum": [
                                          "individual",
                                          "business"
                                        ]
                                      },
                                      "ownerId": {
                                        "type": "string",
                                        "description": "User's id who owns organization"
                                      },
                                      "noOfEmployees": {
                                        "type": "string",
                                        "description": "No of employees"
                                      },
                                      "monthlyPaymentVolume": {
                                        "type": "string",
                                        "description": "Monthly payment volume"
                                      },
                                      "addresses": {
                                        "description": "Withdrawal addresses",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Withdrawal address id"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Withdrawal address name"
                                            },
                                            "address": {
                                              "type": "string",
                                              "description": "Withdrawal address"
                                            },
                                            "chainId": {
                                              "type": "number",
                                              "example": 1,
                                              "description": "Withdrawal address chain id"
                                            },
                                            "isDefault": {
                                              "type": "boolean",
                                              "description": "Is default withdrawal address"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "name",
                                            "address",
                                            "chainId",
                                            "isDefault"
                                          ]
                                        }
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Organization's support email"
                                      },
                                      "phone": {
                                        "type": "string",
                                        "description": "Organization's support phone number"
                                      },
                                      "addressDetails": {
                                        "description": "Organization's business address",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "line1": {
                                                "type": "string"
                                              },
                                              "line2": {
                                                "type": "string"
                                              },
                                              "city": {
                                                "type": "string"
                                              },
                                              "state": {
                                                "type": "string"
                                              },
                                              "postalCode": {
                                                "type": "string"
                                              },
                                              "country": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "brandLogo": {
                                        "type": "string",
                                        "description": "Brand logo url"
                                      },
                                      "brandColor": {
                                        "type": "string",
                                        "description": "Brand color in hex format"
                                      },
                                      "supportUrl": {
                                        "type": "string",
                                        "description": "Organization's support url"
                                      },
                                      "termsUrl": {
                                        "type": "string",
                                        "description": "Organization's terms and conditions url"
                                      },
                                      "privacyUrl": {
                                        "type": "string",
                                        "description": "Organization's privacy policy url"
                                      },
                                      "websiteUrl": {
                                        "type": "string",
                                        "description": "Organization's website url"
                                      },
                                      "featureAccessRequests": {
                                        "description": "Feature access requests from organization",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "type",
                                      "status",
                                      "kind",
                                      "ownerId",
                                      "noOfEmployees",
                                      "monthlyPaymentVolume",
                                      "addresses",
                                      "brandLogo",
                                      "brandColor",
                                      "featureAccessRequests"
                                    ]
                                  }
                                ]
                              },
                              "user": {
                                "description": "User details",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "firstName": {
                                        "type": "string"
                                      },
                                      "lastName": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "profilePicture": {
                                        "type": "string"
                                      },
                                      "phone": {
                                        "type": "string"
                                      },
                                      "position": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "pending",
                                          "active",
                                          "suspended"
                                        ]
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "type": "object",
                                        "properties": {
                                          "introModal": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstName",
                                      "lastName",
                                      "role",
                                      "status"
                                    ]
                                  }
                                ]
                              },
                              "paymentSetting": {
                                "description": "Organization payment setting details",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "paymentMethodTypes": {
                                        "type": "array",
                                        "description": "A list of the types of payment methods",
                                        "example": "wallet",
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "superfluid",
                                            "wallet",
                                            "allowance_based_recurring",
                                            "stripe",
                                            "binance_pay"
                                          ]
                                        }
                                      },
                                      "allowedChains": {
                                        "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                                        "example": [
                                          {
                                            "chainId": 137
                                          }
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "chainId": {
                                              "type": "number",
                                              "example": 1
                                            },
                                            "blacklistCurrencies": {
                                              "type": "array",
                                              "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                                              "example": [
                                                "usdc"
                                              ],
                                              "items": {
                                                "type": "string",
                                                "enum": [
                                                  "usdc",
                                                  "usdt",
                                                  "dai",
                                                  "btc",
                                                  "eth",
                                                  "matic",
                                                  "bnb",
                                                  "sol",
                                                  "busd",
                                                  "food",
                                                  "tfi"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "chainId"
                                          ]
                                        }
                                      },
                                      "allowedCurrencies": {
                                        "type": "array",
                                        "description": "The list of currencies allowed for the payment.",
                                        "example": [
                                          "usdc",
                                          "usdt"
                                        ],
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "usdc",
                                            "usdt",
                                            "dai",
                                            "btc",
                                            "eth",
                                            "matic",
                                            "bnb",
                                            "sol",
                                            "busd",
                                            "food",
                                            "tfi"
                                          ]
                                        }
                                      },
                                      "preferredChainId": {
                                        "type": "number",
                                        "example": 1,
                                        "description": "The preferred chain's id"
                                      },
                                      "preferredCurrency": {
                                        "type": "string",
                                        "enum": [
                                          "usdc",
                                          "usdt",
                                          "dai",
                                          "btc",
                                          "eth",
                                          "matic",
                                          "bnb",
                                          "sol",
                                          "busd",
                                          "food",
                                          "tfi"
                                        ],
                                        "description": "The preferred currency for payment"
                                      },
                                      "allowSwap": {
                                        "type": "boolean",
                                        "description": "Whether the user can swap the payment currency",
                                        "default": false
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  }
                                ]
                              },
                              "webhookEndpoints": {
                                "description": "Organization webhook endpoints",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "line1": {
                                      "type": "string"
                                    },
                                    "line2": {
                                      "type": "string"
                                    },
                                    "city": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "withdrawalAddresses": {
                                "description": "Organization withdrawal addresses",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Withdrawal address id"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Withdrawal address name"
                                    },
                                    "address": {
                                      "type": "string",
                                      "description": "Withdrawal address"
                                    },
                                    "chainId": {
                                      "type": "number",
                                      "example": 1,
                                      "description": "Withdrawal address chain id"
                                    },
                                    "isDefault": {
                                      "type": "boolean",
                                      "description": "Is default withdrawal address"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Withdrawal address creation date"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "Withdrawal address update date"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "address",
                                    "chainId",
                                    "isDefault",
                                    "createdAt",
                                    "updatedAt"
                                  ]
                                }
                              },
                              "personalAccessToken": {
                                "description": "Organization personal access token to access organization' API",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "tokenIdentifier": {
                                        "type": "string"
                                      },
                                      "organizationId": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "token": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "tokenIdentifier",
                                      "organizationId",
                                      "userId",
                                      "createdAt",
                                      "updatedAt",
                                      "token"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "organization",
                              "user",
                              "paymentSetting",
                              "webhookEndpoints",
                              "withdrawalAddresses",
                              "personalAccessToken"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "statusCode",
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Partner"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Copperx API",
    "description": "Copperx APIs allows you to access to manage payments, transactions and more in a simple way. Our APIs are easy to use and provide an intuitive APIs for developers to create powerful applications.",
    "version": "pre-v0.0.1-beta.98",
    "contact": {
      "name": "Copperx",
      "url": "https://t.me/+bVxXaalfhF8wMDFl",
      "email": "support@copperx.io"
    }
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api.copperx.dev",
      "description": "Test"
    },
    {
      "url": "https://api.copperx.io",
      "description": "Production"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "StorageFileDto": {
        "type": "object",
        "properties": {
          "filePath": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "required": [
          "filePath",
          "imageUrl"
        ]
      },
      "ErrorDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object"
          },
          "statusCode": {
            "type": "number"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "statusCode",
          "error"
        ]
      },
      "UserAccountType": {
        "type": "string",
        "enum": [
          "email",
          "wallet"
        ]
      },
      "UserFlagsDto": {
        "type": "object",
        "properties": {
          "introModal": {
            "type": "boolean"
          }
        }
      },
      "UserStatus": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "suspended"
        ]
      },
      "OrganizationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "suspended"
        ]
      },
      "PaymentMethodType": {
        "type": "string",
        "enum": [
          "superfluid",
          "wallet",
          "allowance_based_recurring",
          "stripe",
          "binance_pay"
        ]
      },
      "CryptoCurrency": {
        "type": "string",
        "enum": [
          "usdc",
          "usdt",
          "dai",
          "btc",
          "eth",
          "matic",
          "bnb",
          "sol",
          "busd",
          "food",
          "tfi"
        ]
      },
      "PaymentSettingChainDto": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "number",
            "example": 1
          },
          "blacklistCurrencies": {
            "type": "array",
            "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
            "example": [
              "usdc"
            ],
            "items": {
              "type": "string",
              "enum": [
                "usdc",
                "usdt",
                "dai",
                "btc",
                "eth",
                "matic",
                "bnb",
                "sol",
                "busd",
                "food",
                "tfi"
              ]
            }
          }
        },
        "required": [
          "chainId"
        ]
      },
      "PaymentSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "paymentMethodTypes": {
            "type": "array",
            "description": "A list of the types of payment methods",
            "example": "wallet",
            "minItems": 1,
            "maxItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "superfluid",
                "wallet",
                "allowance_based_recurring",
                "stripe",
                "binance_pay"
              ]
            }
          },
          "allowedChains": {
            "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
            "example": [
              {
                "chainId": 137
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number",
                  "example": 1
                },
                "blacklistCurrencies": {
                  "type": "array",
                  "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                  "example": [
                    "usdc"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ]
                  }
                }
              },
              "required": [
                "chainId"
              ]
            }
          },
          "allowedCurrencies": {
            "type": "array",
            "description": "The list of currencies allowed for the payment.",
            "example": [
              "usdc",
              "usdt"
            ],
            "items": {
              "type": "string",
              "enum": [
                "usdc",
                "usdt",
                "dai",
                "btc",
                "eth",
                "matic",
                "bnb",
                "sol",
                "busd",
                "food",
                "tfi"
              ]
            }
          },
          "preferredChainId": {
            "type": "number",
            "example": 1,
            "description": "The preferred chain's id"
          },
          "preferredCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The preferred currency for payment"
          },
          "allowSwap": {
            "type": "boolean",
            "description": "Whether the user can swap the payment currency",
            "default": false
          }
        },
        "required": [
          "id"
        ]
      },
      "AuthOrganizationMinimalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "active",
              "suspended"
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "paymentSetting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "paymentMethodTypes": {
                "type": "array",
                "description": "A list of the types of payment methods",
                "example": "wallet",
                "minItems": 1,
                "maxItems": 1,
                "items": {
                  "type": "string",
                  "enum": [
                    "superfluid",
                    "wallet",
                    "allowance_based_recurring",
                    "stripe",
                    "binance_pay"
                  ]
                }
              },
              "allowedChains": {
                "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                "example": [
                  {
                    "chainId": 137
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "number",
                      "example": 1
                    },
                    "blacklistCurrencies": {
                      "type": "array",
                      "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                      "example": [
                        "usdc"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    }
                  },
                  "required": [
                    "chainId"
                  ]
                }
              },
              "allowedCurrencies": {
                "type": "array",
                "description": "The list of currencies allowed for the payment.",
                "example": [
                  "usdc",
                  "usdt"
                ],
                "items": {
                  "type": "string",
                  "enum": [
                    "usdc",
                    "usdt",
                    "dai",
                    "btc",
                    "eth",
                    "matic",
                    "bnb",
                    "sol",
                    "busd",
                    "food",
                    "tfi"
                  ]
                }
              },
              "preferredChainId": {
                "type": "number",
                "example": 1,
                "description": "The preferred chain's id"
              },
              "preferredCurrency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi"
                ],
                "description": "The preferred currency for payment"
              },
              "allowSwap": {
                "type": "boolean",
                "description": "Whether the user can swap the payment currency",
                "default": false
              }
            },
            "required": [
              "id"
            ]
          },
          "features": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "status",
          "ownerId"
        ]
      },
      "AuthUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "email",
              "wallet"
            ]
          },
          "profilePicture": {
            "type": "string"
          },
          "flags": {
            "type": "object",
            "properties": {
              "introModal": {
                "type": "boolean"
              }
            }
          },
          "phone": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "active",
              "suspended"
            ]
          },
          "organization": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "active",
                  "suspended"
                ]
              },
              "ownerId": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "paymentSetting": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "paymentMethodTypes": {
                    "type": "array",
                    "description": "A list of the types of payment methods",
                    "example": "wallet",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "wallet",
                        "allowance_based_recurring",
                        "stripe",
                        "binance_pay"
                      ]
                    }
                  },
                  "allowedChains": {
                    "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                    "example": [
                      {
                        "chainId": 137
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chainId": {
                          "type": "number",
                          "example": 1
                        },
                        "blacklistCurrencies": {
                          "type": "array",
                          "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                          "example": [
                            "usdc"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        }
                      },
                      "required": [
                        "chainId"
                      ]
                    }
                  },
                  "allowedCurrencies": {
                    "type": "array",
                    "description": "The list of currencies allowed for the payment.",
                    "example": [
                      "usdc",
                      "usdt"
                    ],
                    "items": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    }
                  },
                  "preferredChainId": {
                    "type": "number",
                    "example": 1,
                    "description": "The preferred chain's id"
                  },
                  "preferredCurrency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The preferred currency for payment"
                  },
                  "allowSwap": {
                    "type": "boolean",
                    "description": "Whether the user can swap the payment currency",
                    "default": false
                  }
                },
                "required": [
                  "id"
                ]
              },
              "features": {
                "type": "object"
              }
            },
            "required": [
              "id",
              "name",
              "type",
              "status",
              "ownerId"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "role",
          "accountType",
          "status",
          "organization"
        ]
      },
      "OrganizationKind": {
        "type": "string",
        "enum": [
          "individual",
          "business"
        ]
      },
      "WithdrawalAddressMinimalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Withdrawal address id"
          },
          "name": {
            "type": "string",
            "description": "Withdrawal address name"
          },
          "address": {
            "type": "string",
            "description": "Withdrawal address"
          },
          "chainId": {
            "type": "number",
            "example": 1,
            "description": "Withdrawal address chain id"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Is default withdrawal address"
          }
        },
        "required": [
          "id",
          "name",
          "address",
          "chainId",
          "isDefault"
        ]
      },
      "AddressDetailDto": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "OrganizationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Organization's name"
          },
          "type": {
            "type": "string",
            "description": "Organization's type"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "active",
              "suspended"
            ],
            "description": "Organization's status"
          },
          "kind": {
            "description": "Organization's kind",
            "type": "string",
            "enum": [
              "individual",
              "business"
            ]
          },
          "ownerId": {
            "type": "string",
            "description": "User's id who owns organization"
          },
          "noOfEmployees": {
            "type": "string",
            "description": "No of employees"
          },
          "monthlyPaymentVolume": {
            "type": "string",
            "description": "Monthly payment volume"
          },
          "addresses": {
            "description": "Withdrawal addresses",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Withdrawal address id"
                },
                "name": {
                  "type": "string",
                  "description": "Withdrawal address name"
                },
                "address": {
                  "type": "string",
                  "description": "Withdrawal address"
                },
                "chainId": {
                  "type": "number",
                  "example": 1,
                  "description": "Withdrawal address chain id"
                },
                "isDefault": {
                  "type": "boolean",
                  "description": "Is default withdrawal address"
                }
              },
              "required": [
                "id",
                "name",
                "address",
                "chainId",
                "isDefault"
              ]
            }
          },
          "email": {
            "type": "string",
            "description": "Organization's support email"
          },
          "phone": {
            "type": "string",
            "description": "Organization's support phone number"
          },
          "addressDetails": {
            "description": "Organization's business address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "brandLogo": {
            "type": "string",
            "description": "Brand logo url"
          },
          "brandColor": {
            "type": "string",
            "description": "Brand color in hex format"
          },
          "supportUrl": {
            "type": "string",
            "description": "Organization's support url"
          },
          "termsUrl": {
            "type": "string",
            "description": "Organization's terms and conditions url"
          },
          "privacyUrl": {
            "type": "string",
            "description": "Organization's privacy policy url"
          },
          "websiteUrl": {
            "type": "string",
            "description": "Organization's website url"
          },
          "featureAccessRequests": {
            "description": "Feature access requests from organization",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "status",
          "kind",
          "ownerId",
          "noOfEmployees",
          "monthlyPaymentVolume",
          "addresses",
          "brandLogo",
          "brandColor",
          "featureAccessRequests"
        ]
      },
      "UpdateBrandDto": {
        "type": "object",
        "properties": {
          "brandLogo": {
            "type": "string",
            "format": "binary",
            "description": "Brand logo file"
          },
          "brandColor": {
            "type": "string",
            "description": "Brand color in hex format"
          }
        },
        "required": [
          "brandColor"
        ]
      },
      "SuccessDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "message",
          "statusCode"
        ]
      },
      "ListDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "active",
              "suspended"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "flags": {
            "type": "object",
            "properties": {
              "introModal": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "role",
          "status"
        ]
      },
      "UpdateUserRole": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          }
        },
        "required": [
          "role"
        ]
      },
      "WithdrawalAddressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Withdrawal address id"
          },
          "name": {
            "type": "string",
            "description": "Withdrawal address name"
          },
          "address": {
            "type": "string",
            "description": "Withdrawal address"
          },
          "chainId": {
            "type": "number",
            "example": 1,
            "description": "Withdrawal address chain id"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Is default withdrawal address"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Withdrawal address creation date"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Withdrawal address update date"
          }
        },
        "required": [
          "id",
          "name",
          "address",
          "chainId",
          "isDefault",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateWithdrawalAddressDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Withdrawal address name"
          },
          "address": {
            "type": "string",
            "description": "Withdrawal address"
          },
          "chainId": {
            "type": "number",
            "example": 1,
            "description": "Withdrawal address chain id"
          }
        },
        "required": [
          "name",
          "address",
          "chainId"
        ]
      },
      "UpdateWithdrawalAddressDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Withdrawal address name"
          },
          "address": {
            "type": "string",
            "description": "Withdrawal address"
          }
        },
        "required": [
          "name",
          "address"
        ]
      },
      "InvoiceNumberingScheme": {
        "type": "string",
        "enum": [
          "merchant_level",
          "customer_level"
        ]
      },
      "InvoiceSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "numberingScheme": {
            "description": "The preferred numbering scheme for invoice",
            "default": "customer_level",
            "type": "string",
            "enum": [
              "merchant_level",
              "customer_level"
            ]
          },
          "invoicePrefix": {
            "type": "string",
            "description": "The preferred invoice id prefix"
          },
          "nextInvoiceSequence": {
            "type": "number",
            "example": 1,
            "description": "The next invoice starting sequence"
          },
          "description": {
            "type": "string",
            "description": "The default invoice description"
          },
          "footer": {
            "type": "string",
            "description": "The default invoice footer"
          }
        },
        "required": [
          "id"
        ]
      },
      "InvitationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "accepted",
          "rejected"
        ]
      },
      "UserInviteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "inviteUrl": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "accepted",
              "rejected"
            ]
          },
          "expireAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "role",
          "organizationId",
          "inviteUrl",
          "status",
          "expireAt"
        ]
      },
      "InviteUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "role"
        ]
      },
      "CheckoutSessionMode": {
        "type": "string",
        "enum": [
          "payment",
          "subscription"
        ]
      },
      "CustomerCreation": {
        "type": "string",
        "enum": [
          "if_required",
          "always"
        ]
      },
      "CustomerUpdateMode": {
        "type": "string",
        "enum": [
          "auto",
          "never"
        ]
      },
      "CheckoutSessionCustomerUpdateDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "enum": [
              "auto",
              "never"
            ]
          },
          "name": {
            "type": "string",
            "enum": [
              "auto",
              "never"
            ]
          },
          "shipping": {
            "type": "string",
            "enum": [
              "auto",
              "never"
            ]
          }
        }
      },
      "SubmitType": {
        "type": "string",
        "enum": [
          "pay",
          "book",
          "donate"
        ]
      },
      "CustomFieldType": {
        "type": "string",
        "enum": [
          "text",
          "numeric",
          "dropdown"
        ]
      },
      "CustomFieldLabelType": {
        "type": "string",
        "enum": [
          "custom"
        ]
      },
      "CustomFieldLabelDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "custom"
            ]
          },
          "custom": {
            "type": "string"
          }
        },
        "required": [
          "custom"
        ]
      },
      "InputFieldDto": {
        "type": "object",
        "properties": {
          "maximumLength": {
            "type": "number",
            "example": 1
          },
          "minimumLength": {
            "type": "number",
            "example": 1
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "DropdownFieldOptionsDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "value"
        ]
      },
      "DropdownFieldDto": {
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "label",
                "value"
              ]
            }
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "CheckoutSessionCustomFieldsDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "numeric",
              "dropdown"
            ]
          },
          "label": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "custom"
                ]
              },
              "custom": {
                "type": "string"
              }
            },
            "required": [
              "custom"
            ]
          },
          "optional": {
            "type": "boolean",
            "default": false
          },
          "text": {
            "type": "object",
            "properties": {
              "maximumLength": {
                "type": "number",
                "example": 1
              },
              "minimumLength": {
                "type": "number",
                "example": 1
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "value"
            ]
          },
          "numeric": {
            "type": "object",
            "properties": {
              "maximumLength": {
                "type": "number",
                "example": 1
              },
              "minimumLength": {
                "type": "number",
                "example": 1
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "value"
            ]
          },
          "dropdown": {
            "type": "object",
            "properties": {
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "label",
                    "value"
                  ]
                }
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "value"
            ]
          }
        },
        "required": [
          "key",
          "type",
          "label",
          "optional"
        ]
      },
      "CheckoutSessionCustomFieldDto": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "text",
                    "numeric",
                    "dropdown"
                  ]
                },
                "label": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "custom"
                      ]
                    },
                    "custom": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "custom"
                  ]
                },
                "optional": {
                  "type": "boolean",
                  "default": false
                },
                "text": {
                  "type": "object",
                  "properties": {
                    "maximumLength": {
                      "type": "number",
                      "example": 1
                    },
                    "minimumLength": {
                      "type": "number",
                      "example": 1
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "numeric": {
                  "type": "object",
                  "properties": {
                    "maximumLength": {
                      "type": "number",
                      "example": 1
                    },
                    "minimumLength": {
                      "type": "number",
                      "example": 1
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "dropdown": {
                  "type": "object",
                  "properties": {
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "label",
                          "value"
                        ]
                      }
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ]
                }
              },
              "required": [
                "key",
                "type",
                "label",
                "optional"
              ]
            }
          }
        }
      },
      "AfterCompletionLink": {
        "type": "string",
        "enum": [
          "redirect",
          "hosted_confirmation"
        ]
      },
      "CreateTaxIdDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "CreateTaxIdsDto": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CreateCheckoutSessionCustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name"
          },
          "address": {
            "type": "object",
            "properties": {
              "line1": {
                "type": "string"
              },
              "line2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "taxIds": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Interval": {
        "type": "string",
        "enum": [
          "day",
          "week",
          "month",
          "year"
        ]
      },
      "EntityVisibility": {
        "type": "string",
        "enum": [
          10,
          20
        ]
      },
      "ProductDataDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the product. Displayed on the checkout page"
          },
          "description": {
            "type": "string",
            "description": "The description of the product. Displayed on the checkout page"
          },
          "images": {
            "maxItems": 8,
            "description": "The url of product images. Displayed on the checkout page",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitLabel": {
            "type": "string",
            "description": "The label of the unit of the product. Displayed on the checkout page"
          },
          "url": {
            "type": "string",
            "description": "The url of the product"
          },
          "metadata": {
            "type": "object",
            "description": "The metadata of the product"
          },
          "visibility": {
            "description": "The visibility of the product",
            "type": "string",
            "enum": [
              10,
              20
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "PriceType": {
        "type": "string",
        "enum": [
          "one_time",
          "recurring",
          "streaming"
        ]
      },
      "PriceDataDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The currency symbol"
          },
          "interval": {
            "description": "The interval at which to bill for this price. Only required for subscriptions",
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "intervalCount": {
            "type": "number",
            "example": 1,
            "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
          },
          "unitAmount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The unit amount in 8 decimals, represented as a whole integer"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "The id of the product for which this price is associated"
          },
          "productData": {
            "description": "The product data to be created to link with this price",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product. Displayed on the checkout page"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the product. Displayed on the checkout page"
                  },
                  "images": {
                    "maxItems": 8,
                    "description": "The url of product images. Displayed on the checkout page",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unitLabel": {
                    "type": "string",
                    "description": "The label of the unit of the product. Displayed on the checkout page"
                  },
                  "url": {
                    "type": "string",
                    "description": "The url of the product"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the product"
                  },
                  "visibility": {
                    "description": "The visibility of the product",
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  }
                },
                "required": [
                  "name"
                ]
              }
            ]
          },
          "type": {
            "description": "The type of the price",
            "type": "string",
            "enum": [
              "one_time",
              "recurring",
              "streaming"
            ]
          }
        },
        "required": [
          "currency",
          "unitAmount"
        ]
      },
      "CreateCheckoutSessionLineItemDto": {
        "type": "object",
        "properties": {
          "priceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "The id of the price to use in checkout session"
          },
          "priceData": {
            "description": "The price data to be created to use in checkout session",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The currency symbol"
                  },
                  "interval": {
                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                    "type": "string",
                    "enum": [
                      "day",
                      "week",
                      "month",
                      "year"
                    ]
                  },
                  "intervalCount": {
                    "type": "number",
                    "example": 1,
                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                  },
                  "unitAmount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The unit amount in 8 decimals, represented as a whole integer"
                  },
                  "productId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "The id of the product for which this price is associated"
                  },
                  "productData": {
                    "description": "The product data to be created to link with this price",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the product. Displayed on the checkout page"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the product. Displayed on the checkout page"
                          },
                          "images": {
                            "maxItems": 8,
                            "description": "The url of product images. Displayed on the checkout page",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "unitLabel": {
                            "type": "string",
                            "description": "The label of the unit of the product. Displayed on the checkout page"
                          },
                          "url": {
                            "type": "string",
                            "description": "The url of the product"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "The metadata of the product"
                          },
                          "visibility": {
                            "description": "The visibility of the product",
                            "type": "string",
                            "enum": [
                              10,
                              20
                            ]
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    ]
                  },
                  "type": {
                    "description": "The type of the price",
                    "type": "string",
                    "enum": [
                      "one_time",
                      "recurring",
                      "streaming"
                    ]
                  }
                },
                "required": [
                  "currency",
                  "unitAmount"
                ]
              }
            ]
          },
          "quantity": {
            "type": "number",
            "example": 1,
            "default": 1,
            "description": "The quantity of the line item"
          },
          "periodStart": {
            "format": "date-time",
            "type": "string"
          },
          "periodEnd": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "CreateCheckoutSessionPriceItemsDto": {
        "type": "object",
        "properties": {
          "data": {
            "minItems": 1,
            "maxItems": 1,
            "description": "The line items to be used in checkout session",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "priceId": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                  "description": "The id of the price to use in checkout session"
                },
                "priceData": {
                  "description": "The price data to be created to use in checkout session",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The currency symbol"
                        },
                        "interval": {
                          "description": "The interval at which to bill for this price. Only required for subscriptions",
                          "type": "string",
                          "enum": [
                            "day",
                            "week",
                            "month",
                            "year"
                          ]
                        },
                        "intervalCount": {
                          "type": "number",
                          "example": 1,
                          "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                        },
                        "unitAmount": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The unit amount in 8 decimals, represented as a whole integer"
                        },
                        "productId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "The id of the product for which this price is associated"
                        },
                        "productData": {
                          "description": "The product data to be created to link with this price",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the product. Displayed on the checkout page"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description of the product. Displayed on the checkout page"
                                },
                                "images": {
                                  "maxItems": 8,
                                  "description": "The url of product images. Displayed on the checkout page",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "unitLabel": {
                                  "type": "string",
                                  "description": "The label of the unit of the product. Displayed on the checkout page"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The url of the product"
                                },
                                "metadata": {
                                  "type": "object",
                                  "description": "The metadata of the product"
                                },
                                "visibility": {
                                  "description": "The visibility of the product",
                                  "type": "string",
                                  "enum": [
                                    10,
                                    20
                                  ]
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          ]
                        },
                        "type": {
                          "description": "The type of the price",
                          "type": "string",
                          "enum": [
                            "one_time",
                            "recurring",
                            "streaming"
                          ]
                        }
                      },
                      "required": [
                        "currency",
                        "unitAmount"
                      ]
                    }
                  ]
                },
                "quantity": {
                  "type": "number",
                  "example": 1,
                  "default": 1,
                  "description": "The quantity of the line item"
                },
                "periodStart": {
                  "format": "date-time",
                  "type": "string"
                },
                "periodEnd": {
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateCheckoutSessionPaymentSettingDto": {
        "type": "object",
        "properties": {
          "allowedChains": {
            "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
            "example": [
              {
                "chainId": 137
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number",
                  "example": 1
                },
                "blacklistCurrencies": {
                  "type": "array",
                  "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                  "example": [
                    "usdc"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ]
                  }
                }
              },
              "required": [
                "chainId"
              ]
            }
          },
          "preferredChainId": {
            "type": "number",
            "example": 1,
            "description": "The preferred chain's id"
          },
          "allowSwap": {
            "type": "boolean",
            "description": "Whether the user can swap the payment currency",
            "default": false
          },
          "allowFiatPayment": {
            "type": "boolean",
            "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
          }
        }
      },
      "CreateSessionDto": {
        "type": "object",
        "properties": {
          "mode": {
            "description": "The mode of the Checkout Session.",
            "example": "payment",
            "type": "string",
            "enum": [
              "payment",
              "subscription"
            ]
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the customer if you want to associate the session with a customer"
          },
          "clientReferenceId": {
            "type": "string",
            "description": "Unique ID string used to identify the session in your backend. This can be your payment ID, cart ID, or similar used to link this Checkout Session with your internal system."
          },
          "customerCreation": {
            "description": "Whether to create a customer for the session. If required, a customer will be created for subsequent payments",
            "type": "string",
            "enum": [
              "if_required",
              "always"
            ]
          },
          "customerUpdate": {
            "description": "The customer update settings to use for this checkout to update existing customer details",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "never"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "never"
                    ]
                  },
                  "shipping": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "never"
                    ]
                  }
                }
              }
            ]
          },
          "submitType": {
            "default": "pay",
            "description": "The type of submit button to display on the Checkout page",
            "type": "string",
            "enum": [
              "pay",
              "book",
              "donate"
            ]
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to a Checkout Session object"
          },
          "nameCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's name. Default: false"
          },
          "emailCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's email address. Default: false"
          },
          "phoneNumberCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's phone number Default: false"
          },
          "shippingAddressCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's shipping address. Default: false"
          },
          "billingAddressCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's billing address. Default: false"
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "numeric",
                        "dropdown"
                      ]
                    },
                    "label": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "custom"
                          ]
                        },
                        "custom": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "custom"
                      ]
                    },
                    "optional": {
                      "type": "boolean",
                      "default": false
                    },
                    "text": {
                      "type": "object",
                      "properties": {
                        "maximumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "minimumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "numeric": {
                      "type": "object",
                      "properties": {
                        "maximumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "minimumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "dropdown": {
                      "type": "object",
                      "properties": {
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "label",
                              "value"
                            ]
                          }
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    }
                  },
                  "required": [
                    "key",
                    "type",
                    "label",
                    "optional"
                  ]
                }
              }
            }
          },
          "afterCompletion": {
            "description": "The action to take after the payment is completed. You can choose to redirect user to your application or use the default payment confirmation page provided by Copperx",
            "type": "string",
            "enum": [
              "redirect",
              "hosted_confirmation"
            ]
          },
          "afterCompletionConfirmMsg": {
            "type": "string",
            "description": "The message to show after successful payment. Only applicable when `afterCompletion` is set to `hosted_confirmation`"
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "The time at which the session will expire. Default: 1 Hour"
          },
          "successUrl": {
            "type": "string",
            "description": "The URL to redirect the customer to after payment is completed. Only applicable when `afterCompletion` is set to `redirect`"
          },
          "cancelUrl": {
            "type": "string",
            "description": "The URL to redirect the customer to if they decide to cancel payment"
          },
          "customerData": {
            "description": "The checkout sessions's customer data to be prefilled",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "taxIds": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "lineItems": {
            "description": "The line items to be used in checkout session. Line items are the individual prices that the customer will be charged for",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "data": {
                    "minItems": 1,
                    "maxItems": 1,
                    "description": "The line items to be used in checkout session",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "priceId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "The id of the price to use in checkout session"
                        },
                        "priceData": {
                          "description": "The price data to be created to use in checkout session",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "currency": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi"
                                  ],
                                  "description": "The currency symbol"
                                },
                                "interval": {
                                  "description": "The interval at which to bill for this price. Only required for subscriptions",
                                  "type": "string",
                                  "enum": [
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                  ]
                                },
                                "intervalCount": {
                                  "type": "number",
                                  "example": 1,
                                  "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                                },
                                "unitAmount": {
                                  "format": "int64",
                                  "type": "integer",
                                  "example": "9223372036854775807",
                                  "description": "The unit amount in 8 decimals, represented as a whole integer"
                                },
                                "productId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                  "description": "The id of the product for which this price is associated"
                                },
                                "productData": {
                                  "description": "The product data to be created to link with this price",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the product. Displayed on the checkout page"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description of the product. Displayed on the checkout page"
                                        },
                                        "images": {
                                          "maxItems": 8,
                                          "description": "The url of product images. Displayed on the checkout page",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "unitLabel": {
                                          "type": "string",
                                          "description": "The label of the unit of the product. Displayed on the checkout page"
                                        },
                                        "url": {
                                          "type": "string",
                                          "description": "The url of the product"
                                        },
                                        "metadata": {
                                          "type": "object",
                                          "description": "The metadata of the product"
                                        },
                                        "visibility": {
                                          "description": "The visibility of the product",
                                          "type": "string",
                                          "enum": [
                                            10,
                                            20
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  ]
                                },
                                "type": {
                                  "description": "The type of the price",
                                  "type": "string",
                                  "enum": [
                                    "one_time",
                                    "recurring",
                                    "streaming"
                                  ]
                                }
                              },
                              "required": [
                                "currency",
                                "unitAmount"
                              ]
                            }
                          ]
                        },
                        "quantity": {
                          "type": "number",
                          "example": 1,
                          "default": 1,
                          "description": "The quantity of the line item"
                        },
                        "periodStart": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "periodEnd": {
                          "format": "date-time",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            ]
          },
          "paymentSetting": {
            "description": "The payment method settings to use for this checkout's payment",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "allowedChains": {
                    "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                    "example": [
                      {
                        "chainId": 137
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chainId": {
                          "type": "number",
                          "example": 1
                        },
                        "blacklistCurrencies": {
                          "type": "array",
                          "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                          "example": [
                            "usdc"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        }
                      },
                      "required": [
                        "chainId"
                      ]
                    }
                  },
                  "preferredChainId": {
                    "type": "number",
                    "example": 1,
                    "description": "The preferred chain's id"
                  },
                  "allowSwap": {
                    "type": "boolean",
                    "description": "Whether the user can swap the payment currency",
                    "default": false
                  },
                  "allowFiatPayment": {
                    "type": "boolean",
                    "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
                  }
                }
              }
            ]
          }
        },
        "required": [
          "successUrl",
          "lineItems"
        ]
      },
      "Currency": {
        "type": "string",
        "enum": [
          "usdc",
          "usdt",
          "dai",
          "btc",
          "eth",
          "matic",
          "bnb",
          "sol",
          "busd",
          "food",
          "tfi",
          "usd",
          "inr"
        ]
      },
      "DiscountAmountDetailDto": {
        "type": "object",
        "properties": {
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The amount of the discount"
          },
          "couponId": {
            "type": "string",
            "description": "The coupon id of the discount"
          }
        },
        "required": [
          "amount",
          "couponId"
        ]
      },
      "TaxAmountDetailDto": {
        "type": "object",
        "properties": {
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The amount of the tax"
          },
          "taxId": {
            "type": "string",
            "description": "The tax id of the tax"
          }
        },
        "required": [
          "amount",
          "taxId"
        ]
      },
      "CheckoutSessionAmountDetailDto": {
        "type": "object",
        "properties": {
          "currency": {
            "description": "The currency of the payment",
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi",
              "usd",
              "inr"
            ]
          },
          "amountTotal": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The total amount of the payment after discounts and taxes"
          },
          "amountSubtotal": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The total amount of the payment before discounts and taxes"
          },
          "amountDiscount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The total amount of the payment discount"
          },
          "amountTax": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The total amount of the payment tax"
          },
          "discountAmounts": {
            "description": "The list of discount amounts",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "format": "int64",
                  "type": "integer",
                  "example": "9223372036854775807",
                  "description": "The amount of the discount"
                },
                "couponId": {
                  "type": "string",
                  "description": "The coupon id of the discount"
                }
              },
              "required": [
                "amount",
                "couponId"
              ]
            }
          },
          "taxAmounts": {
            "description": "The list of tax amounts",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "format": "int64",
                  "type": "integer",
                  "example": "9223372036854775807",
                  "description": "The amount of the tax"
                },
                "taxId": {
                  "type": "string",
                  "description": "The tax id of the tax"
                }
              },
              "required": [
                "amount",
                "taxId"
              ]
            }
          }
        },
        "required": [
          "currency",
          "amountTotal",
          "amountSubtotal",
          "amountDiscount",
          "amountTax",
          "discountAmounts",
          "taxAmounts"
        ]
      },
      "CheckoutSessionPaymentSettingDto": {
        "type": "object",
        "properties": {
          "paymentMethodTypes": {
            "type": "array",
            "description": "A list of the types of payment methods",
            "example": "wallet",
            "minItems": 1,
            "maxItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "superfluid",
                "wallet",
                "allowance_based_recurring",
                "stripe",
                "binance_pay"
              ]
            }
          },
          "allowedChains": {
            "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
            "example": [
              {
                "chainId": 137
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number",
                  "example": 1
                },
                "blacklistCurrencies": {
                  "type": "array",
                  "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                  "example": [
                    "usdc"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ]
                  }
                }
              },
              "required": [
                "chainId"
              ]
            }
          },
          "preferredChainId": {
            "type": "number",
            "example": 1,
            "description": "The preferred chain's id"
          },
          "allowSwap": {
            "type": "boolean",
            "description": "Whether the user can swap the payment currency",
            "default": false
          },
          "allowFiatPayment": {
            "type": "boolean",
            "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
          }
        }
      },
      "CheckoutSessionStatus": {
        "type": "string",
        "enum": [
          "open",
          "complete",
          "incomplete",
          "expired"
        ]
      },
      "PaymentStatus": {
        "type": "string",
        "enum": [
          "unpaid",
          "paid"
        ]
      },
      "FullAddressDetailDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name"
          },
          "email": {
            "type": "string",
            "description": "The email"
          },
          "phone": {
            "type": "string",
            "description": "The phone"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name"
          },
          "address": {
            "description": "The address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "TaxIdDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          }
        },
        "required": [
          "id",
          "customerId"
        ]
      },
      "TaxIdsDto": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                }
              },
              "required": [
                "id",
                "customerId"
              ]
            }
          }
        }
      },
      "CustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name"
          },
          "email": {
            "type": "string",
            "description": "The email"
          },
          "phone": {
            "type": "string",
            "description": "The phone"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name"
          },
          "address": {
            "description": "The address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "Customer's id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Customer's created at"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Customer's updated at"
          },
          "customerReferenceId": {
            "type": "string",
            "description": "Customer's reference id"
          },
          "shipping": {
            "description": "Customer's shipping address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "taxIds": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    }
                  },
                  "required": [
                    "id",
                    "customerId"
                  ]
                }
              }
            }
          },
          "visibility": {
            "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
            "type": "string",
            "enum": [
              10,
              20
            ]
          },
          "metadata": {
            "type": "object",
            "description": "Customer's metadata"
          },
          "customerNumber": {
            "type": "string",
            "description": "Customer number assigned by the system"
          }
        },
        "required": [
          "id",
          "customerNumber"
        ]
      },
      "CheckoutSessionCustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name"
          },
          "address": {
            "type": "object",
            "properties": {
              "line1": {
                "type": "string"
              },
              "line2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "taxIds": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                    }
                  },
                  "required": [
                    "id",
                    "customerId"
                  ]
                }
              }
            }
          }
        }
      },
      "BillingScheme": {
        "type": "string",
        "enum": [
          "per_unit"
        ]
      },
      "RecurringUsageType": {
        "type": "string",
        "enum": [
          "licensed"
        ]
      },
      "PublicProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the product. Displayed on the checkout page"
          },
          "description": {
            "type": "string",
            "description": "The description of the product. Displayed on the checkout page"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the product is currently active"
          },
          "images": {
            "maxItems": 8,
            "description": "The url of product images. Displayed on the checkout page",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publicImages": {
            "description": "Product images with absolute public url",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitLabel": {
            "type": "string",
            "description": "The label of the unit of the product. Displayed on the checkout page"
          },
          "url": {
            "type": "string",
            "description": "The url of the product"
          },
          "defaultPriceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "Product's default price id"
          },
          "metadata": {
            "type": "object",
            "description": "The metadata of the product"
          },
          "visibility": {
            "description": "The visibility of the product",
            "type": "string",
            "enum": [
              10,
              20
            ]
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "PublicPriceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "billingScheme": {
            "description": "The billing scheme to use for this price",
            "type": "string",
            "enum": [
              "per_unit"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The currency symbol"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "Product's id"
          },
          "interval": {
            "description": "The interval at which to bill for this price. Only required for subscriptions",
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "intervalCount": {
            "type": "number",
            "example": 1,
            "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the price is currently active"
          },
          "usageType": {
            "description": "The usage type of the price.",
            "type": "string",
            "enum": [
              "licensed"
            ]
          },
          "type": {
            "description": "The type of the price",
            "type": "string",
            "enum": [
              "one_time",
              "recurring",
              "streaming"
            ]
          },
          "unitAmount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
          },
          "unitAmountDecimal": {
            "type": "string"
          },
          "customUnitMax": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
          },
          "customUnitMin": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
          },
          "customPreset": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
          },
          "customUnitAmountSuggestions": {
            "description": "Amount suggestions for this price. Only if unit amount is not provided",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "product": {
            "description": "The product this price belongs to",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the product. Displayed on the checkout page"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the product. Displayed on the checkout page"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the product is currently active"
                  },
                  "images": {
                    "maxItems": 8,
                    "description": "The url of product images. Displayed on the checkout page",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "publicImages": {
                    "description": "Product images with absolute public url",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unitLabel": {
                    "type": "string",
                    "description": "The label of the unit of the product. Displayed on the checkout page"
                  },
                  "url": {
                    "type": "string",
                    "description": "The url of the product"
                  },
                  "defaultPriceId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "Product's default price id"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the product"
                  },
                  "visibility": {
                    "description": "The visibility of the product",
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            ]
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          },
          "visibility": {
            "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
            "type": "string",
            "enum": [
              10,
              20
            ]
          }
        },
        "required": [
          "id",
          "currency",
          "productId",
          "type",
          "product"
        ]
      },
      "CheckoutSessionPriceItemDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "price": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "billingScheme": {
                "description": "The billing scheme to use for this price",
                "type": "string",
                "enum": [
                  "per_unit"
                ]
              },
              "currency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi"
                ],
                "description": "The currency symbol"
              },
              "productId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                "description": "Product's id"
              },
              "interval": {
                "description": "The interval at which to bill for this price. Only required for subscriptions",
                "type": "string",
                "enum": [
                  "day",
                  "week",
                  "month",
                  "year"
                ]
              },
              "intervalCount": {
                "type": "number",
                "example": 1,
                "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
              },
              "isActive": {
                "type": "boolean",
                "description": "Whether the price is currently active"
              },
              "usageType": {
                "description": "The usage type of the price.",
                "type": "string",
                "enum": [
                  "licensed"
                ]
              },
              "type": {
                "description": "The type of the price",
                "type": "string",
                "enum": [
                  "one_time",
                  "recurring",
                  "streaming"
                ]
              },
              "unitAmount": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
              },
              "unitAmountDecimal": {
                "type": "string"
              },
              "customUnitMax": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
              },
              "customUnitMin": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
              },
              "customPreset": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
              },
              "customUnitAmountSuggestions": {
                "description": "Amount suggestions for this price. Only if unit amount is not provided",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "product": {
                "description": "The product this price belongs to",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the product. Displayed on the checkout page"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the product. Displayed on the checkout page"
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "Whether the product is currently active"
                      },
                      "images": {
                        "maxItems": 8,
                        "description": "The url of product images. Displayed on the checkout page",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "publicImages": {
                        "description": "Product images with absolute public url",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "unitLabel": {
                        "type": "string",
                        "description": "The label of the unit of the product. Displayed on the checkout page"
                      },
                      "url": {
                        "type": "string",
                        "description": "The url of the product"
                      },
                      "defaultPriceId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                        "description": "Product's default price id"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "The metadata of the product"
                      },
                      "visibility": {
                        "description": "The visibility of the product",
                        "type": "string",
                        "enum": [
                          10,
                          20
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                ]
              },
              "metadata": {
                "type": "object",
                "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
              },
              "visibility": {
                "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                "type": "string",
                "enum": [
                  10,
                  20
                ]
              }
            },
            "required": [
              "id",
              "currency",
              "productId",
              "type",
              "product"
            ]
          }
        },
        "required": [
          "price"
        ]
      },
      "CheckoutSessionPriceItemsDto": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingScheme": {
                      "description": "The billing scheme to use for this price",
                      "type": "string",
                      "enum": [
                        "per_unit"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "The currency symbol"
                    },
                    "productId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's id"
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the price is currently active"
                    },
                    "usageType": {
                      "description": "The usage type of the price.",
                      "type": "string",
                      "enum": [
                        "licensed"
                      ]
                    },
                    "type": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "unitAmount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                    },
                    "unitAmountDecimal": {
                      "type": "string"
                    },
                    "customUnitMax": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customUnitMin": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customPreset": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                    },
                    "customUnitAmountSuggestions": {
                      "description": "Amount suggestions for this price. Only if unit amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product": {
                      "description": "The product this price belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product. Displayed on the checkout page"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the product. Displayed on the checkout page"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the product is currently active"
                            },
                            "images": {
                              "maxItems": 8,
                              "description": "The url of product images. Displayed on the checkout page",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "publicImages": {
                              "description": "Product images with absolute public url",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "unitLabel": {
                              "type": "string",
                              "description": "The label of the unit of the product. Displayed on the checkout page"
                            },
                            "url": {
                              "type": "string",
                              "description": "The url of the product"
                            },
                            "defaultPriceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's default price id"
                            },
                            "metadata": {
                              "type": "object",
                              "description": "The metadata of the product"
                            },
                            "visibility": {
                              "description": "The visibility of the product",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "visibility": {
                      "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "productId",
                    "type",
                    "product"
                  ]
                }
              },
              "required": [
                "price"
              ]
            }
          }
        }
      },
      "SuperTokenDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "SuperToken's address"
          },
          "decimals": {
            "type": "number",
            "example": 1
          },
          "symbol": {
            "type": "string",
            "description": "SuperToken's symbol"
          }
        },
        "required": [
          "address",
          "decimals",
          "symbol"
        ]
      },
      "ChainType": {
        "type": "string",
        "enum": [
          "evm",
          "solana",
          "stripe",
          "binance_pay"
        ]
      },
      "ChainSlimDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Chain id"
          },
          "name": {
            "type": "string",
            "description": "Chain name"
          },
          "icon": {
            "type": "string",
            "description": "Chain icon"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi",
              "usd",
              "inr"
            ],
            "description": "Chain currency symbol"
          },
          "blockExplorerTransactionUrl": {
            "type": "string",
            "description": "Chain block explorer transaction url"
          },
          "blockExplorerName": {
            "type": "string",
            "description": "Chain block explorer name"
          },
          "type": {
            "description": "Chain type",
            "type": "string",
            "enum": [
              "evm",
              "solana",
              "stripe",
              "binance_pay"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "icon",
          "currency",
          "blockExplorerTransactionUrl",
          "blockExplorerName",
          "type"
        ]
      },
      "CheckoutSessionAssetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "chainId": {
            "type": "number",
            "example": 1
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi",
              "usd",
              "inr"
            ]
          },
          "symbol": {
            "type": "string"
          },
          "decimals": {
            "type": "number",
            "example": 1
          },
          "coingeckoId": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          },
          "superToken": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "SuperToken's address"
              },
              "decimals": {
                "type": "number",
                "example": 1
              },
              "symbol": {
                "type": "string",
                "description": "SuperToken's symbol"
              }
            },
            "required": [
              "address",
              "decimals",
              "symbol"
            ]
          },
          "chain": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1,
                "description": "Chain id"
              },
              "name": {
                "type": "string",
                "description": "Chain name"
              },
              "icon": {
                "type": "string",
                "description": "Chain icon"
              },
              "currency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi",
                  "usd",
                  "inr"
                ],
                "description": "Chain currency symbol"
              },
              "blockExplorerTransactionUrl": {
                "type": "string",
                "description": "Chain block explorer transaction url"
              },
              "blockExplorerName": {
                "type": "string",
                "description": "Chain block explorer name"
              },
              "type": {
                "description": "Chain type",
                "type": "string",
                "enum": [
                  "evm",
                  "solana",
                  "stripe",
                  "binance_pay"
                ]
              }
            },
            "required": [
              "id",
              "name",
              "icon",
              "currency",
              "blockExplorerTransactionUrl",
              "blockExplorerName",
              "type"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "address",
          "chainId",
          "currency",
          "symbol",
          "decimals",
          "isPublic",
          "chain"
        ]
      },
      "CheckoutSessionAddressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "checkoutSessionId": {
            "type": "string"
          },
          "asset": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "chainId": {
                "type": "number",
                "example": 1
              },
              "currency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi",
                  "usd",
                  "inr"
                ]
              },
              "symbol": {
                "type": "string"
              },
              "decimals": {
                "type": "number",
                "example": 1
              },
              "coingeckoId": {
                "type": "string"
              },
              "isPublic": {
                "type": "boolean"
              },
              "superToken": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "SuperToken's address"
                  },
                  "decimals": {
                    "type": "number",
                    "example": 1
                  },
                  "symbol": {
                    "type": "string",
                    "description": "SuperToken's symbol"
                  }
                },
                "required": [
                  "address",
                  "decimals",
                  "symbol"
                ]
              },
              "chain": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1,
                    "description": "Chain id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Chain name"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Chain icon"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi",
                      "usd",
                      "inr"
                    ],
                    "description": "Chain currency symbol"
                  },
                  "blockExplorerTransactionUrl": {
                    "type": "string",
                    "description": "Chain block explorer transaction url"
                  },
                  "blockExplorerName": {
                    "type": "string",
                    "description": "Chain block explorer name"
                  },
                  "type": {
                    "description": "Chain type",
                    "type": "string",
                    "enum": [
                      "evm",
                      "solana",
                      "stripe",
                      "binance_pay"
                    ]
                  }
                },
                "required": [
                  "id",
                  "name",
                  "icon",
                  "currency",
                  "blockExplorerTransactionUrl",
                  "blockExplorerName",
                  "type"
                ]
              }
            },
            "required": [
              "id",
              "name",
              "address",
              "chainId",
              "currency",
              "symbol",
              "decimals",
              "isPublic",
              "chain"
            ]
          },
          "paymentAddress": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "checkoutSessionId",
          "asset",
          "paymentAddress"
        ]
      },
      "PaymentIntentStatus": {
        "type": "string",
        "enum": [
          "requires_payment_method",
          "requires_confirmation",
          "requires_action",
          "processing",
          "requires_capture",
          "canceled",
          "succeeded"
        ]
      },
      "AssetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Asset id"
          },
          "name": {
            "type": "string",
            "description": "Asset name"
          },
          "chainId": {
            "type": "number",
            "example": 1,
            "description": "Asset chain id"
          },
          "address": {
            "type": "string",
            "description": "Asset address on chain"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi",
              "usd",
              "inr"
            ],
            "description": "Asset currency symbol"
          },
          "symbol": {
            "type": "string",
            "description": "Asset symbol"
          },
          "decimals": {
            "type": "number",
            "example": 1,
            "description": "Asset decimals in which it is represented on chain"
          },
          "coingeckoId": {
            "type": "string",
            "description": "Asset coingecko id"
          },
          "superToken": {
            "description": "SuperToken data",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "SuperToken's address"
                  },
                  "decimals": {
                    "type": "number",
                    "example": 1
                  },
                  "symbol": {
                    "type": "string",
                    "description": "SuperToken's symbol"
                  }
                },
                "required": [
                  "address",
                  "decimals",
                  "symbol"
                ]
              }
            ]
          },
          "isEIP5827Supported": {
            "type": "boolean",
            "description": "Is EIP5827 supported"
          }
        },
        "required": [
          "id",
          "name",
          "chainId",
          "address",
          "currency",
          "symbol",
          "decimals",
          "isEIP5827Supported"
        ]
      },
      "PaymentMethodDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "asset": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Asset id"
              },
              "name": {
                "type": "string",
                "description": "Asset name"
              },
              "chainId": {
                "type": "number",
                "example": 1,
                "description": "Asset chain id"
              },
              "address": {
                "type": "string",
                "description": "Asset address on chain"
              },
              "currency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi",
                  "usd",
                  "inr"
                ],
                "description": "Asset currency symbol"
              },
              "symbol": {
                "type": "string",
                "description": "Asset symbol"
              },
              "decimals": {
                "type": "number",
                "example": 1,
                "description": "Asset decimals in which it is represented on chain"
              },
              "coingeckoId": {
                "type": "string",
                "description": "Asset coingecko id"
              },
              "superToken": {
                "description": "SuperToken data",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "SuperToken's address"
                      },
                      "decimals": {
                        "type": "number",
                        "example": 1
                      },
                      "symbol": {
                        "type": "string",
                        "description": "SuperToken's symbol"
                      }
                    },
                    "required": [
                      "address",
                      "decimals",
                      "symbol"
                    ]
                  }
                ]
              },
              "isEIP5827Supported": {
                "type": "boolean",
                "description": "Is EIP5827 supported"
              }
            },
            "required": [
              "id",
              "name",
              "chainId",
              "address",
              "currency",
              "symbol",
              "decimals",
              "isEIP5827Supported"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "superfluid",
              "wallet",
              "allowance_based_recurring",
              "stripe",
              "binance_pay"
            ]
          },
          "accountAddress": {
            "type": "string"
          },
          "billingDetails": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name"
              },
              "email": {
                "type": "string",
                "description": "The email"
              },
              "phone": {
                "type": "string",
                "description": "The phone"
              },
              "organizationName": {
                "type": "string",
                "description": "The organization name"
              },
              "address": {
                "description": "The address",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "options": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "assetId",
          "asset",
          "type"
        ]
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "incoming",
          "outgoing",
          "event",
          "transfer"
        ]
      },
      "TransactionDto": {
        "type": "object",
        "properties": {
          "type": {
            "description": "Transaction type",
            "type": "string",
            "enum": [
              "incoming",
              "outgoing",
              "event",
              "transfer"
            ]
          },
          "transactionRelayId": {
            "type": "string",
            "description": "Transaction relay id"
          },
          "transactionHash": {
            "type": "string",
            "description": "Transaction hash"
          },
          "nonce": {
            "type": "number",
            "example": 1,
            "description": "Transaction nonce"
          },
          "gasLimit": {
            "type": "number",
            "example": 1,
            "description": "Transaction gas limit used in payment"
          },
          "validUntil": {
            "type": "string",
            "description": "Transaction valid until"
          },
          "fromAddress": {
            "type": "string",
            "description": "Transaction from address"
          },
          "toAddress": {
            "type": "string",
            "description": "Transaction to address"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi",
              "usd",
              "inr"
            ],
            "description": "Transaction currency"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Transaction created at"
          },
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "Transaction amount in 8 decimals"
          },
          "amountRaw": {
            "type": "string",
            "description": "Transaction amount raw received from alchemy"
          },
          "assetId": {
            "type": "string",
            "description": "Transaction asset id"
          },
          "asset": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "chainId": {
                "type": "number",
                "example": 1
              },
              "currency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi",
                  "usd",
                  "inr"
                ]
              },
              "symbol": {
                "type": "string"
              },
              "decimals": {
                "type": "number",
                "example": 1
              },
              "coingeckoId": {
                "type": "string"
              },
              "isPublic": {
                "type": "boolean"
              },
              "superToken": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "SuperToken's address"
                  },
                  "decimals": {
                    "type": "number",
                    "example": 1
                  },
                  "symbol": {
                    "type": "string",
                    "description": "SuperToken's symbol"
                  }
                },
                "required": [
                  "address",
                  "decimals",
                  "symbol"
                ]
              },
              "chain": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1,
                    "description": "Chain id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Chain name"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Chain icon"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi",
                      "usd",
                      "inr"
                    ],
                    "description": "Chain currency symbol"
                  },
                  "blockExplorerTransactionUrl": {
                    "type": "string",
                    "description": "Chain block explorer transaction url"
                  },
                  "blockExplorerName": {
                    "type": "string",
                    "description": "Chain block explorer name"
                  },
                  "type": {
                    "description": "Chain type",
                    "type": "string",
                    "enum": [
                      "evm",
                      "solana",
                      "stripe",
                      "binance_pay"
                    ]
                  }
                },
                "required": [
                  "id",
                  "name",
                  "icon",
                  "currency",
                  "blockExplorerTransactionUrl",
                  "blockExplorerName",
                  "type"
                ]
              }
            },
            "required": [
              "id",
              "name",
              "address",
              "chainId",
              "currency",
              "symbol",
              "decimals",
              "isPublic",
              "chain"
            ]
          },
          "transactionUrl": {
            "type": "string",
            "description": "Transaction url"
          }
        },
        "required": [
          "type",
          "fromAddress",
          "toAddress",
          "currency",
          "amountRaw",
          "assetId",
          "asset"
        ]
      },
      "PaymentReceiptDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "paymentIntentId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "name": {
            "type": "string"
          },
          "receiptNumber": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "organizationId",
          "paymentIntentId",
          "receiptNumber"
        ]
      },
      "StripeDataDto": {
        "type": "object",
        "properties": {
          "paymentIntentId": {
            "type": "string"
          },
          "receiptUrl": {
            "type": "string"
          },
          "cardLast4": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "PaymentIntentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807"
          },
          "amountReceived": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi",
              "usd",
              "inr"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "requires_payment_method",
              "requires_confirmation",
              "requires_action",
              "processing",
              "requires_capture",
              "canceled",
              "succeeded"
            ]
          },
          "paymentMethodId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "description": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "assetId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
              },
              "asset": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Asset id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Asset name"
                  },
                  "chainId": {
                    "type": "number",
                    "example": 1,
                    "description": "Asset chain id"
                  },
                  "address": {
                    "type": "string",
                    "description": "Asset address on chain"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi",
                      "usd",
                      "inr"
                    ],
                    "description": "Asset currency symbol"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Asset symbol"
                  },
                  "decimals": {
                    "type": "number",
                    "example": 1,
                    "description": "Asset decimals in which it is represented on chain"
                  },
                  "coingeckoId": {
                    "type": "string",
                    "description": "Asset coingecko id"
                  },
                  "superToken": {
                    "description": "SuperToken data",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "SuperToken's address"
                          },
                          "decimals": {
                            "type": "number",
                            "example": 1
                          },
                          "symbol": {
                            "type": "string",
                            "description": "SuperToken's symbol"
                          }
                        },
                        "required": [
                          "address",
                          "decimals",
                          "symbol"
                        ]
                      }
                    ]
                  },
                  "isEIP5827Supported": {
                    "type": "boolean",
                    "description": "Is EIP5827 supported"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "chainId",
                  "address",
                  "currency",
                  "symbol",
                  "decimals",
                  "isEIP5827Supported"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "superfluid",
                  "wallet",
                  "allowance_based_recurring",
                  "stripe",
                  "binance_pay"
                ]
              },
              "accountAddress": {
                "type": "string"
              },
              "billingDetails": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "customerId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
              },
              "options": {
                "type": "object"
              }
            },
            "required": [
              "id",
              "assetId",
              "asset",
              "type"
            ]
          },
          "paymentMethodTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "superfluid",
                "wallet",
                "allowance_based_recurring",
                "stripe",
                "binance_pay"
              ]
            }
          },
          "transferAccountAddress": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "Transaction type",
                  "type": "string",
                  "enum": [
                    "incoming",
                    "outgoing",
                    "event",
                    "transfer"
                  ]
                },
                "transactionRelayId": {
                  "type": "string",
                  "description": "Transaction relay id"
                },
                "transactionHash": {
                  "type": "string",
                  "description": "Transaction hash"
                },
                "nonce": {
                  "type": "number",
                  "example": 1,
                  "description": "Transaction nonce"
                },
                "gasLimit": {
                  "type": "number",
                  "example": 1,
                  "description": "Transaction gas limit used in payment"
                },
                "validUntil": {
                  "type": "string",
                  "description": "Transaction valid until"
                },
                "fromAddress": {
                  "type": "string",
                  "description": "Transaction from address"
                },
                "toAddress": {
                  "type": "string",
                  "description": "Transaction to address"
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "usdc",
                    "usdt",
                    "dai",
                    "btc",
                    "eth",
                    "matic",
                    "bnb",
                    "sol",
                    "busd",
                    "food",
                    "tfi",
                    "usd",
                    "inr"
                  ],
                  "description": "Transaction currency"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Transaction created at"
                },
                "amount": {
                  "format": "int64",
                  "type": "integer",
                  "example": "9223372036854775807",
                  "description": "Transaction amount in 8 decimals"
                },
                "amountRaw": {
                  "type": "string",
                  "description": "Transaction amount raw received from alchemy"
                },
                "assetId": {
                  "type": "string",
                  "description": "Transaction asset id"
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "number",
                      "example": 1
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi",
                        "usd",
                        "inr"
                      ]
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "decimals": {
                      "type": "number",
                      "example": 1
                    },
                    "coingeckoId": {
                      "type": "string"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "superToken": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "SuperToken's address"
                        },
                        "decimals": {
                          "type": "number",
                          "example": 1
                        },
                        "symbol": {
                          "type": "string",
                          "description": "SuperToken's symbol"
                        }
                      },
                      "required": [
                        "address",
                        "decimals",
                        "symbol"
                      ]
                    },
                    "chain": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1,
                          "description": "Chain id"
                        },
                        "name": {
                          "type": "string",
                          "description": "Chain name"
                        },
                        "icon": {
                          "type": "string",
                          "description": "Chain icon"
                        },
                        "currency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi",
                            "usd",
                            "inr"
                          ],
                          "description": "Chain currency symbol"
                        },
                        "blockExplorerTransactionUrl": {
                          "type": "string",
                          "description": "Chain block explorer transaction url"
                        },
                        "blockExplorerName": {
                          "type": "string",
                          "description": "Chain block explorer name"
                        },
                        "type": {
                          "description": "Chain type",
                          "type": "string",
                          "enum": [
                            "evm",
                            "solana",
                            "stripe",
                            "binance_pay"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "icon",
                        "currency",
                        "blockExplorerTransactionUrl",
                        "blockExplorerName",
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "address",
                    "chainId",
                    "currency",
                    "symbol",
                    "decimals",
                    "isPublic",
                    "chain"
                  ]
                },
                "transactionUrl": {
                  "type": "string",
                  "description": "Transaction url"
                }
              },
              "required": [
                "type",
                "fromAddress",
                "toAddress",
                "currency",
                "amountRaw",
                "assetId",
                "asset"
              ]
            }
          },
          "paymentReceipt": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
              },
              "paymentIntentId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
              },
              "name": {
                "type": "string"
              },
              "receiptNumber": {
                "type": "string"
              },
              "uri": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "organizationId",
              "paymentIntentId",
              "receiptNumber"
            ]
          },
          "canceledAt": {
            "format": "date-time",
            "type": "string"
          },
          "cancellationReason": {
            "type": "string"
          },
          "stripe": {
            "type": "object",
            "properties": {
              "paymentIntentId": {
                "type": "string"
              },
              "receiptUrl": {
                "type": "string"
              },
              "cardLast4": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              }
            }
          },
          "isMarkRefunded": {
            "type": "boolean",
            "nullable": true
          },
          "markRefundedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "markRefundedComment": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "organizationId",
          "status",
          "paymentMethodId",
          "transactions"
        ]
      },
      "CheckoutSessionCouponDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
          },
          "percentOff": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "example": 1,
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
          },
          "code": {
            "type": "string",
            "description": "The coupon code"
          }
        },
        "required": [
          "name",
          "percentOff",
          "code"
        ]
      },
      "CheckoutSessionDiscountDto": {
        "type": "object",
        "properties": {
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The amount of the discount"
          },
          "couponId": {
            "type": "string",
            "description": "The coupon id of the discount"
          },
          "coupon": {
            "description": "The coupon of the discount",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                  },
                  "percentOff": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "example": 1,
                    "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                  },
                  "code": {
                    "type": "string",
                    "description": "The coupon code"
                  }
                },
                "required": [
                  "name",
                  "percentOff",
                  "code"
                ]
              }
            ]
          }
        },
        "required": [
          "amount",
          "couponId",
          "coupon"
        ]
      },
      "CheckoutSessionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization id of the checkout session"
          },
          "mode": {
            "description": "The mode of the Checkout Session.",
            "example": "payment",
            "type": "string",
            "enum": [
              "payment",
              "subscription"
            ]
          },
          "paymentLinkId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "The payment link id used to create this checkout session"
          },
          "subscriptionId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "The subscription created from this checkout session"
          },
          "invoiceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "The invoice created from this checkout session"
          },
          "amountTotal": {
            "format": "int64",
            "type": "integer",
            "example": 100000000,
            "description": "A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
            "minimum": 0
          },
          "amountSubtotal": {
            "format": "int64",
            "type": "integer",
            "example": 100000000,
            "description": "Amount subtotal is total of all line items excluding tax, shipping, application fee and discount. A non-zero amount filled in with 8 decimal places. For example, 1 USDC is 100000000.",
            "minimum": 0
          },
          "amountDetails": {
            "description": "The amount details of the payment",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currency": {
                    "description": "The currency of the payment",
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi",
                      "usd",
                      "inr"
                    ]
                  },
                  "amountTotal": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The total amount of the payment after discounts and taxes"
                  },
                  "amountSubtotal": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The total amount of the payment before discounts and taxes"
                  },
                  "amountDiscount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The total amount of the payment discount"
                  },
                  "amountTax": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The total amount of the payment tax"
                  },
                  "discountAmounts": {
                    "description": "The list of discount amounts",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The amount of the discount"
                        },
                        "couponId": {
                          "type": "string",
                          "description": "The coupon id of the discount"
                        }
                      },
                      "required": [
                        "amount",
                        "couponId"
                      ]
                    }
                  },
                  "taxAmounts": {
                    "description": "The list of tax amounts",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The amount of the tax"
                        },
                        "taxId": {
                          "type": "string",
                          "description": "The tax id of the tax"
                        }
                      },
                      "required": [
                        "amount",
                        "taxId"
                      ]
                    }
                  }
                },
                "required": [
                  "currency",
                  "amountTotal",
                  "amountSubtotal",
                  "amountDiscount",
                  "amountTax",
                  "discountAmounts",
                  "taxAmounts"
                ]
              }
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Currency of the amount",
            "example": "usdc"
          },
          "paymentMethodTypes": {
            "type": "array",
            "description": "A list of the types of payment methods (e.g. wallet) this Checkout Session is allowed to accept.",
            "example": "wallet",
            "minItems": 1,
            "maxItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "superfluid",
                "wallet",
                "allowance_based_recurring",
                "stripe",
                "binance_pay"
              ]
            }
          },
          "paymentSetting": {
            "description": "The payment method settings to use for this checkout's payment",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "paymentMethodTypes": {
                    "type": "array",
                    "description": "A list of the types of payment methods",
                    "example": "wallet",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "wallet",
                        "allowance_based_recurring",
                        "stripe",
                        "binance_pay"
                      ]
                    }
                  },
                  "allowedChains": {
                    "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                    "example": [
                      {
                        "chainId": 137
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chainId": {
                          "type": "number",
                          "example": 1
                        },
                        "blacklistCurrencies": {
                          "type": "array",
                          "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                          "example": [
                            "usdc"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        }
                      },
                      "required": [
                        "chainId"
                      ]
                    }
                  },
                  "preferredChainId": {
                    "type": "number",
                    "example": 1,
                    "description": "The preferred chain's id"
                  },
                  "allowSwap": {
                    "type": "boolean",
                    "description": "Whether the user can swap the payment currency",
                    "default": false
                  },
                  "allowFiatPayment": {
                    "type": "boolean",
                    "description": "Whether to allow payment with fiat currency. If set to true, the payment will be made in fiat currency.\n      This is experimental field and supposed to change. Default: false"
                  }
                }
              }
            ]
          },
          "status": {
            "description": "The status of the session",
            "type": "string",
            "enum": [
              "open",
              "complete",
              "incomplete",
              "expired"
            ]
          },
          "paymentStatus": {
            "description": "The status of the payment",
            "type": "string",
            "enum": [
              "unpaid",
              "paid"
            ]
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "The time at which the session will expire. Default: 1 Hour"
          },
          "customerId": {
            "type": "string",
            "description": "The ID of the customer if you want to associate the session with a customer"
          },
          "customer": {
            "description": "The customer detail from saved customer's information. This is only available when customer id is provided or customer is stored",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "Customer's id"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Customer's created at"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Customer's updated at"
                  },
                  "customerReferenceId": {
                    "type": "string",
                    "description": "Customer's reference id"
                  },
                  "shipping": {
                    "description": "Customer's shipping address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email"
                          },
                          "phone": {
                            "type": "string",
                            "description": "The phone"
                          },
                          "organizationName": {
                            "type": "string",
                            "description": "The organization name"
                          },
                          "address": {
                            "description": "The address",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "line1": {
                                    "type": "string"
                                  },
                                  "line2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "taxIds": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "customerId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                            }
                          },
                          "required": [
                            "id",
                            "customerId"
                          ]
                        }
                      }
                    }
                  },
                  "visibility": {
                    "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Customer's metadata"
                  },
                  "customerNumber": {
                    "type": "string",
                    "description": "Customer number assigned by the system"
                  }
                },
                "required": [
                  "id",
                  "customerNumber"
                ]
              }
            ]
          },
          "customerDetails": {
            "description": "The checkout sessions's customer detail",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "taxIds": {
                    "type": "object",
                    "properties": {
                      "object": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "customerId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                            }
                          },
                          "required": [
                            "id",
                            "customerId"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "clientReferenceId": {
            "type": "string",
            "description": "Unique ID string used to identify the session in your backend. This can be your payment ID, cart ID, or similar used to link this Checkout Session with your internal system."
          },
          "customerCreation": {
            "description": "Whether to create a customer for the session. If required, a customer will be created for subsequent payments",
            "type": "string",
            "enum": [
              "if_required",
              "always"
            ]
          },
          "customerUpdate": {
            "description": "The customer update settings to use for this checkout to update existing customer details",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "never"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "never"
                    ]
                  },
                  "shipping": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "never"
                    ]
                  }
                }
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "The URL to redirect the customer to complete payment"
          },
          "successUrl": {
            "type": "string",
            "description": "The URL to redirect the customer to after payment is completed. Only applicable when `afterCompletion` is set to `redirect`"
          },
          "cancelUrl": {
            "type": "string",
            "description": "The URL to redirect the customer to if they decide to cancel payment"
          },
          "submitType": {
            "default": "pay",
            "description": "The type of submit button to display on the Checkout page",
            "type": "string",
            "enum": [
              "pay",
              "book",
              "donate"
            ]
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to a Checkout Session object"
          },
          "nameCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's name. Default: false"
          },
          "emailCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's email address. Default: false"
          },
          "phoneNumberCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's phone number Default: false"
          },
          "shippingAddressCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's shipping address. Default: false"
          },
          "billingAddressCollection": {
            "type": "boolean",
            "description": "Whether to collect the customer's billing address. Default: false"
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "numeric",
                        "dropdown"
                      ]
                    },
                    "label": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "custom"
                          ]
                        },
                        "custom": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "custom"
                      ]
                    },
                    "optional": {
                      "type": "boolean",
                      "default": false
                    },
                    "text": {
                      "type": "object",
                      "properties": {
                        "maximumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "minimumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "numeric": {
                      "type": "object",
                      "properties": {
                        "maximumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "minimumLength": {
                          "type": "number",
                          "example": 1
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "dropdown": {
                      "type": "object",
                      "properties": {
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "label",
                              "value"
                            ]
                          }
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    }
                  },
                  "required": [
                    "key",
                    "type",
                    "label",
                    "optional"
                  ]
                }
              }
            }
          },
          "afterCompletion": {
            "description": "The action to take after the payment is completed. You can choose to redirect user to your application or use the default payment confirmation page provided by Copperx",
            "type": "string",
            "enum": [
              "redirect",
              "hosted_confirmation"
            ]
          },
          "afterCompletionConfirmMsg": {
            "type": "string",
            "description": "The message to show after successful payment. Only applicable when `afterCompletion` is set to `hosted_confirmation`"
          },
          "shippingDetails": {
            "description": "The shipping address to use for this checkout",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "billingDetails": {
            "description": "The billing address to use for this checkout",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "lineItems": {
            "description": "The list of line items to display on the session",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number",
                          "example": 1
                        },
                        "price": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "billingScheme": {
                              "description": "The billing scheme to use for this price",
                              "type": "string",
                              "enum": [
                                "per_unit"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's id"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the price is currently active"
                            },
                            "usageType": {
                              "description": "The usage type of the price.",
                              "type": "string",
                              "enum": [
                                "licensed"
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                            },
                            "unitAmountDecimal": {
                              "type": "string"
                            },
                            "customUnitMax": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customUnitMin": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                            },
                            "customPreset": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                            },
                            "customUnitAmountSuggestions": {
                              "description": "Amount suggestions for this price. Only if unit amount is not provided",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product": {
                              "description": "The product this price belongs to",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "isActive": {
                                      "type": "boolean",
                                      "description": "Whether the product is currently active"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "publicImages": {
                                      "description": "Product images with absolute public url",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "defaultPriceId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                      "description": "Product's default price id"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                            },
                            "visibility": {
                              "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "currency",
                            "productId",
                            "type",
                            "product"
                          ]
                        }
                      },
                      "required": [
                        "price"
                      ]
                    }
                  }
                }
              }
            ]
          },
          "addresses": {
            "description": "The list of payment addresses associated with the session. It is the list of the addresses that will be used to pay the amount.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "checkoutSessionId": {
                  "type": "string"
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "number",
                      "example": 1
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi",
                        "usd",
                        "inr"
                      ]
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "decimals": {
                      "type": "number",
                      "example": 1
                    },
                    "coingeckoId": {
                      "type": "string"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "superToken": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "SuperToken's address"
                        },
                        "decimals": {
                          "type": "number",
                          "example": 1
                        },
                        "symbol": {
                          "type": "string",
                          "description": "SuperToken's symbol"
                        }
                      },
                      "required": [
                        "address",
                        "decimals",
                        "symbol"
                      ]
                    },
                    "chain": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1,
                          "description": "Chain id"
                        },
                        "name": {
                          "type": "string",
                          "description": "Chain name"
                        },
                        "icon": {
                          "type": "string",
                          "description": "Chain icon"
                        },
                        "currency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi",
                            "usd",
                            "inr"
                          ],
                          "description": "Chain currency symbol"
                        },
                        "blockExplorerTransactionUrl": {
                          "type": "string",
                          "description": "Chain block explorer transaction url"
                        },
                        "blockExplorerName": {
                          "type": "string",
                          "description": "Chain block explorer name"
                        },
                        "type": {
                          "description": "Chain type",
                          "type": "string",
                          "enum": [
                            "evm",
                            "solana",
                            "stripe",
                            "binance_pay"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "icon",
                        "currency",
                        "blockExplorerTransactionUrl",
                        "blockExplorerName",
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "address",
                    "chainId",
                    "currency",
                    "symbol",
                    "decimals",
                    "isPublic",
                    "chain"
                  ]
                },
                "paymentAddress": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "checkoutSessionId",
                "asset",
                "paymentAddress"
              ]
            }
          },
          "paymentIntent": {
            "description": "The payment intent associated with the session. Payment intent is created when the session is created.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "organizationId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                  },
                  "amount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807"
                  },
                  "amountReceived": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi",
                      "usd",
                      "inr"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "requires_payment_method",
                      "requires_confirmation",
                      "requires_action",
                      "processing",
                      "requires_capture",
                      "canceled",
                      "succeeded"
                    ]
                  },
                  "paymentMethodId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                  },
                  "description": {
                    "type": "string"
                  },
                  "paymentMethod": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "assetId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                      },
                      "asset": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Asset id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Asset name"
                          },
                          "chainId": {
                            "type": "number",
                            "example": 1,
                            "description": "Asset chain id"
                          },
                          "address": {
                            "type": "string",
                            "description": "Asset address on chain"
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi",
                              "usd",
                              "inr"
                            ],
                            "description": "Asset currency symbol"
                          },
                          "symbol": {
                            "type": "string",
                            "description": "Asset symbol"
                          },
                          "decimals": {
                            "type": "number",
                            "example": 1,
                            "description": "Asset decimals in which it is represented on chain"
                          },
                          "coingeckoId": {
                            "type": "string",
                            "description": "Asset coingecko id"
                          },
                          "superToken": {
                            "description": "SuperToken data",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "SuperToken's address"
                                  },
                                  "decimals": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "SuperToken's symbol"
                                  }
                                },
                                "required": [
                                  "address",
                                  "decimals",
                                  "symbol"
                                ]
                              }
                            ]
                          },
                          "isEIP5827Supported": {
                            "type": "boolean",
                            "description": "Is EIP5827 supported"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "chainId",
                          "address",
                          "currency",
                          "symbol",
                          "decimals",
                          "isEIP5827Supported"
                        ]
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "superfluid",
                          "wallet",
                          "allowance_based_recurring",
                          "stripe",
                          "binance_pay"
                        ]
                      },
                      "accountAddress": {
                        "type": "string"
                      },
                      "billingDetails": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email"
                          },
                          "phone": {
                            "type": "string",
                            "description": "The phone"
                          },
                          "organizationName": {
                            "type": "string",
                            "description": "The organization name"
                          },
                          "address": {
                            "description": "The address",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "line1": {
                                    "type": "string"
                                  },
                                  "line2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                      },
                      "options": {
                        "type": "object"
                      }
                    },
                    "required": [
                      "id",
                      "assetId",
                      "asset",
                      "type"
                    ]
                  },
                  "paymentMethodTypes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "wallet",
                        "allowance_based_recurring",
                        "stripe",
                        "binance_pay"
                      ]
                    }
                  },
                  "transferAccountAddress": {
                    "type": "string"
                  },
                  "transactions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Transaction type",
                          "type": "string",
                          "enum": [
                            "incoming",
                            "outgoing",
                            "event",
                            "transfer"
                          ]
                        },
                        "transactionRelayId": {
                          "type": "string",
                          "description": "Transaction relay id"
                        },
                        "transactionHash": {
                          "type": "string",
                          "description": "Transaction hash"
                        },
                        "nonce": {
                          "type": "number",
                          "example": 1,
                          "description": "Transaction nonce"
                        },
                        "gasLimit": {
                          "type": "number",
                          "example": 1,
                          "description": "Transaction gas limit used in payment"
                        },
                        "validUntil": {
                          "type": "string",
                          "description": "Transaction valid until"
                        },
                        "fromAddress": {
                          "type": "string",
                          "description": "Transaction from address"
                        },
                        "toAddress": {
                          "type": "string",
                          "description": "Transaction to address"
                        },
                        "currency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi",
                            "usd",
                            "inr"
                          ],
                          "description": "Transaction currency"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Transaction created at"
                        },
                        "amount": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "Transaction amount in 8 decimals"
                        },
                        "amountRaw": {
                          "type": "string",
                          "description": "Transaction amount raw received from alchemy"
                        },
                        "assetId": {
                          "type": "string",
                          "description": "Transaction asset id"
                        },
                        "asset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "address": {
                              "type": "string"
                            },
                            "chainId": {
                              "type": "number",
                              "example": 1
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi",
                                "usd",
                                "inr"
                              ]
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "decimals": {
                              "type": "number",
                              "example": 1
                            },
                            "coingeckoId": {
                              "type": "string"
                            },
                            "isPublic": {
                              "type": "boolean"
                            },
                            "superToken": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "description": "SuperToken's address"
                                },
                                "decimals": {
                                  "type": "number",
                                  "example": 1
                                },
                                "symbol": {
                                  "type": "string",
                                  "description": "SuperToken's symbol"
                                }
                              },
                              "required": [
                                "address",
                                "decimals",
                                "symbol"
                              ]
                            },
                            "chain": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 1,
                                  "description": "Chain id"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Chain name"
                                },
                                "icon": {
                                  "type": "string",
                                  "description": "Chain icon"
                                },
                                "currency": {
                                  "type": "string",
                                  "enum": [
                                    "usdc",
                                    "usdt",
                                    "dai",
                                    "btc",
                                    "eth",
                                    "matic",
                                    "bnb",
                                    "sol",
                                    "busd",
                                    "food",
                                    "tfi",
                                    "usd",
                                    "inr"
                                  ],
                                  "description": "Chain currency symbol"
                                },
                                "blockExplorerTransactionUrl": {
                                  "type": "string",
                                  "description": "Chain block explorer transaction url"
                                },
                                "blockExplorerName": {
                                  "type": "string",
                                  "description": "Chain block explorer name"
                                },
                                "type": {
                                  "description": "Chain type",
                                  "type": "string",
                                  "enum": [
                                    "evm",
                                    "solana",
                                    "stripe",
                                    "binance_pay"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "icon",
                                "currency",
                                "blockExplorerTransactionUrl",
                                "blockExplorerName",
                                "type"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "address",
                            "chainId",
                            "currency",
                            "symbol",
                            "decimals",
                            "isPublic",
                            "chain"
                          ]
                        },
                        "transactionUrl": {
                          "type": "string",
                          "description": "Transaction url"
                        }
                      },
                      "required": [
                        "type",
                        "fromAddress",
                        "toAddress",
                        "currency",
                        "amountRaw",
                        "assetId",
                        "asset"
                      ]
                    }
                  },
                  "paymentReceipt": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                      },
                      "paymentIntentId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                      },
                      "name": {
                        "type": "string"
                      },
                      "receiptNumber": {
                        "type": "string"
                      },
                      "uri": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "organizationId",
                      "paymentIntentId",
                      "receiptNumber"
                    ]
                  },
                  "canceledAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "cancellationReason": {
                    "type": "string"
                  },
                  "stripe": {
                    "type": "object",
                    "properties": {
                      "paymentIntentId": {
                        "type": "string"
                      },
                      "receiptUrl": {
                        "type": "string"
                      },
                      "cardLast4": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      }
                    }
                  },
                  "isMarkRefunded": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "markRefundedAt": {
                    "format": "date-time",
                    "type": "string",
                    "nullable": true
                  },
                  "markRefundedComment": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "id",
                  "organizationId",
                  "status",
                  "paymentMethodId",
                  "transactions"
                ]
              }
            ]
          },
          "isMarkRefunded": {
            "type": "boolean",
            "description": "Whether to mark the payment as refunded"
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          },
          "discounts": {
            "description": "The list of discounts applied to the session",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "format": "int64",
                  "type": "integer",
                  "example": "9223372036854775807",
                  "description": "The amount of the discount"
                },
                "couponId": {
                  "type": "string",
                  "description": "The coupon id of the discount"
                },
                "coupon": {
                  "description": "The coupon of the discount",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
                        },
                        "percentOff": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "example": 1,
                          "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
                        },
                        "code": {
                          "type": "string",
                          "description": "The coupon code"
                        }
                      },
                      "required": [
                        "name",
                        "percentOff",
                        "code"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "amount",
                "couponId",
                "coupon"
              ]
            }
          }
        },
        "required": [
          "id",
          "organizationId",
          "amountTotal",
          "amountSubtotal",
          "currency",
          "status",
          "paymentStatus",
          "url",
          "lineItems",
          "addresses",
          "paymentIntent",
          "discounts"
        ]
      },
      "DateFilterDto": {
        "type": "object",
        "properties": {
          "isnull": {
            "type": "boolean",
            "description": "Returns null values"
          },
          "notnull": {
            "type": "boolean",
            "description": "Returns not null values"
          },
          "gt": {
            "format": "date-time",
            "type": "string",
            "description": "Returns values greater than the given date"
          },
          "gte": {
            "format": "date-time",
            "type": "string",
            "description": "Returns values greater than or equal to the given date"
          },
          "lt": {
            "format": "date-time",
            "type": "string",
            "description": "Returns values less than the given date"
          },
          "lte": {
            "format": "date-time",
            "type": "string",
            "description": "Returns values less than or equal to the given date"
          }
        }
      },
      "PaginationFilterDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "minimum": 1,
            "example": 1,
            "default": 1,
            "description": "Page number. Starts from 1"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 200,
            "example": 10,
            "default": 200,
            "description": "Number of items per page"
          },
          "createdAt": {
            "description": "Filter by created date",
            "example": {
              "gt": "2020-01-01"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "isnull": {
                    "type": "boolean",
                    "description": "Returns null values"
                  },
                  "notnull": {
                    "type": "boolean",
                    "description": "Returns not null values"
                  },
                  "gt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Returns values greater than the given date"
                  },
                  "gte": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Returns values greater than or equal to the given date"
                  },
                  "lt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Returns values less than the given date"
                  },
                  "lte": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Returns values less than or equal to the given date"
                  }
                }
              }
            ]
          }
        }
      },
      "PageDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1,
            "default": 1,
            "description": "Page number. Starts from 1"
          },
          "limit": {
            "type": "number",
            "example": 10,
            "default": 200,
            "description": "Number of items per page"
          },
          "count": {
            "type": "number",
            "example": 1
          },
          "hasMore": {
            "type": "boolean"
          },
          "query": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "minimum": 1,
                "example": 1,
                "default": 1,
                "description": "Page number. Starts from 1"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 200,
                "example": 10,
                "default": 200,
                "description": "Number of items per page"
              },
              "createdAt": {
                "description": "Filter by created date",
                "example": {
                  "gt": "2020-01-01"
                },
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "isnull": {
                        "type": "boolean",
                        "description": "Returns null values"
                      },
                      "notnull": {
                        "type": "boolean",
                        "description": "Returns not null values"
                      },
                      "gt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Returns values greater than the given date"
                      },
                      "gte": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Returns values greater than or equal to the given date"
                      },
                      "lt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Returns values less than the given date"
                      },
                      "lte": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Returns values less than or equal to the given date"
                      }
                    }
                  }
                ]
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "page",
          "limit",
          "count",
          "hasMore",
          "data"
        ]
      },
      "CheckoutSessionCompletedDto": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean",
            "description": "if true, the checkout session was completed"
          },
          "transactionHash": {
            "type": "string",
            "description": "The transaction hash of the payment"
          },
          "status": {
            "description": "The status of the session",
            "type": "string",
            "enum": [
              "open",
              "complete",
              "incomplete",
              "expired"
            ]
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the session was last updated"
          }
        },
        "required": [
          "completed",
          "status",
          "updatedAt"
        ]
      },
      "LinkType": {
        "type": "string",
        "enum": [
          "one_time",
          "multiple"
        ]
      },
      "PaymentLinkCustomFieldsDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "numeric",
              "dropdown"
            ]
          },
          "label": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "custom"
                ]
              },
              "custom": {
                "type": "string"
              }
            },
            "required": [
              "custom"
            ]
          },
          "optional": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "key",
          "type",
          "label",
          "optional"
        ]
      },
      "PaymentLinkCustomFieldDto": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "text",
                    "numeric",
                    "dropdown"
                  ]
                },
                "label": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "custom"
                      ]
                    },
                    "custom": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "custom"
                  ]
                },
                "optional": {
                  "type": "boolean",
                  "default": false
                }
              },
              "required": [
                "key",
                "type",
                "label",
                "optional"
              ]
            }
          }
        }
      },
      "PaymentLinkChainDto": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "number",
            "example": 1,
            "description": "Chain id"
          },
          "isPreferred": {
            "type": "boolean",
            "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
          }
        },
        "required": [
          "chainId",
          "isPreferred"
        ]
      },
      "CreatePaymentLinkDto": {
        "type": "object",
        "properties": {
          "type": {
            "description": "Payment link type",
            "type": "string",
            "enum": [
              "one_time",
              "multiple"
            ]
          },
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Amount's currency"
          },
          "currencies": {
            "type": "array",
            "description": "Currencies in which amount is to be taken",
            "items": {
              "type": "string",
              "enum": [
                "usdc",
                "usdt",
                "dai",
                "btc",
                "eth",
                "matic",
                "bnb",
                "sol",
                "busd",
                "food",
                "tfi"
              ]
            }
          },
          "preferredCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Preferred currency. If provided then it will be selected by default on checkout page"
          },
          "title": {
            "type": "string",
            "description": "Payment link title"
          },
          "description": {
            "type": "string",
            "description": "Payment link description"
          },
          "image": {
            "type": "string",
            "description": "Payment link product image"
          },
          "tags": {
            "description": "Payment link tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nameCollection": {
            "type": "boolean",
            "description": "If true then take name from user"
          },
          "emailCollection": {
            "type": "boolean",
            "description": "If true then take email from user"
          },
          "phoneNumberCollection": {
            "type": "boolean",
            "description": "If true then take phone number from user"
          },
          "shippingAddressCollection": {
            "type": "boolean",
            "description": "If true then take shipping address from user"
          },
          "billingAddressCollection": {
            "type": "boolean",
            "description": "If true then take billing address from user"
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "numeric",
                        "dropdown"
                      ]
                    },
                    "label": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "custom"
                          ]
                        },
                        "custom": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "custom"
                      ]
                    },
                    "optional": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "key",
                    "type",
                    "label",
                    "optional"
                  ]
                }
              }
            }
          },
          "submitType": {
            "description": "Payment link submit type",
            "type": "string",
            "enum": [
              "pay",
              "book",
              "donate"
            ]
          },
          "afterCompletion": {
            "description": "After completion action to perform on checkout page",
            "type": "string",
            "enum": [
              "redirect",
              "hosted_confirmation"
            ]
          },
          "afterCompletionRedirectUrl": {
            "type": "string",
            "description": "After completion redirect url to redirect user to after payment"
          },
          "afterCompletionConfirmMsg": {
            "type": "string",
            "description": "After completion confirmation message to show to user after payment"
          },
          "suggestedCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Suggested currency to take payment in"
          },
          "suggestedAmounts": {
            "description": "Suggested amounts to show on checkout page if amount is not provided",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productId": {
            "type": "string",
            "description": "Product id to take payment for"
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          },
          "allowedChains": {
            "description": "Allowed chains to take payment from",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number",
                  "example": 1,
                  "description": "Chain id"
                },
                "isPreferred": {
                  "type": "boolean",
                  "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                }
              },
              "required": [
                "chainId",
                "isPreferred"
              ]
            }
          }
        },
        "required": [
          "type",
          "title",
          "tags",
          "nameCollection",
          "emailCollection",
          "phoneNumberCollection",
          "shippingAddressCollection",
          "billingAddressCollection",
          "submitType",
          "afterCompletion"
        ]
      },
      "PaymentLinkDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization's id"
          },
          "type": {
            "description": "Payment link type",
            "type": "string",
            "enum": [
              "one_time",
              "multiple"
            ]
          },
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Amount's currency"
          },
          "currencies": {
            "type": "array",
            "description": "Currencies in which amount is to be taken",
            "items": {
              "type": "string",
              "enum": [
                "usdc",
                "usdt",
                "dai",
                "btc",
                "eth",
                "matic",
                "bnb",
                "sol",
                "busd",
                "food",
                "tfi"
              ]
            }
          },
          "preferredCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Preferred currency. If provided then it will be selected by default on checkout page"
          },
          "title": {
            "type": "string",
            "description": "Payment link title"
          },
          "description": {
            "type": "string",
            "description": "Payment link description"
          },
          "image": {
            "type": "string",
            "description": "Payment link product image"
          },
          "publicImage": {
            "type": "string",
            "description": "Payment link product image with absolute public url"
          },
          "tags": {
            "description": "Payment link tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the payment link is currently active"
          },
          "nameCollection": {
            "type": "boolean",
            "description": "If true then take name from user"
          },
          "emailCollection": {
            "type": "boolean",
            "description": "If true then take email from user"
          },
          "phoneNumberCollection": {
            "type": "boolean",
            "description": "If true then take phone number from user"
          },
          "shippingAddressCollection": {
            "type": "boolean",
            "description": "If true then take shipping address from user"
          },
          "billingAddressCollection": {
            "type": "boolean",
            "description": "If true then take billing address from user"
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "numeric",
                        "dropdown"
                      ]
                    },
                    "label": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "custom"
                          ]
                        },
                        "custom": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "custom"
                      ]
                    },
                    "optional": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "key",
                    "type",
                    "label",
                    "optional"
                  ]
                }
              }
            }
          },
          "submitType": {
            "description": "Payment link submit type",
            "type": "string",
            "enum": [
              "pay",
              "book",
              "donate"
            ]
          },
          "afterCompletion": {
            "description": "After completion action to perform on checkout page",
            "type": "string",
            "enum": [
              "redirect",
              "hosted_confirmation"
            ]
          },
          "afterCompletionRedirectUrl": {
            "type": "string",
            "description": "After completion redirect url to redirect user to after payment"
          },
          "afterCompletionConfirmMsg": {
            "type": "string",
            "description": "After completion confirmation message to show to user after payment"
          },
          "suggestedCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Suggested currency to take payment in"
          },
          "suggestedAmounts": {
            "description": "Suggested amounts to show on checkout page if amount is not provided",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productId": {
            "type": "string",
            "description": "Product id to take payment for"
          },
          "allowedChains": {
            "description": "Allowed chains to take payment from",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number",
                  "example": 1,
                  "description": "Chain id"
                },
                "isPreferred": {
                  "type": "boolean",
                  "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                }
              },
              "required": [
                "chainId",
                "isPreferred"
              ]
            }
          },
          "interval": {
            "description": "The interval at which to bill for this price. Only required for subscriptions",
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "intervalCount": {
            "type": "number",
            "example": 1,
            "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
          },
          "priceType": {
            "description": "The type of the price",
            "type": "string",
            "enum": [
              "one_time",
              "recurring",
              "streaming"
            ]
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          }
        },
        "required": [
          "id",
          "organizationId",
          "type",
          "title",
          "tags",
          "nameCollection",
          "emailCollection",
          "phoneNumberCollection",
          "shippingAddressCollection",
          "billingAddressCollection",
          "submitType",
          "afterCompletion",
          "priceType"
        ]
      },
      "UpdatePaymentLinkDto": {
        "type": "object",
        "properties": {
          "type": {
            "description": "Payment link type",
            "type": "string",
            "enum": [
              "one_time",
              "multiple"
            ]
          },
          "amount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "Amount to take from user in 8 decimal places. If not provided then user can enter any amount"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Amount's currency"
          },
          "currencies": {
            "type": "array",
            "description": "Currencies in which amount is to be taken",
            "items": {
              "type": "string",
              "enum": [
                "usdc",
                "usdt",
                "dai",
                "btc",
                "eth",
                "matic",
                "bnb",
                "sol",
                "busd",
                "food",
                "tfi"
              ]
            }
          },
          "preferredCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Preferred currency. If provided then it will be selected by default on checkout page"
          },
          "title": {
            "type": "string",
            "description": "Payment link title"
          },
          "description": {
            "type": "string",
            "description": "Payment link description"
          },
          "image": {
            "type": "string",
            "description": "Payment link product image"
          },
          "tags": {
            "description": "Payment link tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nameCollection": {
            "type": "boolean",
            "description": "If true then take name from user"
          },
          "emailCollection": {
            "type": "boolean",
            "description": "If true then take email from user"
          },
          "phoneNumberCollection": {
            "type": "boolean",
            "description": "If true then take phone number from user"
          },
          "shippingAddressCollection": {
            "type": "boolean",
            "description": "If true then take shipping address from user"
          },
          "billingAddressCollection": {
            "type": "boolean",
            "description": "If true then take billing address from user"
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "numeric",
                        "dropdown"
                      ]
                    },
                    "label": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "custom"
                          ]
                        },
                        "custom": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "custom"
                      ]
                    },
                    "optional": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "required": [
                    "key",
                    "type",
                    "label",
                    "optional"
                  ]
                }
              }
            }
          },
          "submitType": {
            "description": "Payment link submit type",
            "type": "string",
            "enum": [
              "pay",
              "book",
              "donate"
            ]
          },
          "afterCompletion": {
            "description": "After completion action to perform on checkout page",
            "type": "string",
            "enum": [
              "redirect",
              "hosted_confirmation"
            ]
          },
          "afterCompletionRedirectUrl": {
            "type": "string",
            "description": "After completion redirect url to redirect user to after payment"
          },
          "afterCompletionConfirmMsg": {
            "type": "string",
            "description": "After completion confirmation message to show to user after payment"
          },
          "suggestedCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "Suggested currency to take payment in"
          },
          "suggestedAmounts": {
            "description": "Suggested amounts to show on checkout page if amount is not provided",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productId": {
            "type": "string",
            "description": "Product id to take payment for"
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          },
          "allowedChains": {
            "description": "Allowed chains to take payment from",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number",
                  "example": 1,
                  "description": "Chain id"
                },
                "isPreferred": {
                  "type": "boolean",
                  "description": "Is this chain preferred. If yes then it will be selected by default on checkout page"
                }
              },
              "required": [
                "chainId",
                "isPreferred"
              ]
            }
          }
        },
        "required": [
          "type",
          "title",
          "tags",
          "nameCollection",
          "emailCollection",
          "phoneNumberCollection",
          "shippingAddressCollection",
          "billingAddressCollection",
          "submitType",
          "afterCompletion"
        ]
      },
      "CreatePriceDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The currency symbol"
          },
          "interval": {
            "description": "The interval at which to bill for this price. Only required for subscriptions",
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "intervalCount": {
            "type": "number",
            "example": 1,
            "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
          },
          "unitAmount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
          },
          "customPreset": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
          },
          "customUnitAmountSuggestions": {
            "description": "Amount suggestions for this price. Only if unit amount is not provided",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          },
          "visibility": {
            "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
            "type": "string",
            "enum": [
              10,
              20
            ]
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
          },
          "type": {
            "description": "The type of the price. If price has interval and type is not provided then price type is set to default price type configured in settings",
            "default": "one_time",
            "type": "string",
            "enum": [
              "one_time",
              "recurring",
              "streaming"
            ]
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "Product's id to create a price for"
          },
          "productData": {
            "description": "The product data to create a product and a price for",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product. Displayed on the checkout page"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the product. Displayed on the checkout page"
                  },
                  "images": {
                    "maxItems": 8,
                    "description": "The url of product images. Displayed on the checkout page",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unitLabel": {
                    "type": "string",
                    "description": "The label of the unit of the product. Displayed on the checkout page"
                  },
                  "url": {
                    "type": "string",
                    "description": "The url of the product"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the product"
                  },
                  "visibility": {
                    "description": "The visibility of the product",
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  }
                },
                "required": [
                  "name"
                ]
              }
            ]
          }
        },
        "required": [
          "currency",
          "type"
        ]
      },
      "PriceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "billingScheme": {
            "description": "The billing scheme to use for this price",
            "type": "string",
            "enum": [
              "per_unit"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The currency symbol"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "Product's id"
          },
          "interval": {
            "description": "The interval at which to bill for this price. Only required for subscriptions",
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "intervalCount": {
            "type": "number",
            "example": 1,
            "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the price is currently active"
          },
          "usageType": {
            "description": "The usage type of the price.",
            "type": "string",
            "enum": [
              "licensed"
            ]
          },
          "type": {
            "description": "The type of the price",
            "type": "string",
            "enum": [
              "one_time",
              "recurring",
              "streaming"
            ]
          },
          "unitAmount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
          },
          "unitAmountDecimal": {
            "type": "string"
          },
          "customUnitMax": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
          },
          "customUnitMin": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
          },
          "customPreset": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
          },
          "customUnitAmountSuggestions": {
            "description": "Amount suggestions for this price. Only if unit amount is not provided",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "product": {
            "description": "The product this price belongs to",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the product. Displayed on the checkout page"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the product. Displayed on the checkout page"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the product is currently active"
                  },
                  "images": {
                    "maxItems": 8,
                    "description": "The url of product images. Displayed on the checkout page",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "publicImages": {
                    "description": "Product images with absolute public url",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unitLabel": {
                    "type": "string",
                    "description": "The label of the unit of the product. Displayed on the checkout page"
                  },
                  "url": {
                    "type": "string",
                    "description": "The url of the product"
                  },
                  "defaultPriceId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "Product's default price id"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the product"
                  },
                  "visibility": {
                    "description": "The visibility of the product",
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            ]
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          },
          "visibility": {
            "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
            "type": "string",
            "enum": [
              10,
              20
            ]
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
          }
        },
        "required": [
          "id",
          "currency",
          "productId",
          "type",
          "product"
        ]
      },
      "UpdatePriceDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Whether the price is currently active"
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ],
            "description": "The visibility of the price. If dashboard, the price is visible in the dashboard"
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the price, not displayed to customer. Only visible in the dashboard"
          }
        }
      },
      "DefaultPriceDataDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "one_time",
              "recurring",
              "streaming"
            ],
            "description": "The type of the price"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The currency symbol"
          },
          "unitAmount": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807",
            "description": "The unit amount in 8 decimals, represented as a whole integer"
          },
          "interval": {
            "description": "The interval at which to bill for this price. Only required for subscriptions",
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "intervalCount": {
            "type": "number",
            "example": 1,
            "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
          }
        },
        "required": [
          "currency",
          "unitAmount"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the product. Displayed on the checkout page"
          },
          "description": {
            "type": "string",
            "description": "The description of the product. Displayed on the checkout page"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the product is currently active"
          },
          "images": {
            "maxItems": 8,
            "description": "The url of product images. Displayed on the checkout page",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitLabel": {
            "type": "string",
            "description": "The label of the unit of the product. Displayed on the checkout page"
          },
          "url": {
            "type": "string",
            "description": "The url of the product"
          },
          "metadata": {
            "type": "object",
            "description": "The metadata of the product"
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ],
            "description": "The visibility of the product"
          },
          "defaultPriceData": {
            "description": "The default price data to attach to the product",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "one_time",
                      "recurring",
                      "streaming"
                    ],
                    "description": "The type of the price"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The currency symbol"
                  },
                  "unitAmount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The unit amount in 8 decimals, represented as a whole integer"
                  },
                  "interval": {
                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                    "type": "string",
                    "enum": [
                      "day",
                      "week",
                      "month",
                      "year"
                    ]
                  },
                  "intervalCount": {
                    "type": "number",
                    "example": 1,
                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                  }
                },
                "required": [
                  "currency",
                  "unitAmount"
                ]
              }
            ]
          }
        },
        "required": [
          "name",
          "defaultPriceData"
        ]
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the product. Displayed on the checkout page"
          },
          "description": {
            "type": "string",
            "description": "The description of the product. Displayed on the checkout page"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the product is currently active"
          },
          "images": {
            "maxItems": 8,
            "description": "The url of product images. Displayed on the checkout page",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publicImages": {
            "description": "Product images with absolute public url",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitLabel": {
            "type": "string",
            "description": "The label of the unit of the product. Displayed on the checkout page"
          },
          "url": {
            "type": "string",
            "description": "The url of the product"
          },
          "defaultPriceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "Product's default price id"
          },
          "metadata": {
            "type": "object",
            "description": "The metadata of the product"
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ],
            "description": "The visibility of the product"
          },
          "defaultPrice": {
            "description": "The default price of the product",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "billingScheme": {
                    "description": "The billing scheme to use for this price",
                    "type": "string",
                    "enum": [
                      "per_unit"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The currency symbol"
                  },
                  "productId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "Product's id"
                  },
                  "interval": {
                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                    "type": "string",
                    "enum": [
                      "day",
                      "week",
                      "month",
                      "year"
                    ]
                  },
                  "intervalCount": {
                    "type": "number",
                    "example": 1,
                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether the price is currently active"
                  },
                  "usageType": {
                    "description": "The usage type of the price.",
                    "type": "string",
                    "enum": [
                      "licensed"
                    ]
                  },
                  "type": {
                    "description": "The type of the price",
                    "type": "string",
                    "enum": [
                      "one_time",
                      "recurring",
                      "streaming"
                    ]
                  },
                  "unitAmount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                  },
                  "unitAmountDecimal": {
                    "type": "string"
                  },
                  "customUnitMax": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                  },
                  "customUnitMin": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                  },
                  "customPreset": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                  },
                  "customUnitAmountSuggestions": {
                    "description": "Amount suggestions for this price. Only if unit amount is not provided",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "product": {
                    "description": "The product this price belongs to",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the product. Displayed on the checkout page"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the product. Displayed on the checkout page"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the product is currently active"
                          },
                          "images": {
                            "maxItems": 8,
                            "description": "The url of product images. Displayed on the checkout page",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "publicImages": {
                            "description": "Product images with absolute public url",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "unitLabel": {
                            "type": "string",
                            "description": "The label of the unit of the product. Displayed on the checkout page"
                          },
                          "url": {
                            "type": "string",
                            "description": "The url of the product"
                          },
                          "defaultPriceId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                            "description": "Product's default price id"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "The metadata of the product"
                          },
                          "visibility": {
                            "description": "The visibility of the product",
                            "type": "string",
                            "enum": [
                              10,
                              20
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ]
                      }
                    ]
                  },
                  "metadata": {
                    "type": "object",
                    "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                  },
                  "visibility": {
                    "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                    "type": "string",
                    "enum": [
                      10,
                      20
                    ]
                  }
                },
                "required": [
                  "id",
                  "currency",
                  "productId",
                  "type",
                  "product"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the product. Displayed on the checkout page"
          },
          "description": {
            "type": "string",
            "description": "The description of the product. Displayed on the checkout page"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the product is currently active"
          },
          "images": {
            "maxItems": 8,
            "description": "The url of product images. Displayed on the checkout page",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unitLabel": {
            "type": "string",
            "description": "The label of the unit of the product. Displayed on the checkout page"
          },
          "url": {
            "type": "string",
            "description": "The url of the product"
          },
          "metadata": {
            "type": "object",
            "description": "The metadata of the product"
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ],
            "description": "The visibility of the product"
          },
          "defaultPriceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "Product's default price id"
          }
        },
        "required": [
          "name",
          "defaultPriceId"
        ]
      },
      "CollectionMethod": {
        "type": "string",
        "enum": [
          "superfluid",
          "charge_automatically",
          "send_invoice"
        ]
      },
      "SubscriptionStatus": {
        "type": "string",
        "enum": [
          "incomplete",
          "incomplete_expired",
          "trialing",
          "active",
          "past_due",
          "canceled",
          "unpaid",
          "paused"
        ]
      },
      "SubscriptionPriceItemDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "price": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "billingScheme": {
                "description": "The billing scheme to use for this price",
                "type": "string",
                "enum": [
                  "per_unit"
                ]
              },
              "currency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi"
                ],
                "description": "The currency symbol"
              },
              "productId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                "description": "Product's id"
              },
              "interval": {
                "description": "The interval at which to bill for this price. Only required for subscriptions",
                "type": "string",
                "enum": [
                  "day",
                  "week",
                  "month",
                  "year"
                ]
              },
              "intervalCount": {
                "type": "number",
                "example": 1,
                "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
              },
              "isActive": {
                "type": "boolean",
                "description": "Whether the price is currently active"
              },
              "usageType": {
                "description": "The usage type of the price.",
                "type": "string",
                "enum": [
                  "licensed"
                ]
              },
              "type": {
                "description": "The type of the price",
                "type": "string",
                "enum": [
                  "one_time",
                  "recurring",
                  "streaming"
                ]
              },
              "unitAmount": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
              },
              "unitAmountDecimal": {
                "type": "string"
              },
              "customUnitMax": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
              },
              "customUnitMin": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
              },
              "customPreset": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
              },
              "customUnitAmountSuggestions": {
                "description": "Amount suggestions for this price. Only if unit amount is not provided",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "product": {
                "description": "The product this price belongs to",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the product. Displayed on the checkout page"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the product. Displayed on the checkout page"
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "Whether the product is currently active"
                      },
                      "images": {
                        "maxItems": 8,
                        "description": "The url of product images. Displayed on the checkout page",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "publicImages": {
                        "description": "Product images with absolute public url",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "unitLabel": {
                        "type": "string",
                        "description": "The label of the unit of the product. Displayed on the checkout page"
                      },
                      "url": {
                        "type": "string",
                        "description": "The url of the product"
                      },
                      "defaultPriceId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                        "description": "Product's default price id"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "The metadata of the product"
                      },
                      "visibility": {
                        "description": "The visibility of the product",
                        "type": "string",
                        "enum": [
                          10,
                          20
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                ]
              },
              "metadata": {
                "type": "object",
                "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
              },
              "visibility": {
                "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                "type": "string",
                "enum": [
                  10,
                  20
                ]
              }
            },
            "required": [
              "id",
              "currency",
              "productId",
              "type",
              "product"
            ]
          }
        },
        "required": [
          "price"
        ]
      },
      "SubscriptionPriceItemsDto": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingScheme": {
                      "description": "The billing scheme to use for this price",
                      "type": "string",
                      "enum": [
                        "per_unit"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "The currency symbol"
                    },
                    "productId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's id"
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the price is currently active"
                    },
                    "usageType": {
                      "description": "The usage type of the price.",
                      "type": "string",
                      "enum": [
                        "licensed"
                      ]
                    },
                    "type": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "unitAmount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                    },
                    "unitAmountDecimal": {
                      "type": "string"
                    },
                    "customUnitMax": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customUnitMin": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customPreset": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                    },
                    "customUnitAmountSuggestions": {
                      "description": "Amount suggestions for this price. Only if unit amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product": {
                      "description": "The product this price belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product. Displayed on the checkout page"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the product. Displayed on the checkout page"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the product is currently active"
                            },
                            "images": {
                              "maxItems": 8,
                              "description": "The url of product images. Displayed on the checkout page",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "publicImages": {
                              "description": "Product images with absolute public url",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "unitLabel": {
                              "type": "string",
                              "description": "The label of the unit of the product. Displayed on the checkout page"
                            },
                            "url": {
                              "type": "string",
                              "description": "The url of the product"
                            },
                            "defaultPriceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's default price id"
                            },
                            "metadata": {
                              "type": "object",
                              "description": "The metadata of the product"
                            },
                            "visibility": {
                              "description": "The visibility of the product",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "visibility": {
                      "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "productId",
                    "type",
                    "product"
                  ]
                }
              },
              "required": [
                "price"
              ]
            }
          }
        }
      },
      "SubscriptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clientReferenceId": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ]
          },
          "collectionMethod": {
            "type": "string",
            "enum": [
              "superfluid",
              "charge_automatically",
              "send_invoice"
            ]
          },
          "interval": {
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "intervalCount": {
            "type": "number",
            "example": 1
          },
          "paymentMethodTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "superfluid",
                "wallet",
                "allowance_based_recurring",
                "stripe",
                "binance_pay"
              ]
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "incomplete",
              "incomplete_expired",
              "trialing",
              "active",
              "past_due",
              "canceled",
              "unpaid",
              "paused"
            ]
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "defaultPaymentMethod": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "assetId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
              },
              "asset": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Asset id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Asset name"
                  },
                  "chainId": {
                    "type": "number",
                    "example": 1,
                    "description": "Asset chain id"
                  },
                  "address": {
                    "type": "string",
                    "description": "Asset address on chain"
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi",
                      "usd",
                      "inr"
                    ],
                    "description": "Asset currency symbol"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Asset symbol"
                  },
                  "decimals": {
                    "type": "number",
                    "example": 1,
                    "description": "Asset decimals in which it is represented on chain"
                  },
                  "coingeckoId": {
                    "type": "string",
                    "description": "Asset coingecko id"
                  },
                  "superToken": {
                    "description": "SuperToken data",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "SuperToken's address"
                          },
                          "decimals": {
                            "type": "number",
                            "example": 1
                          },
                          "symbol": {
                            "type": "string",
                            "description": "SuperToken's symbol"
                          }
                        },
                        "required": [
                          "address",
                          "decimals",
                          "symbol"
                        ]
                      }
                    ]
                  },
                  "isEIP5827Supported": {
                    "type": "boolean",
                    "description": "Is EIP5827 supported"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "chainId",
                  "address",
                  "currency",
                  "symbol",
                  "decimals",
                  "isEIP5827Supported"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "superfluid",
                  "wallet",
                  "allowance_based_recurring",
                  "stripe",
                  "binance_pay"
                ]
              },
              "accountAddress": {
                "type": "string"
              },
              "billingDetails": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "customerId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
              },
              "options": {
                "type": "object"
              }
            },
            "required": [
              "id",
              "assetId",
              "asset",
              "type"
            ]
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "customer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name"
              },
              "email": {
                "type": "string",
                "description": "The email"
              },
              "phone": {
                "type": "string",
                "description": "The phone"
              },
              "organizationName": {
                "type": "string",
                "description": "The organization name"
              },
              "address": {
                "description": "The address",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  }
                ]
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                "description": "Customer's id"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string",
                "description": "Customer's created at"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string",
                "description": "Customer's updated at"
              },
              "customerReferenceId": {
                "type": "string",
                "description": "Customer's reference id"
              },
              "shipping": {
                "description": "Customer's shipping address",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone"
                      },
                      "organizationName": {
                        "type": "string",
                        "description": "The organization name"
                      },
                      "address": {
                        "description": "The address",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "postalCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "taxIds": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "customerId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        }
                      },
                      "required": [
                        "id",
                        "customerId"
                      ]
                    }
                  }
                }
              },
              "visibility": {
                "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                "type": "string",
                "enum": [
                  10,
                  20
                ]
              },
              "metadata": {
                "type": "object",
                "description": "Customer's metadata"
              },
              "customerNumber": {
                "type": "string",
                "description": "Customer number assigned by the system"
              }
            },
            "required": [
              "id",
              "customerNumber"
            ]
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endedAt": {
            "format": "date-time",
            "type": "string"
          },
          "cancelAt": {
            "format": "date-time",
            "type": "string"
          },
          "canceledAt": {
            "format": "date-time",
            "type": "string"
          },
          "lineItems": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "number",
                      "example": 1
                    },
                    "price": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "billingScheme": {
                          "description": "The billing scheme to use for this price",
                          "type": "string",
                          "enum": [
                            "per_unit"
                          ]
                        },
                        "currency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The currency symbol"
                        },
                        "productId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Product's id"
                        },
                        "interval": {
                          "description": "The interval at which to bill for this price. Only required for subscriptions",
                          "type": "string",
                          "enum": [
                            "day",
                            "week",
                            "month",
                            "year"
                          ]
                        },
                        "intervalCount": {
                          "type": "number",
                          "example": 1,
                          "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                        },
                        "isActive": {
                          "type": "boolean",
                          "description": "Whether the price is currently active"
                        },
                        "usageType": {
                          "description": "The usage type of the price.",
                          "type": "string",
                          "enum": [
                            "licensed"
                          ]
                        },
                        "type": {
                          "description": "The type of the price",
                          "type": "string",
                          "enum": [
                            "one_time",
                            "recurring",
                            "streaming"
                          ]
                        },
                        "unitAmount": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                        },
                        "unitAmountDecimal": {
                          "type": "string"
                        },
                        "customUnitMax": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                        },
                        "customUnitMin": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                        },
                        "customPreset": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                        },
                        "customUnitAmountSuggestions": {
                          "description": "Amount suggestions for this price. Only if unit amount is not provided",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "product": {
                          "description": "The product this price belongs to",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the product. Displayed on the checkout page"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description of the product. Displayed on the checkout page"
                                },
                                "isActive": {
                                  "type": "boolean",
                                  "description": "Whether the product is currently active"
                                },
                                "images": {
                                  "maxItems": 8,
                                  "description": "The url of product images. Displayed on the checkout page",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "publicImages": {
                                  "description": "Product images with absolute public url",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "unitLabel": {
                                  "type": "string",
                                  "description": "The label of the unit of the product. Displayed on the checkout page"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The url of the product"
                                },
                                "defaultPriceId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                  "description": "Product's default price id"
                                },
                                "metadata": {
                                  "type": "object",
                                  "description": "The metadata of the product"
                                },
                                "visibility": {
                                  "description": "The visibility of the product",
                                  "type": "string",
                                  "enum": [
                                    10,
                                    20
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                        },
                        "visibility": {
                          "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "currency",
                        "productId",
                        "type",
                        "product"
                      ]
                    }
                  },
                  "required": [
                    "price"
                  ]
                }
              }
            }
          },
          "cancellationReason": {
            "type": "string"
          },
          "currentPeriodEnd": {
            "format": "date-time",
            "type": "string"
          },
          "currentPeriodStart": {
            "format": "date-time",
            "type": "string"
          },
          "cancelAtPeriodEnd": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "currency",
          "interval",
          "status",
          "lineItems"
        ]
      },
      "SubscriptionCancelDto": {
        "type": "object",
        "properties": {
          "cancellationComment": {
            "type": "string"
          }
        }
      },
      "InvoiceCustomFieldsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "InvoiceCustomFieldDto": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        }
      },
      "LineItemDto": {
        "type": "object",
        "properties": {
          "priceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
            "description": "The id of the price to use in checkout session"
          },
          "priceData": {
            "description": "The price data to be created to use in checkout session",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The currency symbol"
                  },
                  "interval": {
                    "description": "The interval at which to bill for this price. Only required for subscriptions",
                    "type": "string",
                    "enum": [
                      "day",
                      "week",
                      "month",
                      "year"
                    ]
                  },
                  "intervalCount": {
                    "type": "number",
                    "example": 1,
                    "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                  },
                  "unitAmount": {
                    "format": "int64",
                    "type": "integer",
                    "example": "9223372036854775807",
                    "description": "The unit amount in 8 decimals, represented as a whole integer"
                  },
                  "productId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                    "description": "The id of the product for which this price is associated"
                  },
                  "productData": {
                    "description": "The product data to be created to link with this price",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the product. Displayed on the checkout page"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the product. Displayed on the checkout page"
                          },
                          "images": {
                            "maxItems": 8,
                            "description": "The url of product images. Displayed on the checkout page",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "unitLabel": {
                            "type": "string",
                            "description": "The label of the unit of the product. Displayed on the checkout page"
                          },
                          "url": {
                            "type": "string",
                            "description": "The url of the product"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "The metadata of the product"
                          },
                          "visibility": {
                            "description": "The visibility of the product",
                            "type": "string",
                            "enum": [
                              10,
                              20
                            ]
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    ]
                  },
                  "type": {
                    "description": "The type of the price",
                    "type": "string",
                    "enum": [
                      "one_time",
                      "recurring",
                      "streaming"
                    ]
                  }
                },
                "required": [
                  "currency",
                  "unitAmount"
                ]
              }
            ]
          },
          "quantity": {
            "type": "number",
            "example": 1,
            "default": 1,
            "description": "The quantity of the line item"
          },
          "periodStart": {
            "format": "date-time",
            "type": "string"
          },
          "periodEnd": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "CreatePriceItemsDto": {
        "type": "object",
        "properties": {
          "data": {
            "minItems": 1,
            "description": "The line items to be used in checkout session",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "priceId": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                  "description": "The id of the price to use in checkout session"
                },
                "priceData": {
                  "description": "The price data to be created to use in checkout session",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The currency symbol"
                        },
                        "interval": {
                          "description": "The interval at which to bill for this price. Only required for subscriptions",
                          "type": "string",
                          "enum": [
                            "day",
                            "week",
                            "month",
                            "year"
                          ]
                        },
                        "intervalCount": {
                          "type": "number",
                          "example": 1,
                          "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                        },
                        "unitAmount": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The unit amount in 8 decimals, represented as a whole integer"
                        },
                        "productId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "The id of the product for which this price is associated"
                        },
                        "productData": {
                          "description": "The product data to be created to link with this price",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the product. Displayed on the checkout page"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description of the product. Displayed on the checkout page"
                                },
                                "images": {
                                  "maxItems": 8,
                                  "description": "The url of product images. Displayed on the checkout page",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "unitLabel": {
                                  "type": "string",
                                  "description": "The label of the unit of the product. Displayed on the checkout page"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The url of the product"
                                },
                                "metadata": {
                                  "type": "object",
                                  "description": "The metadata of the product"
                                },
                                "visibility": {
                                  "description": "The visibility of the product",
                                  "type": "string",
                                  "enum": [
                                    10,
                                    20
                                  ]
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          ]
                        },
                        "type": {
                          "description": "The type of the price",
                          "type": "string",
                          "enum": [
                            "one_time",
                            "recurring",
                            "streaming"
                          ]
                        }
                      },
                      "required": [
                        "currency",
                        "unitAmount"
                      ]
                    }
                  ]
                },
                "quantity": {
                  "type": "number",
                  "example": 1,
                  "default": 1,
                  "description": "The quantity of the line item"
                },
                "periodStart": {
                  "format": "date-time",
                  "type": "string"
                },
                "periodEnd": {
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateInvoicePaymentSettingDto": {
        "type": "object",
        "properties": {
          "allowedChains": {
            "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
            "example": [
              {
                "chainId": 137
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number",
                  "example": 1
                },
                "blacklistCurrencies": {
                  "type": "array",
                  "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                  "example": [
                    "usdc"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ]
                  }
                }
              },
              "required": [
                "chainId"
              ]
            }
          },
          "preferredChainId": {
            "type": "number",
            "example": 1,
            "description": "The preferred chain's id"
          },
          "preferredCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The preferred currency for payment"
          },
          "allowSwap": {
            "type": "boolean",
            "description": "Whether the user can swap the payment currency",
            "default": false
          }
        }
      },
      "CreateInvoiceDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              }
            }
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "fromInvoiceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "metadata": {
            "type": "object"
          },
          "clientReferenceId": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ]
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "lineItems": {
            "type": "object",
            "properties": {
              "data": {
                "minItems": 1,
                "description": "The line items to be used in checkout session",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "priceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The id of the price to use in checkout session"
                    },
                    "priceData": {
                      "description": "The price data to be created to use in checkout session",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "The id of the product for which this price is associated"
                            },
                            "productData": {
                              "description": "The product data to be created to link with this price",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            }
                          },
                          "required": [
                            "currency",
                            "unitAmount"
                          ]
                        }
                      ]
                    },
                    "quantity": {
                      "type": "number",
                      "example": 1,
                      "default": 1,
                      "description": "The quantity of the line item"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          },
          "paymentSetting": {
            "type": "object",
            "properties": {
              "allowedChains": {
                "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                "example": [
                  {
                    "chainId": 137
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "number",
                      "example": 1
                    },
                    "blacklistCurrencies": {
                      "type": "array",
                      "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                      "example": [
                        "usdc"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    }
                  },
                  "required": [
                    "chainId"
                  ]
                }
              },
              "preferredChainId": {
                "type": "number",
                "example": 1,
                "description": "The preferred chain's id"
              },
              "preferredCurrency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi"
                ],
                "description": "The preferred currency for payment"
              },
              "allowSwap": {
                "type": "boolean",
                "description": "Whether the user can swap the payment currency",
                "default": false
              }
            }
          }
        }
      },
      "InvoiceCollectionMethod": {
        "type": "string",
        "enum": [
          "charge_automatically",
          "send_invoice"
        ]
      },
      "InvoiceStatus": {
        "type": "string",
        "enum": [
          "draft",
          "open",
          "paid",
          "void",
          "uncollectible"
        ]
      },
      "InvoicePriceItemDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "periodStart": {
            "format": "date-time",
            "type": "string"
          },
          "periodEnd": {
            "format": "date-time",
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "price": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "billingScheme": {
                "description": "The billing scheme to use for this price",
                "type": "string",
                "enum": [
                  "per_unit"
                ]
              },
              "currency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi"
                ],
                "description": "The currency symbol"
              },
              "productId": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                "description": "Product's id"
              },
              "interval": {
                "description": "The interval at which to bill for this price. Only required for subscriptions",
                "type": "string",
                "enum": [
                  "day",
                  "week",
                  "month",
                  "year"
                ]
              },
              "intervalCount": {
                "type": "number",
                "example": 1,
                "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
              },
              "isActive": {
                "type": "boolean",
                "description": "Whether the price is currently active"
              },
              "usageType": {
                "description": "The usage type of the price.",
                "type": "string",
                "enum": [
                  "licensed"
                ]
              },
              "type": {
                "description": "The type of the price",
                "type": "string",
                "enum": [
                  "one_time",
                  "recurring",
                  "streaming"
                ]
              },
              "unitAmount": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
              },
              "unitAmountDecimal": {
                "type": "string"
              },
              "customUnitMax": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
              },
              "customUnitMin": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
              },
              "customPreset": {
                "format": "int64",
                "type": "integer",
                "example": "9223372036854775807",
                "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
              },
              "customUnitAmountSuggestions": {
                "description": "Amount suggestions for this price. Only if unit amount is not provided",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "product": {
                "description": "The product this price belongs to",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the product. Displayed on the checkout page"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the product. Displayed on the checkout page"
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "Whether the product is currently active"
                      },
                      "images": {
                        "maxItems": 8,
                        "description": "The url of product images. Displayed on the checkout page",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "publicImages": {
                        "description": "Product images with absolute public url",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "unitLabel": {
                        "type": "string",
                        "description": "The label of the unit of the product. Displayed on the checkout page"
                      },
                      "url": {
                        "type": "string",
                        "description": "The url of the product"
                      },
                      "defaultPriceId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                        "description": "Product's default price id"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "The metadata of the product"
                      },
                      "visibility": {
                        "description": "The visibility of the product",
                        "type": "string",
                        "enum": [
                          10,
                          20
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                ]
              },
              "metadata": {
                "type": "object",
                "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
              },
              "visibility": {
                "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                "type": "string",
                "enum": [
                  10,
                  20
                ]
              }
            },
            "required": [
              "id",
              "currency",
              "productId",
              "type",
              "product"
            ]
          }
        },
        "required": [
          "price"
        ]
      },
      "InvoicePriceItemsDto": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "periodStart": {
                  "format": "date-time",
                  "type": "string"
                },
                "periodEnd": {
                  "format": "date-time",
                  "type": "string"
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "billingScheme": {
                      "description": "The billing scheme to use for this price",
                      "type": "string",
                      "enum": [
                        "per_unit"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ],
                      "description": "The currency symbol"
                    },
                    "productId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "Product's id"
                    },
                    "interval": {
                      "description": "The interval at which to bill for this price. Only required for subscriptions",
                      "type": "string",
                      "enum": [
                        "day",
                        "week",
                        "month",
                        "year"
                      ]
                    },
                    "intervalCount": {
                      "type": "number",
                      "example": 1,
                      "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the price is currently active"
                    },
                    "usageType": {
                      "description": "The usage type of the price.",
                      "type": "string",
                      "enum": [
                        "licensed"
                      ]
                    },
                    "type": {
                      "description": "The type of the price",
                      "type": "string",
                      "enum": [
                        "one_time",
                        "recurring",
                        "streaming"
                      ]
                    },
                    "unitAmount": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                    },
                    "unitAmountDecimal": {
                      "type": "string"
                    },
                    "customUnitMax": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customUnitMin": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                    },
                    "customPreset": {
                      "format": "int64",
                      "type": "integer",
                      "example": "9223372036854775807",
                      "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                    },
                    "customUnitAmountSuggestions": {
                      "description": "Amount suggestions for this price. Only if unit amount is not provided",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product": {
                      "description": "The product this price belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the product. Displayed on the checkout page"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the product. Displayed on the checkout page"
                            },
                            "isActive": {
                              "type": "boolean",
                              "description": "Whether the product is currently active"
                            },
                            "images": {
                              "maxItems": 8,
                              "description": "The url of product images. Displayed on the checkout page",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "publicImages": {
                              "description": "Product images with absolute public url",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "unitLabel": {
                              "type": "string",
                              "description": "The label of the unit of the product. Displayed on the checkout page"
                            },
                            "url": {
                              "type": "string",
                              "description": "The url of the product"
                            },
                            "defaultPriceId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "Product's default price id"
                            },
                            "metadata": {
                              "type": "object",
                              "description": "The metadata of the product"
                            },
                            "visibility": {
                              "description": "The visibility of the product",
                              "type": "string",
                              "enum": [
                                10,
                                20
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                    },
                    "visibility": {
                      "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                      "type": "string",
                      "enum": [
                        10,
                        20
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "currency",
                    "productId",
                    "type",
                    "product"
                  ]
                }
              },
              "required": [
                "price"
              ]
            }
          }
        }
      },
      "InvoiceBillingReason": {
        "type": "string",
        "enum": [
          "subscription_cycle",
          "subscription_create",
          "subscription_update",
          "subscription",
          "manual",
          "upcoming",
          "subscription_threshold"
        ]
      },
      "InvoiceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "description": {
            "type": "string"
          },
          "total": {
            "format": "int64",
            "type": "integer",
            "example": "9223372036854775807"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ]
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "customer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name"
              },
              "email": {
                "type": "string",
                "description": "The email"
              },
              "phone": {
                "type": "string",
                "description": "The phone"
              },
              "organizationName": {
                "type": "string",
                "description": "The organization name"
              },
              "address": {
                "description": "The address",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  }
                ]
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                "description": "Customer's id"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string",
                "description": "Customer's created at"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string",
                "description": "Customer's updated at"
              },
              "customerReferenceId": {
                "type": "string",
                "description": "Customer's reference id"
              },
              "shipping": {
                "description": "Customer's shipping address",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone"
                      },
                      "organizationName": {
                        "type": "string",
                        "description": "The organization name"
                      },
                      "address": {
                        "description": "The address",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "postalCode": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "taxIds": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "customerId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
                        }
                      },
                      "required": [
                        "id",
                        "customerId"
                      ]
                    }
                  }
                }
              },
              "visibility": {
                "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only.",
                "type": "string",
                "enum": [
                  10,
                  20
                ]
              },
              "metadata": {
                "type": "object",
                "description": "Customer's metadata"
              },
              "customerNumber": {
                "type": "string",
                "description": "Customer number assigned by the system"
              }
            },
            "required": [
              "id",
              "customerNumber"
            ]
          },
          "autoAdvance": {
            "type": "boolean"
          },
          "collectionMethod": {
            "type": "string",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ]
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              }
            }
          },
          "paymentSettingId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "paymentSetting": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "paymentMethodTypes": {
                "type": "array",
                "description": "A list of the types of payment methods",
                "example": "wallet",
                "minItems": 1,
                "maxItems": 1,
                "items": {
                  "type": "string",
                  "enum": [
                    "superfluid",
                    "wallet",
                    "allowance_based_recurring",
                    "stripe",
                    "binance_pay"
                  ]
                }
              },
              "allowedChains": {
                "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                "example": [
                  {
                    "chainId": 137
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "number",
                      "example": 1
                    },
                    "blacklistCurrencies": {
                      "type": "array",
                      "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                      "example": [
                        "usdc"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    }
                  },
                  "required": [
                    "chainId"
                  ]
                }
              },
              "allowedCurrencies": {
                "type": "array",
                "description": "The list of currencies allowed for the payment.",
                "example": [
                  "usdc",
                  "usdt"
                ],
                "items": {
                  "type": "string",
                  "enum": [
                    "usdc",
                    "usdt",
                    "dai",
                    "btc",
                    "eth",
                    "matic",
                    "bnb",
                    "sol",
                    "busd",
                    "food",
                    "tfi"
                  ]
                }
              },
              "preferredChainId": {
                "type": "number",
                "example": 1,
                "description": "The preferred chain's id"
              },
              "preferredCurrency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi"
                ],
                "description": "The preferred currency for payment"
              },
              "allowSwap": {
                "type": "boolean",
                "description": "Whether the user can swap the payment currency",
                "default": false
              }
            },
            "required": [
              "id"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "open",
              "paid",
              "void",
              "uncollectible"
            ]
          },
          "attempted": {
            "type": "boolean"
          },
          "attemptCount": {
            "type": "number",
            "example": 1
          },
          "nextPaymentAttempt": {
            "format": "date-time",
            "type": "string"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "fromInvoiceId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "latestRevisionId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "invoicePdfUrl": {
            "type": "string"
          },
          "invoiceNumber": {
            "type": "string"
          },
          "paid": {
            "type": "boolean"
          },
          "paidOutOfBand": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object"
          },
          "clientReferenceId": {
            "type": "string"
          },
          "lineItems": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "quantity": {
                      "type": "number",
                      "example": 1
                    },
                    "price": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "billingScheme": {
                          "description": "The billing scheme to use for this price",
                          "type": "string",
                          "enum": [
                            "per_unit"
                          ]
                        },
                        "currency": {
                          "type": "string",
                          "enum": [
                            "usdc",
                            "usdt",
                            "dai",
                            "btc",
                            "eth",
                            "matic",
                            "bnb",
                            "sol",
                            "busd",
                            "food",
                            "tfi"
                          ],
                          "description": "The currency symbol"
                        },
                        "productId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                          "description": "Product's id"
                        },
                        "interval": {
                          "description": "The interval at which to bill for this price. Only required for subscriptions",
                          "type": "string",
                          "enum": [
                            "day",
                            "week",
                            "month",
                            "year"
                          ]
                        },
                        "intervalCount": {
                          "type": "number",
                          "example": 1,
                          "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                        },
                        "isActive": {
                          "type": "boolean",
                          "description": "Whether the price is currently active"
                        },
                        "usageType": {
                          "description": "The usage type of the price.",
                          "type": "string",
                          "enum": [
                            "licensed"
                          ]
                        },
                        "type": {
                          "description": "The type of the price",
                          "type": "string",
                          "enum": [
                            "one_time",
                            "recurring",
                            "streaming"
                          ]
                        },
                        "unitAmount": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The unit amount in 8 decimals, represented as a whole integer. If not provided, the unit amount will be calculated from unit_amount_decimal."
                        },
                        "unitAmountDecimal": {
                          "type": "string"
                        },
                        "customUnitMax": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The maximum amount that can be billed per unit for this price. Only if unit amount is not provided"
                        },
                        "customUnitMin": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The minimum amount that can be billed per unit for this price. Only if unit amount is not provided"
                        },
                        "customPreset": {
                          "format": "int64",
                          "type": "integer",
                          "example": "9223372036854775807",
                          "description": "The default amount to fill in the amount field for this price on checkout. Only if unit amount is not provided"
                        },
                        "customUnitAmountSuggestions": {
                          "description": "Amount suggestions for this price. Only if unit amount is not provided",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "product": {
                          "description": "The product this price belongs to",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the product. Displayed on the checkout page"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description of the product. Displayed on the checkout page"
                                },
                                "isActive": {
                                  "type": "boolean",
                                  "description": "Whether the product is currently active"
                                },
                                "images": {
                                  "maxItems": 8,
                                  "description": "The url of product images. Displayed on the checkout page",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "publicImages": {
                                  "description": "Product images with absolute public url",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "unitLabel": {
                                  "type": "string",
                                  "description": "The label of the unit of the product. Displayed on the checkout page"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The url of the product"
                                },
                                "defaultPriceId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                                  "description": "Product's default price id"
                                },
                                "metadata": {
                                  "type": "object",
                                  "description": "The metadata of the product"
                                },
                                "visibility": {
                                  "description": "The visibility of the product",
                                  "type": "string",
                                  "enum": [
                                    10,
                                    20
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                        },
                        "visibility": {
                          "description": "The visibility of the price. If dashboard, the price is visible in the dashboard",
                          "type": "string",
                          "enum": [
                            10,
                            20
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "currency",
                        "productId",
                        "type",
                        "product"
                      ]
                    }
                  },
                  "required": [
                    "price"
                  ]
                }
              }
            }
          },
          "finalizedAt": {
            "format": "date-time",
            "type": "string"
          },
          "paidAt": {
            "format": "date-time",
            "type": "string"
          },
          "markedUncollectibleAt": {
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ]
          },
          "paymentIntentId": {
            "type": "string",
            "format": "uuid",
            "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0"
          },
          "url": {
            "type": "string",
            "description": "The URL to redirect the customer to pay invoice"
          },
          "subscriptionId": {
            "type": "string"
          },
          "periodStart": {
            "format": "date-time",
            "type": "string"
          },
          "periodEnd": {
            "format": "date-time",
            "type": "string"
          },
          "billingReason": {
            "type": "string",
            "enum": [
              "subscription_cycle",
              "subscription_create",
              "subscription_update",
              "subscription",
              "manual",
              "upcoming",
              "subscription_threshold"
            ]
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          },
          "finalizeScheduleAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date on which invoice will be finalize and send"
          }
        },
        "required": [
          "id",
          "organizationId",
          "customerId",
          "customer",
          "autoAdvance",
          "collectionMethod",
          "paymentSettingId",
          "paymentSetting",
          "status",
          "attempted",
          "paid",
          "lineItems",
          "url",
          "billingReason"
        ]
      },
      "UpdateInvoiceDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "customFields": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              }
            }
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "clientReferenceId": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ]
          },
          "allowPromotionCodes": {
            "type": "boolean",
            "description": "Enables user redeemable promotion codes."
          },
          "lineItems": {
            "type": "object",
            "properties": {
              "data": {
                "minItems": 1,
                "description": "The line items to be used in checkout session",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "priceId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                      "description": "The id of the price to use in checkout session"
                    },
                    "priceData": {
                      "description": "The price data to be created to use in checkout session",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "enum": [
                                "usdc",
                                "usdt",
                                "dai",
                                "btc",
                                "eth",
                                "matic",
                                "bnb",
                                "sol",
                                "busd",
                                "food",
                                "tfi"
                              ],
                              "description": "The currency symbol"
                            },
                            "interval": {
                              "description": "The interval at which to bill for this price. Only required for subscriptions",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                              ]
                            },
                            "intervalCount": {
                              "type": "number",
                              "example": 1,
                              "description": "It is used to determine the frequency at which the subscription is billed. Only required for subscriptions"
                            },
                            "unitAmount": {
                              "format": "int64",
                              "type": "integer",
                              "example": "9223372036854775807",
                              "description": "The unit amount in 8 decimals, represented as a whole integer"
                            },
                            "productId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "c3611c05-df51-4b47-b601-f2eac02f4ef0",
                              "description": "The id of the product for which this price is associated"
                            },
                            "productData": {
                              "description": "The product data to be created to link with this price",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the product. Displayed on the checkout page"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the product. Displayed on the checkout page"
                                    },
                                    "images": {
                                      "maxItems": 8,
                                      "description": "The url of product images. Displayed on the checkout page",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "unitLabel": {
                                      "type": "string",
                                      "description": "The label of the unit of the product. Displayed on the checkout page"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "The url of the product"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "The metadata of the product"
                                    },
                                    "visibility": {
                                      "description": "The visibility of the product",
                                      "type": "string",
                                      "enum": [
                                        10,
                                        20
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "description": "The type of the price",
                              "type": "string",
                              "enum": [
                                "one_time",
                                "recurring",
                                "streaming"
                              ]
                            }
                          },
                          "required": [
                            "currency",
                            "unitAmount"
                          ]
                        }
                      ]
                    },
                    "quantity": {
                      "type": "number",
                      "example": 1,
                      "default": 1,
                      "description": "The quantity of the line item"
                    },
                    "periodStart": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "periodEnd": {
                      "format": "date-time",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          },
          "paymentSetting": {
            "type": "object",
            "properties": {
              "allowedChains": {
                "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                "example": [
                  {
                    "chainId": 137
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "number",
                      "example": 1
                    },
                    "blacklistCurrencies": {
                      "type": "array",
                      "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                      "example": [
                        "usdc"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "usdc",
                          "usdt",
                          "dai",
                          "btc",
                          "eth",
                          "matic",
                          "bnb",
                          "sol",
                          "busd",
                          "food",
                          "tfi"
                        ]
                      }
                    }
                  },
                  "required": [
                    "chainId"
                  ]
                }
              },
              "preferredChainId": {
                "type": "number",
                "example": 1,
                "description": "The preferred chain's id"
              },
              "preferredCurrency": {
                "type": "string",
                "enum": [
                  "usdc",
                  "usdt",
                  "dai",
                  "btc",
                  "eth",
                  "matic",
                  "bnb",
                  "sol",
                  "busd",
                  "food",
                  "tfi"
                ],
                "description": "The preferred currency for payment"
              },
              "allowSwap": {
                "type": "boolean",
                "description": "Whether the user can swap the payment currency",
                "default": false
              }
            }
          }
        }
      },
      "InvoiceSendDto": {
        "type": "object",
        "properties": {
          "cc": {
            "description": "The list of email addresses to send the invoice to along the customer email address",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "finalizeScheduleAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date on which the invoice should be finalized and sent"
          }
        }
      },
      "CreateCustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name"
          },
          "phone": {
            "type": "string",
            "description": "The phone"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name"
          },
          "address": {
            "description": "The address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "customerReferenceId": {
            "type": "string",
            "description": "Customer's reference id"
          },
          "shipping": {
            "description": "Customer's shipping address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ],
            "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only."
          },
          "metadata": {
            "type": "object",
            "description": "Customer's metadata"
          },
          "email": {
            "type": "string",
            "description": "The email"
          },
          "taxIds": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "email"
        ]
      },
      "UpdateCustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name"
          },
          "phone": {
            "type": "string",
            "description": "The phone"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name"
          },
          "address": {
            "description": "The address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "shipping": {
            "description": "Customer's shipping address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone"
                  },
                  "organizationName": {
                    "type": "string",
                    "description": "The organization name"
                  },
                  "address": {
                    "description": "The address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "visibility": {
            "type": "string",
            "enum": [
              10,
              20
            ],
            "description": "Customer's visibility. If Dashboard then displayed on dashboard UI. If API then only returned in API response only."
          },
          "metadata": {
            "type": "object",
            "description": "Customer's metadata"
          },
          "email": {
            "type": "string",
            "description": "The email"
          },
          "taxIds": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "email"
        ]
      },
      "ChainDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "Chain id"
          },
          "name": {
            "type": "string",
            "description": "Chain name"
          },
          "icon": {
            "type": "string",
            "description": "Chain icon"
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi",
              "usd",
              "inr"
            ],
            "description": "Chain currency symbol"
          },
          "blockExplorerTransactionUrl": {
            "type": "string",
            "description": "Chain block explorer transaction url"
          },
          "blockExplorerName": {
            "type": "string",
            "description": "Chain block explorer name"
          },
          "type": {
            "description": "Chain type",
            "type": "string",
            "enum": [
              "evm",
              "solana",
              "stripe",
              "binance_pay"
            ]
          },
          "assets": {
            "description": "Chain assets",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Asset id"
                },
                "name": {
                  "type": "string",
                  "description": "Asset name"
                },
                "chainId": {
                  "type": "number",
                  "example": 1,
                  "description": "Asset chain id"
                },
                "address": {
                  "type": "string",
                  "description": "Asset address on chain"
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "usdc",
                    "usdt",
                    "dai",
                    "btc",
                    "eth",
                    "matic",
                    "bnb",
                    "sol",
                    "busd",
                    "food",
                    "tfi",
                    "usd",
                    "inr"
                  ],
                  "description": "Asset currency symbol"
                },
                "symbol": {
                  "type": "string",
                  "description": "Asset symbol"
                },
                "decimals": {
                  "type": "number",
                  "example": 1,
                  "description": "Asset decimals in which it is represented on chain"
                },
                "coingeckoId": {
                  "type": "string",
                  "description": "Asset coingecko id"
                },
                "superToken": {
                  "description": "SuperToken data",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "SuperToken's address"
                        },
                        "decimals": {
                          "type": "number",
                          "example": 1
                        },
                        "symbol": {
                          "type": "string",
                          "description": "SuperToken's symbol"
                        }
                      },
                      "required": [
                        "address",
                        "decimals",
                        "symbol"
                      ]
                    }
                  ]
                },
                "isEIP5827Supported": {
                  "type": "boolean",
                  "description": "Is EIP5827 supported"
                }
              },
              "required": [
                "id",
                "name",
                "chainId",
                "address",
                "currency",
                "symbol",
                "decimals",
                "isEIP5827Supported"
              ]
            }
          },
          "isTestnet": {
            "type": "boolean"
          },
          "isEIP1559Supported": {
            "type": "boolean"
          },
          "hasMonitoring": {
            "type": "boolean"
          },
          "forkOf": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "id",
          "name",
          "icon",
          "currency",
          "blockExplorerTransactionUrl",
          "blockExplorerName",
          "type",
          "assets",
          "isTestnet",
          "isEIP1559Supported",
          "hasMonitoring"
        ]
      },
      "MarkPaymentAsRefundedDto": {
        "type": "object",
        "properties": {
          "markRefundedComment": {
            "type": "string"
          }
        }
      },
      "PromotionCodeSlimDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Promotion code id"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization id"
          },
          "code": {
            "type": "string",
            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
            "maxLength": 20,
            "minLength": 3
          },
          "couponId": {
            "type": "string",
            "description": "Coupon id"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
          },
          "expiredAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
          },
          "maxRedemptions": {
            "type": "number",
            "example": 1,
            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date at which the promotion code was created"
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          }
        },
        "required": [
          "id",
          "organizationId",
          "code",
          "couponId",
          "isActive"
        ]
      },
      "CouponStatus": {
        "type": "string",
        "enum": [
          "active",
          "expired",
          "disabled",
          "limit_reached"
        ]
      },
      "CouponDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Coupon id"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization id"
          },
          "name": {
            "type": "string",
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
          },
          "percentOff": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "example": 1,
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
          },
          "maxRedemptions": {
            "type": "number",
            "example": 1,
            "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
          },
          "redeemBy": {
            "format": "date-time",
            "type": "string",
            "description": "Date after which the coupon can no longer be redeemed"
          },
          "isEnable": {
            "type": "boolean",
            "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Time at which this coupon was created."
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          },
          "isArchived": {
            "type": "boolean",
            "description": "Whether the coupon is archived."
          },
          "archivedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date at which the coupon was archived"
          },
          "promotionCodes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Promotion code id"
                },
                "organizationId": {
                  "type": "string",
                  "description": "Organization id"
                },
                "code": {
                  "type": "string",
                  "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                  "maxLength": 20,
                  "minLength": 3
                },
                "couponId": {
                  "type": "string",
                  "description": "Coupon id"
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also enabled."
                },
                "expiredAt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                },
                "maxRedemptions": {
                  "type": "number",
                  "example": 1,
                  "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Date at which the promotion code was created"
                },
                "metadata": {
                  "type": "object",
                  "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                }
              },
              "required": [
                "id",
                "organizationId",
                "code",
                "couponId",
                "isActive"
              ]
            }
          },
          "status": {
            "description": "The status of the coupon.",
            "type": "string",
            "enum": [
              "active",
              "expired",
              "disabled",
              "limit_reached"
            ]
          },
          "timesRedeemed": {
            "type": "number",
            "example": 1,
            "description": "Number of times this coupon has been applied."
          }
        },
        "required": [
          "id",
          "organizationId",
          "name",
          "percentOff",
          "isEnable",
          "isArchived",
          "promotionCodes",
          "status"
        ]
      },
      "PromotionCodeDataDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
            "maxLength": 20,
            "minLength": 3
          },
          "expiredAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
          },
          "maxRedemptions": {
            "type": "number",
            "example": 1,
            "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          }
        },
        "required": [
          "code"
        ]
      },
      "CreatePromotionCodeItemsDto": {
        "type": "object",
        "properties": {
          "data": {
            "minItems": 1,
            "maxItems": 1,
            "description": "The line items to be used to create promotion code",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                  "maxLength": 20,
                  "minLength": 3
                },
                "expiredAt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                },
                "maxRedemptions": {
                  "type": "number",
                  "example": 1,
                  "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                },
                "metadata": {
                  "type": "object",
                  "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                }
              },
              "required": [
                "code"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateCouponDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
          },
          "percentOff": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "example": 1,
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon."
          },
          "maxRedemptions": {
            "type": "number",
            "example": 1,
            "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
          },
          "redeemBy": {
            "format": "date-time",
            "type": "string",
            "description": "Date after which the coupon can no longer be redeemed"
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          },
          "isEnable": {
            "type": "boolean",
            "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
          },
          "promotionCodeData": {
            "description": "The items to be used to create promotion code",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "data": {
                    "minItems": 1,
                    "maxItems": 1,
                    "description": "The line items to be used to create promotion code",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                          "maxLength": 20,
                          "minLength": 3
                        },
                        "expiredAt": {
                          "format": "date-time",
                          "type": "string",
                          "description": "Date at which the promotion code can no longer be redeemed. If the coupon has specified a redeems_by, then this value cannot be after the coupon’s redeems_by."
                        },
                        "maxRedemptions": {
                          "type": "number",
                          "example": 1,
                          "description": "Maximum number of times this promotion code can be redeemed. If the coupon has specified a max_redemptions, then this value cannot be greater than the coupon’s max_redemptions."
                        },
                        "metadata": {
                          "type": "object",
                          "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
                        }
                      },
                      "required": [
                        "code"
                      ]
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            ]
          }
        },
        "required": [
          "name",
          "percentOff",
          "promotionCodeData"
        ]
      },
      "UpdateCouponDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts."
          },
          "maxRedemptions": {
            "type": "number",
            "example": 1,
            "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid."
          },
          "redeemBy": {
            "format": "date-time",
            "type": "string",
            "description": "Date after which the coupon can no longer be redeemed"
          },
          "metadata": {
            "type": "object",
            "description": "A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format."
          },
          "isEnable": {
            "type": "boolean",
            "description": "Taking account of the above properties, whether this coupon can still be applied to a customer."
          }
        },
        "required": [
          "name"
        ]
      },
      "CurrencyPriceDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "example": 1
          },
          "currency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ]
          },
          "coingeckoId": {
            "type": "string"
          }
        },
        "required": [
          "price",
          "currency"
        ]
      },
      "CurrencyPricesDto": {
        "type": "object",
        "properties": {
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "number",
                  "example": 1
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "usdc",
                    "usdt",
                    "dai",
                    "btc",
                    "eth",
                    "matic",
                    "bnb",
                    "sol",
                    "busd",
                    "food",
                    "tfi"
                  ]
                },
                "coingeckoId": {
                  "type": "string"
                }
              },
              "required": [
                "price",
                "currency"
              ]
            }
          }
        },
        "required": [
          "prices"
        ]
      },
      "WebhookEvents": {
        "type": "string",
        "enum": [
          "*",
          "withdrawal_address.created",
          "withdrawal_address.updated",
          "withdrawal_address.deleted",
          "checkout_session.completed",
          "checkout_session.expired",
          "checkout_session.canceled",
          "customer.subscription.created",
          "customer.subscription.started",
          "customer.subscription.deleted",
          "customer.subscription.past_due",
          "customer.subscription.unpaid",
          "customer.subscription.incomplete_expired",
          "payment_intent.payment_failed",
          "payment_intent.canceled",
          "payment_intent.succeeded",
          "invoice.finalized",
          "invoice.paid",
          "invoice.marked_as_paid",
          "invoice.marked_uncollectible",
          "invoice.payment_failed"
        ]
      },
      "WebhookEventsDto": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "*",
                "withdrawal_address.created",
                "withdrawal_address.updated",
                "withdrawal_address.deleted",
                "checkout_session.completed",
                "checkout_session.expired",
                "checkout_session.canceled",
                "customer.subscription.created",
                "customer.subscription.started",
                "customer.subscription.deleted",
                "customer.subscription.past_due",
                "customer.subscription.unpaid",
                "customer.subscription.incomplete_expired",
                "payment_intent.payment_failed",
                "payment_intent.canceled",
                "payment_intent.succeeded",
                "invoice.finalized",
                "invoice.paid",
                "invoice.marked_as_paid",
                "invoice.marked_uncollectible",
                "invoice.payment_failed"
              ]
            }
          }
        },
        "required": [
          "events"
        ]
      },
      "WebhookEndpointDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "enabledEvents": {
            "type": "object",
            "properties": {
              "events": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "*",
                    "withdrawal_address.created",
                    "withdrawal_address.updated",
                    "withdrawal_address.deleted",
                    "checkout_session.completed",
                    "checkout_session.expired",
                    "checkout_session.canceled",
                    "customer.subscription.created",
                    "customer.subscription.started",
                    "customer.subscription.deleted",
                    "customer.subscription.past_due",
                    "customer.subscription.unpaid",
                    "customer.subscription.incomplete_expired",
                    "payment_intent.payment_failed",
                    "payment_intent.canceled",
                    "payment_intent.succeeded",
                    "invoice.finalized",
                    "invoice.paid",
                    "invoice.marked_as_paid",
                    "invoice.marked_uncollectible",
                    "invoice.payment_failed"
                  ]
                }
              }
            },
            "required": [
              "events"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "description",
          "url",
          "secret",
          "enabledEvents",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateWebhookEndpointDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "enabledEvents": {
            "type": "object",
            "properties": {
              "events": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "*",
                    "withdrawal_address.created",
                    "withdrawal_address.updated",
                    "withdrawal_address.deleted",
                    "checkout_session.completed",
                    "checkout_session.expired",
                    "checkout_session.canceled",
                    "customer.subscription.created",
                    "customer.subscription.started",
                    "customer.subscription.deleted",
                    "customer.subscription.past_due",
                    "customer.subscription.unpaid",
                    "customer.subscription.incomplete_expired",
                    "payment_intent.payment_failed",
                    "payment_intent.canceled",
                    "payment_intent.succeeded",
                    "invoice.finalized",
                    "invoice.paid",
                    "invoice.marked_as_paid",
                    "invoice.marked_uncollectible",
                    "invoice.payment_failed"
                  ]
                }
              }
            },
            "required": [
              "events"
            ]
          }
        },
        "required": [
          "description",
          "url",
          "enabledEvents"
        ]
      },
      "UpdateWebhookEndpointDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "enabledEvents": {
            "type": "object",
            "properties": {
              "events": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "*",
                    "withdrawal_address.created",
                    "withdrawal_address.updated",
                    "withdrawal_address.deleted",
                    "checkout_session.completed",
                    "checkout_session.expired",
                    "checkout_session.canceled",
                    "customer.subscription.created",
                    "customer.subscription.started",
                    "customer.subscription.deleted",
                    "customer.subscription.past_due",
                    "customer.subscription.unpaid",
                    "customer.subscription.incomplete_expired",
                    "payment_intent.payment_failed",
                    "payment_intent.canceled",
                    "payment_intent.succeeded",
                    "invoice.finalized",
                    "invoice.paid",
                    "invoice.marked_as_paid",
                    "invoice.marked_uncollectible",
                    "invoice.payment_failed"
                  ]
                }
              }
            },
            "required": [
              "events"
            ]
          }
        },
        "required": [
          "description",
          "url",
          "enabledEvents"
        ]
      },
      "UpdatePaymentSettingDto": {
        "type": "object",
        "properties": {
          "preferredChainId": {
            "type": "number",
            "example": 1,
            "description": "The preferred chain's id"
          },
          "preferredCurrency": {
            "type": "string",
            "enum": [
              "usdc",
              "usdt",
              "dai",
              "btc",
              "eth",
              "matic",
              "bnb",
              "sol",
              "busd",
              "food",
              "tfi"
            ],
            "description": "The preferred currency for payment"
          },
          "allowSwap": {
            "type": "boolean",
            "description": "Whether the user can swap the payment currency",
            "default": false
          }
        }
      },
      "AccountOnboardDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email. Should be unique"
          },
          "name": {
            "type": "string",
            "description": "Business name"
          },
          "website": {
            "type": "string",
            "description": "Business website"
          },
          "phone": {
            "type": "string",
            "description": "Business phone number"
          },
          "brandColor": {
            "type": "string",
            "description": "Brand color in hex format"
          },
          "addressDetails": {
            "description": "Organization's business address",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "paymentSetting": {
            "description": "Organization payment setting",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "preferredChainId": {
                    "type": "number",
                    "example": 1,
                    "description": "The preferred chain's id"
                  },
                  "preferredCurrency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The preferred currency for payment"
                  },
                  "allowSwap": {
                    "type": "boolean",
                    "description": "Whether the user can swap the payment currency",
                    "default": false
                  }
                }
              }
            ]
          },
          "withdrawalAddresses": {
            "description": "Organization withdrawal addresses",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Withdrawal address name"
                },
                "address": {
                  "type": "string",
                  "description": "Withdrawal address"
                },
                "chainId": {
                  "type": "number",
                  "example": 1,
                  "description": "Withdrawal address chain id"
                }
              },
              "required": [
                "name",
                "address",
                "chainId"
              ]
            }
          },
          "webhookEndpoints": {
            "description": "Organization webhook endpoints",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "enabledEvents": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "*",
                          "withdrawal_address.created",
                          "withdrawal_address.updated",
                          "withdrawal_address.deleted",
                          "checkout_session.completed",
                          "checkout_session.expired",
                          "checkout_session.canceled",
                          "customer.subscription.created",
                          "customer.subscription.started",
                          "customer.subscription.deleted",
                          "customer.subscription.past_due",
                          "customer.subscription.unpaid",
                          "customer.subscription.incomplete_expired",
                          "payment_intent.payment_failed",
                          "payment_intent.canceled",
                          "payment_intent.succeeded",
                          "invoice.finalized",
                          "invoice.paid",
                          "invoice.marked_as_paid",
                          "invoice.marked_uncollectible",
                          "invoice.payment_failed"
                        ]
                      }
                    }
                  },
                  "required": [
                    "events"
                  ]
                }
              },
              "required": [
                "description",
                "url",
                "enabledEvents"
              ]
            }
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "PersonalAccessTokenWithPlainTokenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tokenIdentifier": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "tokenIdentifier",
          "organizationId",
          "userId",
          "createdAt",
          "updatedAt",
          "token"
        ]
      },
      "AccountOnboardResponseDto": {
        "type": "object",
        "properties": {
          "organization": {
            "description": "Organization details",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Organization's name"
                  },
                  "type": {
                    "type": "string",
                    "description": "Organization's type"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "active",
                      "suspended"
                    ],
                    "description": "Organization's status"
                  },
                  "kind": {
                    "description": "Organization's kind",
                    "type": "string",
                    "enum": [
                      "individual",
                      "business"
                    ]
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "User's id who owns organization"
                  },
                  "noOfEmployees": {
                    "type": "string",
                    "description": "No of employees"
                  },
                  "monthlyPaymentVolume": {
                    "type": "string",
                    "description": "Monthly payment volume"
                  },
                  "addresses": {
                    "description": "Withdrawal addresses",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Withdrawal address id"
                        },
                        "name": {
                          "type": "string",
                          "description": "Withdrawal address name"
                        },
                        "address": {
                          "type": "string",
                          "description": "Withdrawal address"
                        },
                        "chainId": {
                          "type": "number",
                          "example": 1,
                          "description": "Withdrawal address chain id"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "description": "Is default withdrawal address"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "address",
                        "chainId",
                        "isDefault"
                      ]
                    }
                  },
                  "email": {
                    "type": "string",
                    "description": "Organization's support email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Organization's support phone number"
                  },
                  "addressDetails": {
                    "description": "Organization's business address",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "brandLogo": {
                    "type": "string",
                    "description": "Brand logo url"
                  },
                  "brandColor": {
                    "type": "string",
                    "description": "Brand color in hex format"
                  },
                  "supportUrl": {
                    "type": "string",
                    "description": "Organization's support url"
                  },
                  "termsUrl": {
                    "type": "string",
                    "description": "Organization's terms and conditions url"
                  },
                  "privacyUrl": {
                    "type": "string",
                    "description": "Organization's privacy policy url"
                  },
                  "websiteUrl": {
                    "type": "string",
                    "description": "Organization's website url"
                  },
                  "featureAccessRequests": {
                    "description": "Feature access requests from organization",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id",
                  "name",
                  "type",
                  "status",
                  "kind",
                  "ownerId",
                  "noOfEmployees",
                  "monthlyPaymentVolume",
                  "addresses",
                  "brandLogo",
                  "brandColor",
                  "featureAccessRequests"
                ]
              }
            ]
          },
          "user": {
            "description": "User details",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "profilePicture": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "active",
                      "suspended"
                    ]
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "flags": {
                    "type": "object",
                    "properties": {
                      "introModal": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "required": [
                  "id",
                  "firstName",
                  "lastName",
                  "role",
                  "status"
                ]
              }
            ]
          },
          "paymentSetting": {
            "description": "Organization payment setting details",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "paymentMethodTypes": {
                    "type": "array",
                    "description": "A list of the types of payment methods",
                    "example": "wallet",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                      "type": "string",
                      "enum": [
                        "superfluid",
                        "wallet",
                        "allowance_based_recurring",
                        "stripe",
                        "binance_pay"
                      ]
                    }
                  },
                  "allowedChains": {
                    "description": "The list of chains allowed for the payment. If not provided, all chains supported by the organization are enabled.",
                    "example": [
                      {
                        "chainId": 137
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chainId": {
                          "type": "number",
                          "example": 1
                        },
                        "blacklistCurrencies": {
                          "type": "array",
                          "description": "The list of currencies to disable for the payment. Note: This field is only used for checkout session API atm.",
                          "example": [
                            "usdc"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "usdc",
                              "usdt",
                              "dai",
                              "btc",
                              "eth",
                              "matic",
                              "bnb",
                              "sol",
                              "busd",
                              "food",
                              "tfi"
                            ]
                          }
                        }
                      },
                      "required": [
                        "chainId"
                      ]
                    }
                  },
                  "allowedCurrencies": {
                    "type": "array",
                    "description": "The list of currencies allowed for the payment.",
                    "example": [
                      "usdc",
                      "usdt"
                    ],
                    "items": {
                      "type": "string",
                      "enum": [
                        "usdc",
                        "usdt",
                        "dai",
                        "btc",
                        "eth",
                        "matic",
                        "bnb",
                        "sol",
                        "busd",
                        "food",
                        "tfi"
                      ]
                    }
                  },
                  "preferredChainId": {
                    "type": "number",
                    "example": 1,
                    "description": "The preferred chain's id"
                  },
                  "preferredCurrency": {
                    "type": "string",
                    "enum": [
                      "usdc",
                      "usdt",
                      "dai",
                      "btc",
                      "eth",
                      "matic",
                      "bnb",
                      "sol",
                      "busd",
                      "food",
                      "tfi"
                    ],
                    "description": "The preferred currency for payment"
                  },
                  "allowSwap": {
                    "type": "boolean",
                    "description": "Whether the user can swap the payment currency",
                    "default": false
                  }
                },
                "required": [
                  "id"
                ]
              }
            ]
          },
          "webhookEndpoints": {
            "description": "Organization webhook endpoints",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "line1": {
                  "type": "string"
                },
                "line2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          },
          "withdrawalAddresses": {
            "description": "Organization withdrawal addresses",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Withdrawal address id"
                },
                "name": {
                  "type": "string",
                  "description": "Withdrawal address name"
                },
                "address": {
                  "type": "string",
                  "description": "Withdrawal address"
                },
                "chainId": {
                  "type": "number",
                  "example": 1,
                  "description": "Withdrawal address chain id"
                },
                "isDefault": {
                  "type": "boolean",
                  "description": "Is default withdrawal address"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Withdrawal address creation date"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Withdrawal address update date"
                }
              },
              "required": [
                "id",
                "name",
                "address",
                "chainId",
                "isDefault",
                "createdAt",
                "updatedAt"
              ]
            }
          },
          "personalAccessToken": {
            "description": "Organization personal access token to access organization' API",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "tokenIdentifier": {
                    "type": "string"
                  },
                  "organizationId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "tokenIdentifier",
                  "organizationId",
                  "userId",
                  "createdAt",
                  "updatedAt",
                  "token"
                ]
              }
            ]
          }
        },
        "required": [
          "organization",
          "user",
          "paymentSetting",
          "webhookEndpoints",
          "withdrawalAddresses",
          "personalAccessToken"
        ]
      }
    }
  }
}